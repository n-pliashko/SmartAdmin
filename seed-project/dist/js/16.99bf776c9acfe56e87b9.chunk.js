webpackJsonp([16],{510:function(e,n){e.exports=function(e){"undefined"!=typeof execScript?execScript(e):eval.call(null,e)}},511:function(e,n,t){"use strict";function r(e,n){var t={};for(var r in e)n.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function i(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function o(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var s=t(0),l=t.n(s),d=t(512),p=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),c=function(e){function n(){return a(this,n),i(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return o(n,e),p(n,[{key:"getStats",value:function(){return{income:{total:"$47,171",values:[1300,1877,2500,2577,2e3,2100,3e3,2700,3631,2471,2700,3631,2471]},traffic:{total:"45%",values:[110,150,300,130,400,240,220,310,220,300,270,210]},orders:{total:"2447",values:[110,150,300,130,400,240,220,310,220,300,270,210]}}}},{key:"render",value:function(){var e=this.props,n=e.className,t=(r(e,["className"]),this.getStats());return l.a.createElement("div",{className:"col-xs-12 col-sm-5 col-md-5 col-lg-8"},l.a.createElement("ul",{id:"sparks",className:n},l.a.createElement("li",{className:"sparks-info"},l.a.createElement("h5",null," My Income ",l.a.createElement("span",{className:"txt-color-blue"}," ",t.income.total)),l.a.createElement(d.a,{values:t.income.values,className:"txt-color-blue hidden-mobile hidden-md hidden-sm"}," ")),l.a.createElement("li",{className:"sparks-info"},l.a.createElement("h5",null," Site Traffic ",l.a.createElement("span",{className:"txt-color-purple"},l.a.createElement("i",{className:"fa fa-arrow-circle-up"})," ",t.traffic.total)),l.a.createElement(d.a,{values:t.traffic.values,className:"txt-color-purple hidden-mobile hidden-md hidden-sm"})),l.a.createElement("li",{className:"sparks-info"},l.a.createElement("h5",null," Site Orders ",l.a.createElement("span",{className:"txt-color-greenDark"},l.a.createElement("i",{className:"fa fa-shopping-cart"})," ",t.orders.total)),l.a.createElement(d.a,{values:t.orders.values,className:"txt-color-greenDark hidden-mobile hidden-md hidden-sm"}))))}}]),n}(l.a.Component),h=c,u=h;n.a=u;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(c,"Stats","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/common/Stats.js"),__REACT_HOT_LOADER__.register(h,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/common/Stats.js"),__REACT_HOT_LOADER__.register(u,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/common/Stats.js"))}()},512:function(e,n,t){"use strict";function r(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function a(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function i(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}t.d(n,"a",function(){return f});var o=t(519),s=(t.n(o),t(0)),l=t.n(s),d=t(17),p=(t.n(d),function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}()),c=function(e){function n(){return r(this,n),a(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return i(n,e),p(n,[{key:"barChart",value:function(e){var n=e.data("sparkline-bar-color")||e.css("color")||"#0000f0",t=e.data("sparkline-height")||"26px",r=e.data("sparkline-barwidth")||5,a=e.data("sparkline-barspacing")||2,i=e.data("sparkline-negbar-color")||"#A90329",o=e.data("sparkline-barstacked-color")||["#A90329","#0099c6","#98AA56","#da532c","#4490B1","#6E9461","#990099","#B4CAD3"];e.sparkline(this.props.values||"html",{barColor:n,type:"bar",height:t,barWidth:r,barSpacing:a,stackedBarColor:o,negBarColor:i,zeroAxis:"false",tooltipContainer:this.container})}},{key:"lineChart",value:function(e){var n=e.data("sparkline-height")||"20px",t=e.data("sparkline-width")||"90px",r=e.data("sparkline-line-color")||e.css("color")||"#0000f0",a=e.data("sparkline-line-width")||1,i=e.data("fill-color")||"#c0d0f0",o=e.data("sparkline-spot-color")||"#f08000",s=e.data("sparkline-minspot-color")||"#ed1c24",l=e.data("sparkline-maxspot-color")||"#f08000",d=e.data("sparkline-highlightspot-color")||"#50f050",p=e.data("sparkline-highlightline-color")||"f02020",c=e.data("sparkline-spotradius")||1.5,h=e.data("sparkline-min-y"),u=e.data("sparkline-max-y"),f=e.data("sparkline-min-x"),g=e.data("sparkline-max-x"),m=e.data("min-val"),v=e.data("max-val"),w=e.data("norm-color")||"#c0c0c0",b=e.data("draw-normal")||!1;e.sparkline(this.props.values||"html",{type:"line",width:t,height:n,lineWidth:a,lineColor:r,fillColor:i,spotColor:o,minSpotColor:s,maxSpotColor:l,highlightSpotColor:d,highlightLineColor:p,spotRadius:c,chartRangeMin:h,chartRangeMax:u,chartRangeMinX:f,chartRangeMaxX:g,normalRangeMin:m,normalRangeMax:v,normalRangeColor:w,drawNormalOnTop:b,tooltipContainer:this.container})}},{key:"pieChart",value:function(e){var n=e.data("sparkline-piecolor")||["#B4CAD3","#4490B1","#98AA56","#da532c","#6E9461","#0099c6","#990099","#717D8A"],t=e.data("sparkline-piesize")||90,r=e.data("border-color")||"#45494C",a=e.data("sparkline-offset")||0;e.sparkline(this.props.values||"html",{type:"pie",width:t,height:t,tooltipFormat:'<span style="color: {{color}}">&#9679;</span> ({{percent.1}}%)',sliceColors:n,borderWidth:1,offset:a,borderColor:r,tooltipContainer:this.container})}},{key:"boxChart",value:function(e){var n=e.data("sparkline-width")||"auto",t=e.data("sparkline-height")||"auto",r=e.data("sparkline-boxraw"),a=e.data("sparkline-targetval"),i=e.data("sparkline-min"),o=e.data("sparkline-max"),s=e.data("sparkline-showoutlier")||!0,l=e.data("sparkline-outlier-iqr")||1.5,d=e.data("sparkline-spotradius")||1.5,p=e.css("color")||"#000000",c=e.data("fill-color")||"#c0d0f0",h=e.data("sparkline-whis-color")||"#000000",u=e.data("sparkline-outline-color")||"#303030",f=e.data("sparkline-outlinefill-color")||"#f0f0f0",g=e.data("sparkline-outlinemedian-color")||"#f00000",m=e.data("sparkline-outlinetarget-color")||"#40a020";e.sparkline(this.props.values||"html",{type:"box",width:n,height:t,raw:r,target:a,minValue:i,maxValue:o,showOutliers:s,outlierIQR:l,spotRadius:d,boxLineColor:p,boxFillColor:c,whiskerColor:h,outlierLineColor:u,outlierFillColor:f,medianColor:g,targetColor:m,tooltipContainer:this.container})}},{key:"bulletChart",value:function(e){var n=e.data("sparkline-height")||"auto",t=e.data("sparkline-width")||2,r=e.data("sparkline-bullet-color")||"#ed1c24",a=e.data("sparkline-performance-color")||"#3030f0",i=e.data("sparkline-bulletrange-color")||["#d3dafe","#a8b6ff","#7f94ff"];e.sparkline(this.props.values||"html",{type:"bullet",height:n,targetWidth:t,targetColor:r,performanceColor:a,rangeColors:i,tooltipContainer:this.container})}},{key:"discreteChart",value:function(e){var n=e.data("sparkline-height")||26,t=e.data("sparkline-width")||50,r=e.css("color"),a=e.data("sparkline-line-height")||5,i=e.data("sparkline-threshold"),o=e.data("sparkline-threshold-color")||"#ed1c24";e.sparkline(this.props.values||"html",{type:"discrete",width:t,height:n,lineColor:r,lineHeight:a,thresholdValue:i,thresholdColor:o,tooltipContainer:this.container})}},{key:"tristaneChart",value:function(e){var n=e.data("sparkline-height")||26,t=e.data("sparkline-posbar-color")||"#60f060",r=e.data("sparkline-negbar-color")||"#f04040",a=e.data("sparkline-zerobar-color")||"#909090",i=e.data("sparkline-barwidth")||5,o=e.data("sparkline-barspacing")||2,s=e.data("sparkline-zeroaxis");e.sparkline(this.props.values||"html",{type:"tristate",height:n,posBarColor:t,negBarColor:r,zeroBarColor:a,barWidth:i,barSpacing:o,zeroAxis:s,tooltipContainer:this.container})}},{key:"compositeBarChart",value:function(e){var n=e.data("sparkline-height")||"20px",t=e.data("sparkline-width")||"100%",r=e.data("sparkline-barwidth")||3,a=e.data("sparkline-line-width")||1,i=e.data("sparkline-color-top")||"#ed1c24",o=e.data("sparkline-color-bottom")||"#333333";e.sparkline(e.data("sparkline-bar-val"),{type:"bar",width:t,height:n,barColor:o,barWidth:r,tooltipContainer:this.container}),e.sparkline(e.data("sparkline-line-val"),{width:t,height:n,lineColor:i,lineWidth:a,composite:!0,fillColor:!1,tooltipContainer:this.container})}},{key:"compositeLineChart",value:function(e){var n=e.data("sparkline-height"),t=e.data("sparkline-width"),r=e.data("sparkline-bar-val"),a=e.data("sparkline-bar-val-spots-top"),i=e.data("sparkline-bar-val-spots-bottom"),o=e.data("sparkline-line-width-top"),s=e.data("sparkline-line-width-bottom"),l=e.data("sparkline-color-top"),d=e.data("sparkline-color-bottom"),p=e.data("sparkline-spotradius-top"),c=e.data("sparkline-spotradius-bottom"),h=e.data("sparkline-spot-color"),u=e.data("sparkline-minspot-color-top"),f=e.data("sparkline-maxspot-color-top"),g=e.data("sparkline-minspot-color-bottom"),m=e.data("sparkline-maxspot-color-bottom"),v=e.data("sparkline-highlightspot-color-top"),w=e.data("sparkline-highlightline-color-top"),b=e.data("sparkline-highlightspot-color-bottom"),y=e.data("sparkline-highlightline-color-bottom"),_=e.data("sparkline-fillcolor-top"),x=e.data("sparkline-fillcolor-bottom");e.sparkline(r,{type:"line",spotRadius:p,spotColor:h,minSpotColor:u,maxSpotColor:f,highlightSpotColor:v,highlightLineColor:w,valueSpots:a,lineWidth:o,width:t,height:n,lineColor:l,fillColor:_,tooltipContainer:this.container}),e.sparkline(e.data("sparkline-line-val"),{type:"line",spotRadius:c,spotColor:h,minSpotColor:g,maxSpotColor:m,highlightSpotColor:b,highlightLineColor:y,valueSpots:i,lineWidth:s,width:t,height:n,lineColor:d,composite:!0,fillColor:x,tooltipContainer:this.container})}},{key:"drawElement",value:function(e){var n=$(e),t=n.data("sparkline-type")||"bar";"bar"==t&&this.barChart(n),"line"==t&&this.lineChart(n),"pie"==t&&this.pieChart(n),"box"==t&&this.boxChart(n),"bullet"==t&&this.bulletChart(n),"discrete"==t&&this.discreteChart(n),"tristate"==t&&this.tristaneChart(n),"compositebar"==t&&this.compositeBarChart(n),"compositeline"==t&&this.compositeLineChart(n)}},{key:"drawSparklines",value:function(){var e=this,n=t.i(d.findDOMNode)(this);if(this.props.values)this.drawElement(n);else{var r=$(n).find(".sparkline:not(:has(>canvas))");[].forEach.call(r,function(n){e.drawElement(n)})}}},{key:"componentDidUpdate",value:function(){this.drawSparklines()}},{key:"componentDidMount",value:function(){this.drawSparklines()}},{key:"render",value:function(){var e=this.props.className+(this.props.values?" sparkline":"");return l.a.createElement("div",{className:e},this.props.children)}}]),n}(l.a.Component),h=c,u=h,f=function(e){function n(){return r(this,n),a(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return i(n,e),n}(c);!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(c,"SparklineContainer","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/graphs/inline/SparklineContainer.js"),__REACT_HOT_LOADER__.register(f,"Sparkline","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/graphs/inline/SparklineContainer.js"),__REACT_HOT_LOADER__.register(h,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/graphs/inline/SparklineContainer.js"),__REACT_HOT_LOADER__.register(u,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/graphs/inline/SparklineContainer.js"))}()},513:function(e,n,t){"use strict";var r=t(511),a=(t(532),t(514)),i=t(517),o=t(515);t.d(n,"b",function(){return r.a}),t.d(n,"a",function(){return a.a}),t.d(n,"c",function(){return i.a}),t.d(n,"d",function(){return o.a})},514:function(e,n,t){"use strict";function r(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function a(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function i(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=t(0),s=t.n(o),l=t(70),d=t.n(l),p=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),c=function(e){function n(e){r(this,n);var t=a(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e));return t.state={items:t.props.items||[],icon:t.props.icon||"fa fa-fw fa-home"},t}return i(n,e),p(n,[{key:"componentWillMount",value:function(){}},{key:"onNavigationChange",value:function(e){var n=e.item;n.route&&(this.state.items=[],this.state.icon="",this._addCrumb(n),this.forceUpdate())}},{key:"_addCrumb",value:function(e){this.state.items.unshift(e.title),!this.state.icon&&e.icon&&(this.state.icon=e.icon),e.parent&&this._addCrumb(e.parent)}},{key:"render",value:function(){var e=d.a.head(this.state.items);return s.a.createElement("div",{className:this.props.className+" big-breadcrumbs"},s.a.createElement("h1",{className:"page-title txt-color-blueDark"},s.a.createElement("i",{className:this.state.icon})," "+e,d.a.tail(this.state.items).map(function(e){return s.a.createElement("span",{key:d.a.uniqueId("big-breadcrumb-")},s.a.createElement("span",{className:"page-title-separator"},">"),e)})))}}]),n}(s.a.Component),h=c,u=h;n.a=u;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(c,"BigBreadcrumbs","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/navigation/components/BigBreadcrumbs.js"),__REACT_HOT_LOADER__.register(h,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/navigation/components/BigBreadcrumbs.js"),__REACT_HOT_LOADER__.register(u,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/navigation/components/BigBreadcrumbs.js"))}()},515:function(e,n,t){"use strict";function r(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function a(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function i(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=t(0),s=t.n(o),l=t(6),d=t.n(l),p=t(17),c=(t.n(p),Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}),h=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),u=function(e){function n(e){return r(this,n),a(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e))}return i(n,e),h(n,[{key:"componentWillMount",value:function(){}},{key:"genId",value:function(){if(this.props.name)return this.props.name;var e="jarviswidget-"+n.counter++;return e=e.toLowerCase().replace(/\W+/gm,"-"),e=location.pathname.substr(1).replace(/\//g,"-")+"--"+e}},{key:"render",value:function(){var e=this,n=this.props.color?"jarviswidget-color-"+this.props.color:"",t=d()("jarviswidget",n,{"jarviswidget-sortable":1==this.props.sortable}),r={};return this.widgetId=this.genId(),["colorbutton","editbutton","togglebutton","deletebutton","fullscreenbutton","custombutton","sortable"].forEach(function(n){e.props[n]||(r["data-widget-"+n]=!1)}),["hidden","collapsed"].forEach(function(n){e.props[n]&&(r["data-widget-"+n]=!0)}),["refresh","load"].forEach(function(n){e.props[n]&&(r["data-widget-"+n]=e.props[n])}),s.a.createElement("div",c({className:t,id:this.widgetId,ref:"widget"},r),this.props.children)}},{key:"componentDidMount",value:function(){$(this.refs[this.widgetId]).find(".widget-body").prepend("")}}]),n}(s.a.Component);u.counter=0,u.defaultProps={colorbutton:!0,editbutton:!0,togglebutton:!0,deletebutton:!0,fullscreenbutton:!0,custombutton:!1,collapsed:!1,sortable:!0,hidden:!1,color:!1,load:!1,refresh:!1};var f=u,g=f;n.a=g,u.Body=s.a.createClass({displayName:"Body",render:function(){var e=c({},this.props),n=e.children,t=e.props;return s.a.createElement("div",t,this.props.editbutton?s.a.createElement("div",{className:"jarviswidget-editbox"},s.a.createElement("input",{className:"form-control",type:"text"})):null,s.a.createElement("div",{className:"widget-body"},n))}});!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(u,"JarvisWidget","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/widgets/JarvisWidget.js"),__REACT_HOT_LOADER__.register(f,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/widgets/JarvisWidget.js"),__REACT_HOT_LOADER__.register(g,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/widgets/JarvisWidget.js"))}()},516:function(e,n,t){"use strict";var r={grid:"article",widgets:".jarviswidget",localStorage:!0,deleteSettingsKey:"#deletesettingskey-options",settingsKeyLabel:"Reset settings?",deletePositionKey:"#deletepositionkey-options",positionKeyLabel:"Reset position?",sortable:!0,buttonsHidden:!1,toggleButton:!0,toggleClass:"fa fa-minus | fa fa-plus",toggleSpeed:200,onToggle:function(){},deleteButton:!0,deleteMsg:"Warning: This action cannot be undone!",deleteClass:"fa fa-times",deleteSpeed:200,onDelete:function(){},editButton:!0,editPlaceholder:".jarviswidget-editbox",editClass:"fa fa-cog | fa fa-save",editSpeed:200,onEdit:function(){},colorButton:!0,fullscreenButton:!0,fullscreenClass:"fa fa-expand | fa fa-compress",fullscreenDiff:3,onFullscreen:function(){},customButton:!1,customClass:"folder-10 | next-10",customStart:function(){alert("Hello you, this is a custom button...")},customEnd:function(){alert("bye, till next time...")},buttonOrder:"%refresh% %custom% %edit% %toggle% %fullscreen% %delete%",opacity:1,dragHandle:"> header",placeholderClass:"jarviswidget-placeholder",indicator:!0,indicatorTime:600,ajax:!0,timestampPlaceholder:".jarviswidget-timestamp",timestampFormat:"Last update: %m%/%d%/%y% %h%:%i%:%s%",refreshButton:!0,refreshButtonClass:"fa fa-refresh",labelError:"Sorry but there was a error:",labelUpdated:"Last Update:",labelRefresh:"Refresh",labelDelete:"Delete widget:",afterLoad:function(){},rtl:!1,onChange:function(){},onSave:function(){},ajaxnav:!0},a=r;n.a=a;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(r,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/widgets/WidgetDefaults.js"),__REACT_HOT_LOADER__.register(a,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/widgets/WidgetDefaults.js"))}()},517:function(e,n,t){"use strict";function r(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function a(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function i(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=t(520),s=(t.n(o),t(0)),l=t.n(s),d=t(516),p=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),c=function(e){function n(){return r(this,n),a(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return i(n,e),p(n,[{key:"render",value:function(){var e=this;return l.a.createElement("section",{id:"widget-grid",ref:function(n){return e.grid=n}},this.props.children)}},{key:"componentDidMount",value:function(){$(this.grid).jarvisWidgets(d.a)}}]),n}(l.a.Component),h=c,u=h;n.a=u;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(c,"WidgetGrid","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/widgets/WidgetGrid.js"),__REACT_HOT_LOADER__.register(h,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/widgets/WidgetGrid.js"),__REACT_HOT_LOADER__.register(u,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/widgets/WidgetGrid.js"))}()},518:function(e,n){e.exports="/**\n*\n* jquery.sparkline.js\n*\n* v@VERSION@\n* (c) Splunk, Inc\n* Contact: Gareth Watts (gareth@splunk.com)\n* http://omnipotent.net/jquery.sparkline/\n*\n* Generates inline sparkline charts from data supplied either to the method\n* or inline in HTML\n*\n* Compatible with Internet Explorer 6.0+ and modern browsers equipped with the canvas tag\n* (Firefox 2.0+, Safari, Opera, etc)\n*\n* License: New BSD License\n*\n* Copyright (c) 2012, Splunk Inc.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*\n*     * Redistributions of source code must retain the above copyright notice,\n*       this list of conditions and the following disclaimer.\n*     * Redistributions in binary form must reproduce the above copyright notice,\n*       this list of conditions and the following disclaimer in the documentation\n*       and/or other materials provided with the distribution.\n*     * Neither the name of Splunk Inc nor the names of its contributors may\n*       be used to endorse or promote products derived from this software without\n*       specific prior written permission.\n*\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\n* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT\n* SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT\n* OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*\n*\n* Usage:\n*  $(selector).sparkline(values, options)\n*\n* If values is undefined or set to 'html' then the data values are read from the specified tag:\n*   <p>Sparkline: <span class=\"sparkline\">1,4,6,6,8,5,3,5</span></p>\n*   $('.sparkline').sparkline();\n* There must be no spaces in the enclosed data set\n*\n* Otherwise values must be an array of numbers or null values\n*    <p>Sparkline: <span id=\"sparkline1\">This text replaced if the browser is compatible</span></p>\n*    $('#sparkline1').sparkline([1,4,6,6,8,5,3,5])\n*    $('#sparkline2').sparkline([1,4,6,null,null,5,3,5])\n*\n* Values can also be specified in an HTML comment, or as a values attribute:\n*    <p>Sparkline: <span class=\"sparkline\">\x3c!--1,4,6,6,8,5,3,5 --\x3e</span></p>\n*    <p>Sparkline: <span class=\"sparkline\" values=\"1,4,6,6,8,5,3,5\"></span></p>\n*    $('.sparkline').sparkline();\n*\n* For line charts, x values can also be specified:\n*   <p>Sparkline: <span class=\"sparkline\">1:1,2.7:4,3.4:6,5:6,6:8,8.7:5,9:3,10:5</span></p>\n*    $('#sparkline1').sparkline([ [1,1], [2.7,4], [3.4,6], [5,6], [6,8], [8.7,5], [9,3], [10,5] ])\n*\n* By default, options should be passed in as the second argument to the sparkline function:\n*   $('.sparkline').sparkline([1,2,3,4], {type: 'bar'})\n*\n* Options can also be set by passing them on the tag itself.  This feature is disabled by default though\n* as there's a slight performance overhead:\n*   $('.sparkline').sparkline([1,2,3,4], {enableTagOptions: true})\n*   <p>Sparkline: <span class=\"sparkline\" sparkType=\"bar\" sparkBarColor=\"red\">loading</span></p>\n* Prefix all options supplied as tag attribute with \"spark\" (configurable by setting tagOptionsPrefix)\n*\n* Supported options:\n*   lineColor - Color of the line used for the chart\n*   fillColor - Color used to fill in the chart - Set to '' or false for a transparent chart\n*   width - Width of the chart - Defaults to 3 times the number of values in pixels\n*   height - Height of the chart - Defaults to the height of the containing element\n*   chartRangeMin - Specify the minimum value to use for the Y range of the chart - Defaults to the minimum value supplied\n*   chartRangeMax - Specify the maximum value to use for the Y range of the chart - Defaults to the maximum value supplied\n*   chartRangeClip - Clip out of range values to the max/min specified by chartRangeMin and chartRangeMax\n*   chartRangeMinX - Specify the minimum value to use for the X range of the chart - Defaults to the minimum value supplied\n*   chartRangeMaxX - Specify the maximum value to use for the X range of the chart - Defaults to the maximum value supplied\n*   composite - If true then don't erase any existing chart attached to the tag, but draw\n*           another chart over the top - Note that width and height are ignored if an\n*           existing chart is detected.\n*   tagValuesAttribute - Name of tag attribute to check for data values - Defaults to 'values'\n*   enableTagOptions - Whether to check tags for sparkline options\n*   tagOptionsPrefix - Prefix used for options supplied as tag attributes - Defaults to 'spark'\n*   disableHiddenCheck - If set to true, then the plugin will assume that charts will never be drawn into a\n*           hidden dom element, avoding a browser reflow\n*   disableInteraction - If set to true then all mouseover/click interaction behaviour will be disabled,\n*       making the plugin perform much like it did in 1.x\n*   disableTooltips - If set to true then tooltips will be disabled - Defaults to false (tooltips enabled)\n*   disableHighlight - If set to true then highlighting of selected chart elements on mouseover will be disabled\n*       defaults to false (highlights enabled)\n*   highlightLighten - Factor to lighten/darken highlighted chart values by - Defaults to 1.4 for a 40% increase\n*   tooltipContainer - Specify which DOM element the tooltip should be rendered into - defaults to document.body\n*   tooltipClassname - Optional CSS classname to apply to tooltips - If not specified then a default style will be applied\n*   tooltipOffsetX - How many pixels away from the mouse pointer to render the tooltip on the X axis\n*   tooltipOffsetY - How many pixels away from the mouse pointer to render the tooltip on the r axis\n*   tooltipFormatter  - Optional callback that allows you to override the HTML displayed in the tooltip\n*       callback is given arguments of (sparkline, options, fields)\n*   tooltipChartTitle - If specified then the tooltip uses the string specified by this setting as a title\n*   tooltipFormat - A format string or SPFormat object  (or an array thereof for multiple entries)\n*       to control the format of the tooltip\n*   tooltipPrefix - A string to prepend to each field displayed in a tooltip\n*   tooltipSuffix - A string to append to each field displayed in a tooltip\n*   tooltipSkipNull - If true then null values will not have a tooltip displayed (defaults to true)\n*   tooltipValueLookups - An object or range map to map field values to tooltip strings\n*       (eg. to map -1 to \"Lost\", 0 to \"Draw\", and 1 to \"Win\")\n*   numberFormatter - Optional callback for formatting numbers in tooltips\n*   numberDigitGroupSep - Character to use for group separator in numbers \"1,234\" - Defaults to \",\"\n*   numberDecimalMark - Character to use for the decimal point when formatting numbers - Defaults to \".\"\n*   numberDigitGroupCount - Number of digits between group separator - Defaults to 3\n*\n* There are 7 types of sparkline, selected by supplying a \"type\" option of 'line' (default),\n* 'bar', 'tristate', 'bullet', 'discrete', 'pie' or 'box'\n*    line - Line chart.  Options:\n*       spotColor - Set to '' to not end each line in a circular spot\n*       minSpotColor - If set, color of spot at minimum value\n*       maxSpotColor - If set, color of spot at maximum value\n*       spotRadius - Radius in pixels\n*       lineWidth - Width of line in pixels\n*       normalRangeMin\n*       normalRangeMax - If set draws a filled horizontal bar between these two values marking the \"normal\"\n*                      or expected range of values\n*       normalRangeColor - Color to use for the above bar\n*       drawNormalOnTop - Draw the normal range above the chart fill color if true\n*       defaultPixelsPerValue - Defaults to 3 pixels of width for each value in the chart\n*       highlightSpotColor - The color to use for drawing a highlight spot on mouseover - Set to null to disable\n*       highlightLineColor - The color to use for drawing a highlight line on mouseover - Set to null to disable\n*       valueSpots - Specify which points to draw spots on, and in which color.  Accepts a range map\n*\n*   bar - Bar chart.  Options:\n*       barColor - Color of bars for postive values\n*       negBarColor - Color of bars for negative values\n*       zeroColor - Color of bars with zero values\n*       nullColor - Color of bars with null values - Defaults to omitting the bar entirely\n*       barWidth - Width of bars in pixels\n*       colorMap - Optional mappnig of values to colors to override the *BarColor values above\n*                  can be an Array of values to control the color of individual bars or a range map\n*                  to specify colors for individual ranges of values\n*       barSpacing - Gap between bars in pixels\n*       zeroAxis - Centers the y-axis around zero if true\n*\n*   tristate - Charts values of win (>0), lose (<0) or draw (=0)\n*       posBarColor - Color of win values\n*       negBarColor - Color of lose values\n*       zeroBarColor - Color of draw values\n*       barWidth - Width of bars in pixels\n*       barSpacing - Gap between bars in pixels\n*       colorMap - Optional mappnig of values to colors to override the *BarColor values above\n*                  can be an Array of values to control the color of individual bars or a range map\n*                  to specify colors for individual ranges of values\n*\n*   discrete - Options:\n*       lineHeight - Height of each line in pixels - Defaults to 30% of the graph height\n*       thesholdValue - Values less than this value will be drawn using thresholdColor instead of lineColor\n*       thresholdColor\n*\n*   bullet - Values for bullet graphs msut be in the order: target, performance, range1, range2, range3, ...\n*       options:\n*       targetColor - The color of the vertical target marker\n*       targetWidth - The width of the target marker in pixels\n*       performanceColor - The color of the performance measure horizontal bar\n*       rangeColors - Colors to use for each qualitative range background color\n*\n*   pie - Pie chart. Options:\n*       sliceColors - An array of colors to use for pie slices\n*       offset - Angle in degrees to offset the first slice - Try -90 or +90\n*       borderWidth - Width of border to draw around the pie chart, in pixels - Defaults to 0 (no border)\n*       borderColor - Color to use for the pie chart border - Defaults to #000\n*\n*   box - Box plot. Options:\n*       raw - Set to true to supply pre-computed plot points as values\n*             values should be: low_outlier, low_whisker, q1, median, q3, high_whisker, high_outlier\n*             When set to false you can supply any number of values and the box plot will\n*             be computed for you.  Default is false.\n*       showOutliers - Set to true (default) to display outliers as circles\n*       outlierIQR - Interquartile range used to determine outliers.  Default 1.5\n*       boxLineColor - Outline color of the box\n*       boxFillColor - Fill color for the box\n*       whiskerColor - Line color used for whiskers\n*       outlierLineColor - Outline color of outlier circles\n*       outlierFillColor - Fill color of the outlier circles\n*       spotRadius - Radius of outlier circles\n*       medianColor - Line color of the median line\n*       target - Draw a target cross hair at the supplied value (default undefined)\n*\n*\n*\n*   Examples:\n*   $('#sparkline1').sparkline(myvalues, { lineColor: '#f00', fillColor: false });\n*   $('.barsparks').sparkline('html', { type:'bar', height:'40px', barWidth:5 });\n*   $('#tristate').sparkline([1,1,-1,1,0,0,-1], { type:'tristate' }):\n*   $('#discrete').sparkline([1,3,4,5,5,3,4,5], { type:'discrete' });\n*   $('#bullet').sparkline([10,12,12,9,7], { type:'bullet' });\n*   $('#pie').sparkline([1,1,2], { type:'pie' });\n*/\n\n/*jslint regexp: true, browser: true, jquery: true, white: true, nomen: false, plusplus: false, maxerr: 500, indent: 4 */\n\n(function(document, Math, undefined) { // performance/minified-size optimization\n(function(factory) {\n    if(typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (jQuery && !jQuery.fn.sparkline) {\n        factory(jQuery);\n    }\n}\n(function($) {\n    'use strict';\n\n    var UNSET_OPTION = {},\n        getDefaults, createClass, SPFormat, clipval, quartile, normalizeValue, normalizeValues,\n        remove, isNumber, all, sum, addCSS, ensureArray, formatNumber, RangeMap,\n        MouseHandler, Tooltip, barHighlightMixin,\n        line, bar, tristate, discrete, bullet, pie, box, defaultStyles, initStyles,\n        VShape, VCanvas_base, VCanvas_canvas, VCanvas_vml, pending, shapeCount = 0;\n\n\n    /**\n     * Default configuration settings\n     */\n    getDefaults = function () {\n        return {\n            // Settings common to most/all chart types\n            common: {\n                type: 'line',\n                lineColor: '#00f',\n                fillColor: '#cdf',\n                defaultPixelsPerValue: 3,\n                width: 'auto',\n                height: 'auto',\n                composite: false,\n                tagValuesAttribute: 'values',\n                tagOptionsPrefix: 'spark',\n                enableTagOptions: false,\n                enableHighlight: true,\n                highlightLighten: 1.4,\n                tooltipSkipNull: true,\n                tooltipPrefix: '',\n                tooltipSuffix: '',\n                disableHiddenCheck: false,\n                numberFormatter: false,\n                numberDigitGroupCount: 3,\n                numberDigitGroupSep: ',',\n                numberDecimalMark: '.',\n                disableTooltips: false,\n                disableInteraction: false\n            },\n            // Defaults for line charts\n            line: {\n                spotColor: '#f80',\n                highlightSpotColor: '#5f5',\n                highlightLineColor: '#f22',\n                spotRadius: 1.5,\n                minSpotColor: '#f80',\n                maxSpotColor: '#f80',\n                lineWidth: 1,\n                normalRangeMin: undefined,\n                normalRangeMax: undefined,\n                normalRangeColor: '#ccc',\n                drawNormalOnTop: false,\n                chartRangeMin: undefined,\n                chartRangeMax: undefined,\n                chartRangeMinX: undefined,\n                chartRangeMaxX: undefined,\n                tooltipFormat: new SPFormat('<span style=\"color: {{color}}\">&#9679;</span> {{prefix}}{{y}}{{suffix}}')\n            },\n            // Defaults for bar charts\n            bar: {\n                barColor: '#3366cc',\n                negBarColor: '#f44',\n                stackedBarColor: ['#3366cc', '#dc3912', '#ff9900', '#109618', '#66aa00',\n                    '#dd4477', '#0099c6', '#990099'],\n                zeroColor: undefined,\n                nullColor: undefined,\n                zeroAxis: true,\n                barWidth: 4,\n                barSpacing: 1,\n                chartRangeMax: undefined,\n                chartRangeMin: undefined,\n                chartRangeClip: false,\n                colorMap: undefined,\n                tooltipFormat: new SPFormat('<span style=\"color: {{color}}\">&#9679;</span> {{prefix}}{{value}}{{suffix}}')\n            },\n            // Defaults for tristate charts\n            tristate: {\n                barWidth: 4,\n                barSpacing: 1,\n                posBarColor: '#6f6',\n                negBarColor: '#f44',\n                zeroBarColor: '#999',\n                colorMap: {},\n                tooltipFormat: new SPFormat('<span style=\"color: {{color}}\">&#9679;</span> {{value:map}}'),\n                tooltipValueLookups: { map: { '-1': 'Loss', '0': 'Draw', '1': 'Win' } }\n            },\n            // Defaults for discrete charts\n            discrete: {\n                lineHeight: 'auto',\n                thresholdColor: undefined,\n                thresholdValue: 0,\n                chartRangeMax: undefined,\n                chartRangeMin: undefined,\n                chartRangeClip: false,\n                tooltipFormat: new SPFormat('{{prefix}}{{value}}{{suffix}}')\n            },\n            // Defaults for bullet charts\n            bullet: {\n                targetColor: '#f33',\n                targetWidth: 3, // width of the target bar in pixels\n                performanceColor: '#33f',\n                rangeColors: ['#d3dafe', '#a8b6ff', '#7f94ff'],\n                base: undefined, // set this to a number to change the base start number\n                tooltipFormat: new SPFormat('{{fieldkey:fields}} - {{value}}'),\n                tooltipValueLookups: { fields: {r: 'Range', p: 'Performance', t: 'Target'} }\n            },\n            // Defaults for pie charts\n            pie: {\n                offset: 0,\n                sliceColors: ['#3366cc', '#dc3912', '#ff9900', '#109618', '#66aa00',\n                    '#dd4477', '#0099c6', '#990099'],\n                borderWidth: 0,\n                borderColor: '#000',\n                tooltipFormat: new SPFormat('<span style=\"color: {{color}}\">&#9679;</span> {{value}} ({{percent.1}}%)')\n            },\n            // Defaults for box plots\n            box: {\n                raw: false,\n                boxLineColor: '#000',\n                boxFillColor: '#cdf',\n                whiskerColor: '#000',\n                outlierLineColor: '#333',\n                outlierFillColor: '#fff',\n                medianColor: '#f00',\n                showOutliers: true,\n                outlierIQR: 1.5,\n                spotRadius: 1.5,\n                target: undefined,\n                targetColor: '#4a2',\n                chartRangeMax: undefined,\n                chartRangeMin: undefined,\n                tooltipFormat: new SPFormat('{{field:fields}}: {{value}}'),\n                tooltipFormatFieldlistKey: 'field',\n                tooltipValueLookups: { fields: { lq: 'Lower Quartile', med: 'Median',\n                    uq: 'Upper Quartile', lo: 'Left Outlier', ro: 'Right Outlier',\n                    lw: 'Left Whisker', rw: 'Right Whisker'} }\n            }\n        };\n    };\n\n    // You can have tooltips use a css class other than jqstooltip by specifying tooltipClassname\n    defaultStyles = '.jqstooltip { ' +\n            'position: absolute;' +\n            'left: 0px;' +\n            'top: 0px;' +\n            'visibility: hidden;' +\n            'background: rgb(0, 0, 0) transparent;' +\n            'background-color: rgba(0,0,0,0.6);' +\n            'filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000);' +\n            '-ms-filter: \"progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000)\";' +\n            'color: white;' +\n            'font: 10px arial, san serif;' +\n            'text-align: left;' +\n            'white-space: nowrap;' +\n            'padding: 5px;' +\n            'border: 1px solid white;' +\n            'box-sizing: content-box;' +\n            'z-index: 10000;' +\n            '}' +\n            '.jqsfield { ' +\n            'color: white;' +\n            'font: 10px arial, san serif;' +\n            'text-align: left;' +\n            '}';\n\n\n    /**\n     * Utilities\n     */\n\n    createClass = function (/* [baseclass, [mixin, ...]], definition */) {\n        var Class, args;\n        Class = function () {\n            this.init.apply(this, arguments);\n        };\n        if (arguments.length > 1) {\n            if (arguments[0]) {\n                Class.prototype = $.extend(new arguments[0](), arguments[arguments.length - 1]);\n                Class._super = arguments[0].prototype;\n            } else {\n                Class.prototype = arguments[arguments.length - 1];\n            }\n            if (arguments.length > 2) {\n                args = Array.prototype.slice.call(arguments, 1, -1);\n                args.unshift(Class.prototype);\n                $.extend.apply($, args);\n            }\n        } else {\n            Class.prototype = arguments[0];\n        }\n        Class.prototype.cls = Class;\n        return Class;\n    };\n\n    /**\n     * Wraps a format string for tooltips\n     * {{x}}\n     * {{x.2}\n     * {{x:months}}\n     */\n    $.SPFormatClass = SPFormat = createClass({\n        fre: /\\{\\{([\\w.]+?)(:(.+?))?\\}\\}/g,\n        precre: /(\\w+)\\.(\\d+)/,\n\n        init: function (format, fclass) {\n            this.format = format;\n            this.fclass = fclass;\n        },\n\n        render: function (fieldset, lookups, options) {\n            var self = this,\n                fields = fieldset,\n                match, token, lookupkey, fieldvalue, prec;\n            return this.format.replace(this.fre, function () {\n                var lookup;\n                token = arguments[1];\n                lookupkey = arguments[3];\n                match = self.precre.exec(token);\n                if (match) {\n                    prec = match[2];\n                    token = match[1];\n                } else {\n                    prec = false;\n                }\n                fieldvalue = fields[token];\n                if (fieldvalue === undefined) {\n                    return '';\n                }\n                if (lookupkey && lookups && lookups[lookupkey]) {\n                    lookup = lookups[lookupkey];\n                    if (lookup.get) { // RangeMap\n                        return lookups[lookupkey].get(fieldvalue) || fieldvalue;\n                    } else {\n                        return lookups[lookupkey][fieldvalue] || fieldvalue;\n                    }\n                }\n                if (isNumber(fieldvalue)) {\n                    if (options.get('numberFormatter')) {\n                        fieldvalue = options.get('numberFormatter')(fieldvalue);\n                    } else {\n                        fieldvalue = formatNumber(fieldvalue, prec,\n                            options.get('numberDigitGroupCount'),\n                            options.get('numberDigitGroupSep'),\n                            options.get('numberDecimalMark'));\n                    }\n                }\n                return fieldvalue;\n            });\n        }\n    });\n\n    // convience method to avoid needing the new operator\n    $.spformat = function(format, fclass) {\n        return new SPFormat(format, fclass);\n    };\n\n    clipval = function (val, min, max) {\n        if (val < min) {\n            return min;\n        }\n        if (val > max) {\n            return max;\n        }\n        return val;\n    };\n\n    quartile = function (values, q) {\n        var vl;\n        if (q === 2) {\n            vl = Math.floor(values.length / 2);\n            return values.length % 2 ? values[vl] : (values[vl-1] + values[vl]) / 2;\n        } else {\n            if (values.length % 2 ) { // odd\n                vl = (values.length * q + q) / 4;\n                return vl % 1 ? (values[Math.floor(vl)] + values[Math.floor(vl) - 1]) / 2 : values[vl-1];\n            } else { //even\n                vl = (values.length * q + 2) / 4;\n                return vl % 1 ? (values[Math.floor(vl)] + values[Math.floor(vl) - 1]) / 2 :  values[vl-1];\n\n            }\n        }\n    };\n\n    normalizeValue = function (val) {\n        var nf;\n        switch (val) {\n            case 'undefined':\n                val = undefined;\n                break;\n            case 'null':\n                val = null;\n                break;\n            case 'true':\n                val = true;\n                break;\n            case 'false':\n                val = false;\n                break;\n            default:\n                nf = parseFloat(val);\n                if (val == nf) {\n                    val = nf;\n                }\n        }\n        return val;\n    };\n\n    normalizeValues = function (vals) {\n        var i, result = [];\n        for (i = vals.length; i--;) {\n            result[i] = normalizeValue(vals[i]);\n        }\n        return result;\n    };\n\n    remove = function (vals, filter) {\n        var i, vl, result = [];\n        for (i = 0, vl = vals.length; i < vl; i++) {\n            if (vals[i] !== filter) {\n                result.push(vals[i]);\n            }\n        }\n        return result;\n    };\n\n    isNumber = function (num) {\n        return !isNaN(parseFloat(num)) && isFinite(num);\n    };\n\n    formatNumber = function (num, prec, groupsize, groupsep, decsep) {\n        var p, i;\n        num = (prec === false ? parseFloat(num).toString() : num.toFixed(prec)).split('');\n        p = (p = $.inArray('.', num)) < 0 ? num.length : p;\n        if (p < num.length) {\n            num[p] = decsep;\n        }\n        for (i = p - groupsize; i > 0; i -= groupsize) {\n            num.splice(i, 0, groupsep);\n        }\n        return num.join('');\n    };\n\n    // determine if all values of an array match a value\n    // returns true if the array is empty\n    all = function (val, arr, ignoreNull) {\n        var i;\n        for (i = arr.length; i--; ) {\n            if (ignoreNull && arr[i] === null) continue;\n            if (arr[i] !== val) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    // sums the numeric values in an array, ignoring other values\n    sum = function (vals) {\n        var total = 0, i;\n        for (i = vals.length; i--;) {\n            total += typeof vals[i] === 'number' ? vals[i] : 0;\n        }\n        return total;\n    };\n\n    ensureArray = function (val) {\n        return $.isArray(val) ? val : [val];\n    };\n\n    // http://paulirish.com/2008/bookmarklet-inject-new-css-rules/\n    addCSS = function(css) {\n        var tag, iefail;\n        if (document.createStyleSheet) {\n            try {\n                document.createStyleSheet().cssText = css;\n                return;\n            } catch (e) {\n                // IE <= 9 maxes out at 31 stylesheets; inject into page instead.\n                iefail = true;\n            }\n        }\n        tag = document.createElement('style');\n        tag.type = 'text/css';\n        document.getElementsByTagName('head')[0].appendChild(tag);\n        if (iefail) {\n            document.styleSheets[document.styleSheets.length - 1].cssText = css;\n        } else {\n            tag[(typeof document.body.style.WebkitAppearance == 'string') /* webkit only */ ? 'innerText' : 'innerHTML'] = css;\n        }\n    };\n\n\n    // Provide a cross-browser interface to a few simple drawing primitives\n    $.fn.simpledraw = function (width, height, useExisting, interact) {\n        var target, mhandler;\n        if (useExisting && (target = this.data('_jqs_vcanvas'))) {\n            return target;\n        }\n\n        if ($.fn.sparkline.canvas === false) {\n            // We've already determined that neither Canvas nor VML are available\n            return false;\n\n        } else if ($.fn.sparkline.canvas === undefined) {\n            // No function defined yet -- need to see if we support Canvas or VML\n            var el = document.createElement('canvas');\n            if (!!(el.getContext && el.getContext('2d'))) {\n                // Canvas is available\n                $.fn.sparkline.canvas = function(width, height, target, interact) {\n                    return new VCanvas_canvas(width, height, target, interact);\n                };\n            } else if (document.namespaces && !document.namespaces.v) {\n                // VML is available\n                document.namespaces.add('v', 'urn:schemas-microsoft-com:vml', '#default#VML');\n                $.fn.sparkline.canvas = function(width, height, target, interact) {\n                    return new VCanvas_vml(width, height, target);\n                };\n            } else {\n                // Neither Canvas nor VML are available\n                $.fn.sparkline.canvas = false;\n                return false;\n            }\n        }\n\n        if (width === undefined) {\n            width = $(this).innerWidth();\n        }\n        if (height === undefined) {\n            height = $(this).innerHeight();\n        }\n\n        target = $.fn.sparkline.canvas(width, height, this, interact);\n\n        mhandler = $(this).data('_jqs_mhandler');\n        if (mhandler) {\n            mhandler.registerCanvas(target);\n        }\n        return target;\n    };\n\n    $.fn.cleardraw = function () {\n        var target = this.data('_jqs_vcanvas');\n        if (target) {\n            target.reset();\n        }\n    };\n\n\n    $.RangeMapClass = RangeMap = createClass({\n        init: function (map) {\n            var key, range, rangelist = [];\n            for (key in map) {\n                if (map.hasOwnProperty(key) && typeof key === 'string' && key.indexOf(':') > -1) {\n                    range = key.split(':');\n                    range[0] = range[0].length === 0 ? -Infinity : parseFloat(range[0]);\n                    range[1] = range[1].length === 0 ? Infinity : parseFloat(range[1]);\n                    range[2] = map[key];\n                    rangelist.push(range);\n                }\n            }\n            this.map = map;\n            this.rangelist = rangelist || false;\n        },\n\n        get: function (value) {\n            var rangelist = this.rangelist,\n                i, range, result;\n            if ((result = this.map[value]) !== undefined) {\n                return result;\n            }\n            if (rangelist) {\n                for (i = rangelist.length; i--;) {\n                    range = rangelist[i];\n                    if (range[0] <= value && range[1] >= value) {\n                        return range[2];\n                    }\n                }\n            }\n            return undefined;\n        }\n    });\n\n    // Convenience function\n    $.range_map = function(map) {\n        return new RangeMap(map);\n    };\n\n\n    MouseHandler = createClass({\n        init: function (el, options) {\n            var $el = $(el);\n            this.$el = $el;\n            this.options = options;\n            this.currentPageX = 0;\n            this.currentPageY = 0;\n            this.el = el;\n            this.splist = [];\n            this.tooltip = null;\n            this.over = false;\n            this.displayTooltips = !options.get('disableTooltips');\n            this.highlightEnabled = !options.get('disableHighlight');\n        },\n\n        registerSparkline: function (sp) {\n            this.splist.push(sp);\n            if (this.over) {\n                this.updateDisplay();\n            }\n        },\n\n        registerCanvas: function (canvas) {\n            var $canvas = $(canvas.canvas);\n            this.canvas = canvas;\n            this.$canvas = $canvas;\n            $canvas.mouseenter($.proxy(this.mouseenter, this));\n            $canvas.mouseleave($.proxy(this.mouseleave, this));\n            $canvas.click($.proxy(this.mouseclick, this));\n        },\n\n        reset: function (removeTooltip) {\n            this.splist = [];\n            if (this.tooltip && removeTooltip) {\n                this.tooltip.remove();\n                this.tooltip = undefined;\n            }\n        },\n\n        mouseclick: function (e) {\n            var clickEvent = $.Event('sparklineClick');\n            clickEvent.originalEvent = e;\n            clickEvent.sparklines = this.splist;\n            this.$el.trigger(clickEvent);\n        },\n\n        mouseenter: function (e) {\n            $(document.body).unbind('mousemove.jqs');\n            $(document.body).bind('mousemove.jqs', $.proxy(this.mousemove, this));\n            this.over = true;\n            this.currentPageX = e.pageX;\n            this.currentPageY = e.pageY;\n            this.currentEl = e.target;\n            if (!this.tooltip && this.displayTooltips) {\n                this.tooltip = new Tooltip(this.options);\n                this.tooltip.updatePosition(e.pageX, e.pageY);\n            }\n            this.updateDisplay();\n        },\n\n        mouseleave: function () {\n            $(document.body).unbind('mousemove.jqs');\n            var splist = this.splist,\n                 spcount = splist.length,\n                 needsRefresh = false,\n                 sp, i;\n            this.over = false;\n            this.currentEl = null;\n\n            if (this.tooltip) {\n                this.tooltip.remove();\n                this.tooltip = null;\n            }\n\n            for (i = 0; i < spcount; i++) {\n                sp = splist[i];\n                if (sp.clearRegionHighlight()) {\n                    needsRefresh = true;\n                }\n            }\n\n            if (needsRefresh) {\n                this.canvas.render();\n            }\n        },\n\n        mousemove: function (e) {\n            this.currentPageX = e.pageX;\n            this.currentPageY = e.pageY;\n            this.currentEl = e.target;\n            if (this.tooltip) {\n                this.tooltip.updatePosition(e.pageX, e.pageY);\n            }\n            this.updateDisplay();\n        },\n\n        updateDisplay: function () {\n            var splist = this.splist,\n                 spcount = splist.length,\n                 needsRefresh = false,\n                 offset = this.$canvas.offset(),\n                 localX = this.currentPageX - offset.left,\n                 localY = this.currentPageY - offset.top,\n                 tooltiphtml, sp, i, result, changeEvent;\n            if (!this.over) {\n                return;\n            }\n            for (i = 0; i < spcount; i++) {\n                sp = splist[i];\n                result = sp.setRegionHighlight(this.currentEl, localX, localY);\n                if (result) {\n                    needsRefresh = true;\n                }\n            }\n            if (needsRefresh) {\n                changeEvent = $.Event('sparklineRegionChange');\n                changeEvent.sparklines = this.splist;\n                this.$el.trigger(changeEvent);\n                if (this.tooltip) {\n                    tooltiphtml = '';\n                    for (i = 0; i < spcount; i++) {\n                        sp = splist[i];\n                        tooltiphtml += sp.getCurrentRegionTooltip();\n                    }\n                    this.tooltip.setContent(tooltiphtml);\n                }\n                if (!this.disableHighlight) {\n                    this.canvas.render();\n                }\n            }\n            if (result === null) {\n                this.mouseleave();\n            }\n        }\n    });\n\n\n    Tooltip = createClass({\n        sizeStyle: 'position: static !important;' +\n            'display: block !important;' +\n            'visibility: hidden !important;' +\n            'float: left !important;',\n\n        init: function (options) {\n            var tooltipClassname = options.get('tooltipClassname', 'jqstooltip'),\n                sizetipStyle = this.sizeStyle,\n                offset;\n            this.container = options.get('tooltipContainer') || document.body;\n            this.tooltipOffsetX = options.get('tooltipOffsetX', 10);\n            this.tooltipOffsetY = options.get('tooltipOffsetY', 12);\n            // remove any previous lingering tooltip\n            $('#jqssizetip').remove();\n            $('#jqstooltip').remove();\n            this.sizetip = $('<div/>', {\n                id: 'jqssizetip',\n                style: sizetipStyle,\n                'class': tooltipClassname\n            });\n            this.tooltip = $('<div/>', {\n                id: 'jqstooltip',\n                'class': tooltipClassname\n            }).appendTo(this.container);\n            // account for the container's location\n            offset = this.tooltip.offset();\n            this.offsetLeft = offset.left;\n            this.offsetTop = offset.top;\n            this.hidden = true;\n            $(window).unbind('resize.jqs scroll.jqs');\n            $(window).bind('resize.jqs scroll.jqs', $.proxy(this.updateWindowDims, this));\n            this.updateWindowDims();\n        },\n\n        updateWindowDims: function () {\n            this.scrollTop = $(window).scrollTop();\n            this.scrollLeft = $(window).scrollLeft();\n            this.scrollRight = this.scrollLeft + $(window).width();\n            this.updatePosition();\n        },\n\n        getSize: function (content) {\n            this.sizetip.html(content).appendTo(this.container);\n            this.width = this.sizetip.width() + 1;\n            this.height = this.sizetip.height();\n            this.sizetip.remove();\n        },\n\n        setContent: function (content) {\n            if (!content) {\n                this.tooltip.css('visibility', 'hidden');\n                this.hidden = true;\n                return;\n            }\n            this.getSize(content);\n            this.tooltip.html(content)\n                .css({\n                    'width': this.width,\n                    'height': this.height,\n                    'visibility': 'visible'\n                });\n            if (this.hidden) {\n                this.hidden = false;\n                this.updatePosition();\n            }\n        },\n\n        updatePosition: function (x, y) {\n            if (x === undefined) {\n                if (this.mousex === undefined) {\n                    return;\n                }\n                x = this.mousex - this.offsetLeft;\n                y = this.mousey - this.offsetTop;\n\n            } else {\n                this.mousex = x = x - this.offsetLeft;\n                this.mousey = y = y - this.offsetTop;\n            }\n            if (!this.height || !this.width || this.hidden) {\n                return;\n            }\n\n            y -= this.height + this.tooltipOffsetY;\n            x += this.tooltipOffsetX;\n\n            if (y < this.scrollTop) {\n                y = this.scrollTop;\n            }\n            if (x < this.scrollLeft) {\n                x = this.scrollLeft;\n            } else if (x + this.width > this.scrollRight) {\n                x = this.scrollRight - this.width;\n            }\n\n            this.tooltip.css({\n                'left': x,\n                'top': y\n            });\n        },\n\n        remove: function () {\n            this.tooltip.remove();\n            this.sizetip.remove();\n            this.sizetip = this.tooltip = undefined;\n            $(window).unbind('resize.jqs scroll.jqs');\n        }\n    });\n\n\n    initStyles = function() {\n        addCSS(defaultStyles);\n    };\n\n    $(initStyles);\n\n    pending = [];\n    $.fn.sparkline = function (userValues, userOptions) {\n        return this.each(function () {\n            var options = new $.fn.sparkline.options(this, userOptions),\n                 $this = $(this),\n                 render, i;\n            render = function () {\n                var values, width, height, tmp, mhandler, sp, vals;\n                if (userValues === 'html' || userValues === undefined) {\n                    vals = this.getAttribute(options.get('tagValuesAttribute'));\n                    if (vals === undefined || vals === null) {\n                        vals = $this.html();\n                    }\n                    values = vals.replace(/(^\\s*\x3c!--)|(--\x3e\\s*$)|\\s+/g, '').split(',');\n                } else {\n                    values = userValues;\n                }\n\n                width = options.get('width') === 'auto' ? values.length * options.get('defaultPixelsPerValue') : options.get('width');\n                if (options.get('height') === 'auto') {\n                    if (!options.get('composite') || !$.data(this, '_jqs_vcanvas')) {\n                        // must be a better way to get the line height\n                        tmp = document.createElement('span');\n                        tmp.innerHTML = 'a';\n                        $this.html(tmp);\n                        height = $(tmp).innerHeight() || $(tmp).height();\n                        $(tmp).remove();\n                        tmp = null;\n                    }\n                } else {\n                    height = options.get('height');\n                }\n\n                if (!options.get('disableInteraction')) {\n                    mhandler = $.data(this, '_jqs_mhandler');\n                    if (!mhandler) {\n                        mhandler = new MouseHandler(this, options);\n                        $.data(this, '_jqs_mhandler', mhandler);\n                    } else if (!options.get('composite')) {\n                        mhandler.reset();\n                    }\n                } else {\n                    mhandler = false;\n                }\n\n                if (options.get('composite') && !$.data(this, '_jqs_vcanvas')) {\n                    if (!$.data(this, '_jqs_errnotify')) {\n                        alert('Attempted to attach a composite sparkline to an element with no existing sparkline');\n                        $.data(this, '_jqs_errnotify', true);\n                    }\n                    return;\n                }\n\n                sp = new $.fn.sparkline[options.get('type')](this, values, options, width, height);\n\n                sp.render();\n\n                if (mhandler) {\n                    mhandler.registerSparkline(sp);\n                }\n            };\n            if (($(this).html() && !options.get('disableHiddenCheck') && $(this).is(':hidden')) || !$(this).parents('body').length) {\n                if (!options.get('composite') && $.data(this, '_jqs_pending')) {\n                    // remove any existing references to the element\n                    for (i = pending.length; i; i--) {\n                        if (pending[i - 1][0] == this) {\n                            pending.splice(i - 1, 1);\n                        }\n                    }\n                }\n                pending.push([this, render]);\n                $.data(this, '_jqs_pending', true);\n            } else {\n                render.call(this);\n            }\n        });\n    };\n\n    $.fn.sparkline.defaults = getDefaults();\n\n\n    $.sparkline_display_visible = function () {\n        var el, i, pl;\n        var done = [];\n        for (i = 0, pl = pending.length; i < pl; i++) {\n            el = pending[i][0];\n            if ($(el).is(':visible') && !$(el).parents().is(':hidden')) {\n                pending[i][1].call(el);\n                $.data(pending[i][0], '_jqs_pending', false);\n                done.push(i);\n            } else if (!$(el).closest('html').length && !$.data(el, '_jqs_pending')) {\n                // element has been inserted and removed from the DOM\n                // If it was not yet inserted into the dom then the .data request\n                // will return true.\n                // removing from the dom causes the data to be removed.\n                $.data(pending[i][0], '_jqs_pending', false);\n                done.push(i);\n            }\n        }\n        for (i = done.length; i; i--) {\n            pending.splice(done[i - 1], 1);\n        }\n    };\n\n\n    /**\n     * User option handler\n     */\n    $.fn.sparkline.options = createClass({\n        init: function (tag, userOptions) {\n            var extendedOptions, defaults, base, tagOptionType;\n            this.userOptions = userOptions = userOptions || {};\n            this.tag = tag;\n            this.tagValCache = {};\n            defaults = $.fn.sparkline.defaults;\n            base = defaults.common;\n            this.tagOptionsPrefix = userOptions.enableTagOptions && (userOptions.tagOptionsPrefix || base.tagOptionsPrefix);\n\n            tagOptionType = this.getTagSetting('type');\n            if (tagOptionType === UNSET_OPTION) {\n                extendedOptions = defaults[userOptions.type || base.type];\n            } else {\n                extendedOptions = defaults[tagOptionType];\n            }\n            this.mergedOptions = $.extend({}, base, extendedOptions, userOptions);\n        },\n\n\n        getTagSetting: function (key) {\n            var prefix = this.tagOptionsPrefix,\n                val, i, pairs, keyval;\n            if (prefix === false || prefix === undefined) {\n                return UNSET_OPTION;\n            }\n            if (this.tagValCache.hasOwnProperty(key)) {\n                val = this.tagValCache.key;\n            } else {\n                val = this.tag.getAttribute(prefix + key);\n                if (val === undefined || val === null) {\n                    val = UNSET_OPTION;\n                } else if (val.substr(0, 1) === '[') {\n                    val = val.substr(1, val.length - 2).split(',');\n                    for (i = val.length; i--;) {\n                        val[i] = normalizeValue(val[i].replace(/(^\\s*)|(\\s*$)/g, ''));\n                    }\n                } else if (val.substr(0, 1) === '{') {\n                    pairs = val.substr(1, val.length - 2).split(',');\n                    val = {};\n                    for (i = pairs.length; i--;) {\n                        keyval = pairs[i].split(':', 2);\n                        val[keyval[0].replace(/(^\\s*)|(\\s*$)/g, '')] = normalizeValue(keyval[1].replace(/(^\\s*)|(\\s*$)/g, ''));\n                    }\n                } else {\n                    val = normalizeValue(val);\n                }\n                this.tagValCache.key = val;\n            }\n            return val;\n        },\n\n        get: function (key, defaultval) {\n            var tagOption = this.getTagSetting(key),\n                result;\n            if (tagOption !== UNSET_OPTION) {\n                return tagOption;\n            }\n            return (result = this.mergedOptions[key]) === undefined ? defaultval : result;\n        }\n    });\n\n\n    $.fn.sparkline._base = createClass({\n        disabled: false,\n\n        init: function (el, values, options, width, height) {\n            this.el = el;\n            this.$el = $(el);\n            this.values = values;\n            this.options = options;\n            this.width = width;\n            this.height = height;\n            this.currentRegion = undefined;\n        },\n\n        /**\n         * Setup the canvas\n         */\n        initTarget: function () {\n            var interactive = !this.options.get('disableInteraction');\n            if (!(this.target = this.$el.simpledraw(this.width, this.height, this.options.get('composite'), interactive))) {\n                this.disabled = true;\n            } else {\n                this.canvasWidth = this.target.pixelWidth;\n                this.canvasHeight = this.target.pixelHeight;\n            }\n        },\n\n        /**\n         * Actually render the chart to the canvas\n         */\n        render: function () {\n            if (this.disabled) {\n                this.el.innerHTML = '';\n                return false;\n            }\n            return true;\n        },\n\n        /**\n         * Return a region id for a given x/y co-ordinate\n         */\n        getRegion: function (x, y) {\n        },\n\n        /**\n         * Highlight an item based on the moused-over x,y co-ordinate\n         */\n        setRegionHighlight: function (el, x, y) {\n            var currentRegion = this.currentRegion,\n                highlightEnabled = !this.options.get('disableHighlight'),\n                newRegion;\n            if (x > this.canvasWidth || y > this.canvasHeight || x < 0 || y < 0) {\n                return null;\n            }\n            newRegion = this.getRegion(el, x, y);\n            if (currentRegion !== newRegion) {\n                if (currentRegion !== undefined && highlightEnabled) {\n                    this.removeHighlight();\n                }\n                this.currentRegion = newRegion;\n                if (newRegion !== undefined && highlightEnabled) {\n                    this.renderHighlight();\n                }\n                return true;\n            }\n            return false;\n        },\n\n        /**\n         * Reset any currently highlighted item\n         */\n        clearRegionHighlight: function () {\n            if (this.currentRegion !== undefined) {\n                this.removeHighlight();\n                this.currentRegion = undefined;\n                return true;\n            }\n            return false;\n        },\n\n        renderHighlight: function () {\n            this.changeHighlight(true);\n        },\n\n        removeHighlight: function () {\n            this.changeHighlight(false);\n        },\n\n        changeHighlight: function (highlight)  {},\n\n        /**\n         * Fetch the HTML to display as a tooltip\n         */\n        getCurrentRegionTooltip: function () {\n            var options = this.options,\n                header = '',\n                entries = [],\n                fields, formats, formatlen, fclass, text, i,\n                showFields, showFieldsKey, newFields, fv,\n                formatter, format, fieldlen, j;\n            if (this.currentRegion === undefined) {\n                return '';\n            }\n            fields = this.getCurrentRegionFields();\n            formatter = options.get('tooltipFormatter');\n            if (formatter) {\n                return formatter(this, options, fields);\n            }\n            if (options.get('tooltipChartTitle')) {\n                header += '<div class=\"jqs jqstitle\">' + options.get('tooltipChartTitle') + '</div>\\n';\n            }\n            formats = this.options.get('tooltipFormat');\n            if (!formats) {\n                return '';\n            }\n            if (!$.isArray(formats)) {\n                formats = [formats];\n            }\n            if (!$.isArray(fields)) {\n                fields = [fields];\n            }\n            showFields = this.options.get('tooltipFormatFieldlist');\n            showFieldsKey = this.options.get('tooltipFormatFieldlistKey');\n            if (showFields && showFieldsKey) {\n                // user-selected ordering of fields\n                newFields = [];\n                for (i = fields.length; i--;) {\n                    fv = fields[i][showFieldsKey];\n                    if ((j = $.inArray(fv, showFields)) != -1) {\n                        newFields[j] = fields[i];\n                    }\n                }\n                fields = newFields;\n            }\n            formatlen = formats.length;\n            fieldlen = fields.length;\n            for (i = 0; i < formatlen; i++) {\n                format = formats[i];\n                if (typeof format === 'string') {\n                    format = new SPFormat(format);\n                }\n                fclass = format.fclass || 'jqsfield';\n                for (j = 0; j < fieldlen; j++) {\n                    if (!fields[j].isNull || !options.get('tooltipSkipNull')) {\n                        $.extend(fields[j], {\n                            prefix: options.get('tooltipPrefix'),\n                            suffix: options.get('tooltipSuffix')\n                        });\n                        text = format.render(fields[j], options.get('tooltipValueLookups'), options);\n                        entries.push('<div class=\"' + fclass + '\">' + text + '</div>');\n                    }\n                }\n            }\n            if (entries.length) {\n                return header + entries.join('\\n');\n            }\n            return '';\n        },\n\n        getCurrentRegionFields: function () {},\n\n        calcHighlightColor: function (color, options) {\n            var highlightColor = options.get('highlightColor'),\n                lighten = options.get('highlightLighten'),\n                parse, mult, rgbnew, i;\n            if (highlightColor) {\n                return highlightColor;\n            }\n            if (lighten) {\n                // extract RGB values\n                parse = /^#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(color) || /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(color);\n                if (parse) {\n                    rgbnew = [];\n                    mult = color.length === 4 ? 16 : 1;\n                    for (i = 0; i < 3; i++) {\n                        rgbnew[i] = clipval(Math.round(parseInt(parse[i + 1], 16) * mult * lighten), 0, 255);\n                    }\n                    return 'rgb(' + rgbnew.join(',') + ')';\n                }\n\n            }\n            return color;\n        }\n\n    });\n\n    barHighlightMixin = {\n        changeHighlight: function (highlight) {\n            var currentRegion = this.currentRegion,\n                target = this.target,\n                shapeids = this.regionShapes[currentRegion],\n                newShapes;\n            // will be null if the region value was null\n            if (shapeids) {\n                newShapes = this.renderRegion(currentRegion, highlight);\n                if ($.isArray(newShapes) || $.isArray(shapeids)) {\n                    target.replaceWithShapes(shapeids, newShapes);\n                    this.regionShapes[currentRegion] = $.map(newShapes, function (newShape) {\n                        return newShape.id;\n                    });\n                } else {\n                    target.replaceWithShape(shapeids, newShapes);\n                    this.regionShapes[currentRegion] = newShapes.id;\n                }\n            }\n        },\n\n        render: function () {\n            var values = this.values,\n                target = this.target,\n                regionShapes = this.regionShapes,\n                shapes, ids, i, j;\n\n            if (!this.cls._super.render.call(this)) {\n                return;\n            }\n            for (i = values.length; i--;) {\n                shapes = this.renderRegion(i);\n                if (shapes) {\n                    if ($.isArray(shapes)) {\n                        ids = [];\n                        for (j = shapes.length; j--;) {\n                            shapes[j].append();\n                            ids.push(shapes[j].id);\n                        }\n                        regionShapes[i] = ids;\n                    } else {\n                        shapes.append();\n                        regionShapes[i] = shapes.id; // store just the shapeid\n                    }\n                } else {\n                    // null value\n                    regionShapes[i] = null;\n                }\n            }\n            target.render();\n        }\n    };\n\n\n    /**\n     * Line charts\n     */\n    $.fn.sparkline.line = line = createClass($.fn.sparkline._base, {\n        type: 'line',\n\n        init: function (el, values, options, width, height) {\n            line._super.init.call(this, el, values, options, width, height);\n            this.vertices = [];\n            this.regionMap = [];\n            this.xvalues = [];\n            this.yvalues = [];\n            this.yminmax = [];\n            this.hightlightSpotId = null;\n            this.lastShapeId = null;\n            this.initTarget();\n        },\n\n        getRegion: function (el, x, y) {\n            var i,\n                regionMap = this.regionMap; // maps regions to value positions\n            for (i = regionMap.length; i--;) {\n                if (regionMap[i] !== null && x >= regionMap[i][0] && x <= regionMap[i][1]) {\n                    return regionMap[i][2];\n                }\n            }\n            return undefined;\n        },\n\n        getCurrentRegionFields: function () {\n            var currentRegion = this.currentRegion;\n            return {\n                isNull: this.yvalues[currentRegion] === null,\n                x: this.xvalues[currentRegion],\n                y: this.yvalues[currentRegion],\n                color: this.options.get('lineColor'),\n                fillColor: this.options.get('fillColor'),\n                offset: currentRegion\n            };\n        },\n\n        renderHighlight: function () {\n            var currentRegion = this.currentRegion,\n                target = this.target,\n                vertex = this.vertices[currentRegion],\n                options = this.options,\n                spotRadius = options.get('spotRadius'),\n                highlightSpotColor = options.get('highlightSpotColor'),\n                highlightLineColor = options.get('highlightLineColor'),\n                highlightSpot, highlightLine;\n\n            if (!vertex) {\n                return;\n            }\n            if (spotRadius && highlightSpotColor) {\n                highlightSpot = target.drawCircle(vertex[0], vertex[1],\n                    spotRadius, undefined, highlightSpotColor);\n                this.highlightSpotId = highlightSpot.id;\n                target.insertAfterShape(this.lastShapeId, highlightSpot);\n            }\n            if (highlightLineColor) {\n                highlightLine = target.drawLine(vertex[0], this.canvasTop, vertex[0],\n                    this.canvasTop + this.canvasHeight, highlightLineColor);\n                this.highlightLineId = highlightLine.id;\n                target.insertAfterShape(this.lastShapeId, highlightLine);\n            }\n        },\n\n        removeHighlight: function () {\n            var target = this.target;\n            if (this.highlightSpotId) {\n                target.removeShapeId(this.highlightSpotId);\n                this.highlightSpotId = null;\n            }\n            if (this.highlightLineId) {\n                target.removeShapeId(this.highlightLineId);\n                this.highlightLineId = null;\n            }\n        },\n\n        scanValues: function () {\n            var values = this.values,\n                valcount = values.length,\n                xvalues = this.xvalues,\n                yvalues = this.yvalues,\n                yminmax = this.yminmax,\n                i, val, isStr, isArray, sp;\n            for (i = 0; i < valcount; i++) {\n                val = values[i];\n                isStr = typeof(values[i]) === 'string';\n                isArray = typeof(values[i]) === 'object' && values[i] instanceof Array;\n                sp = isStr && values[i].split(':');\n                if (isStr && sp.length === 2) { // x:y\n                    xvalues.push(Number(sp[0]));\n                    yvalues.push(Number(sp[1]));\n                    yminmax.push(Number(sp[1]));\n                } else if (isArray) {\n                    xvalues.push(val[0]);\n                    yvalues.push(val[1]);\n                    yminmax.push(val[1]);\n                } else {\n                    xvalues.push(i);\n                    if (values[i] === null || values[i] === 'null') {\n                        yvalues.push(null);\n                    } else {\n                        yvalues.push(Number(val));\n                        yminmax.push(Number(val));\n                    }\n                }\n            }\n            if (this.options.get('xvalues')) {\n                xvalues = this.options.get('xvalues');\n            }\n\n            this.maxy = this.maxyorg = Math.max.apply(Math, yminmax);\n            this.miny = this.minyorg = Math.min.apply(Math, yminmax);\n\n            this.maxx = Math.max.apply(Math, xvalues);\n            this.minx = Math.min.apply(Math, xvalues);\n\n            this.xvalues = xvalues;\n            this.yvalues = yvalues;\n            this.yminmax = yminmax;\n\n        },\n\n        processRangeOptions: function () {\n            var options = this.options,\n                normalRangeMin = options.get('normalRangeMin'),\n                normalRangeMax = options.get('normalRangeMax');\n\n            if (normalRangeMin !== undefined) {\n                if (normalRangeMin < this.miny) {\n                    this.miny = normalRangeMin;\n                }\n                if (normalRangeMax > this.maxy) {\n                    this.maxy = normalRangeMax;\n                }\n            }\n            if (options.get('chartRangeMin') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMin') < this.miny)) {\n                this.miny = options.get('chartRangeMin');\n            }\n            if (options.get('chartRangeMax') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMax') > this.maxy)) {\n                this.maxy = options.get('chartRangeMax');\n            }\n            if (options.get('chartRangeMinX') !== undefined && (options.get('chartRangeClipX') || options.get('chartRangeMinX') < this.minx)) {\n                this.minx = options.get('chartRangeMinX');\n            }\n            if (options.get('chartRangeMaxX') !== undefined && (options.get('chartRangeClipX') || options.get('chartRangeMaxX') > this.maxx)) {\n                this.maxx = options.get('chartRangeMaxX');\n            }\n\n        },\n\n        drawNormalRange: function (canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey) {\n            var normalRangeMin = this.options.get('normalRangeMin'),\n                normalRangeMax = this.options.get('normalRangeMax'),\n                ytop = canvasTop + Math.round(canvasHeight - (canvasHeight * ((normalRangeMax - this.miny) / rangey))),\n                height = Math.round((canvasHeight * (normalRangeMax - normalRangeMin)) / rangey);\n            this.target.drawRect(canvasLeft, ytop, canvasWidth, height, undefined, this.options.get('normalRangeColor')).append();\n        },\n\n        render: function () {\n            var options = this.options,\n                target = this.target,\n                canvasWidth = this.canvasWidth,\n                canvasHeight = this.canvasHeight,\n                vertices = this.vertices,\n                spotRadius = options.get('spotRadius'),\n                regionMap = this.regionMap,\n                rangex, rangey, yvallast,\n                canvasTop, canvasLeft,\n                vertex, path, paths, x, y, xnext, xpos, xposnext,\n                last, next, yvalcount, lineShapes, fillShapes, plen,\n                valueSpots, hlSpotsEnabled, color, xvalues, yvalues, i;\n\n            if (!line._super.render.call(this)) {\n                return;\n            }\n\n            this.scanValues();\n            this.processRangeOptions();\n\n            xvalues = this.xvalues;\n            yvalues = this.yvalues;\n\n            if (!this.yminmax.length || this.yvalues.length < 2) {\n                // empty or all null valuess\n                return;\n            }\n\n            canvasTop = canvasLeft = 0;\n\n            rangex = this.maxx - this.minx === 0 ? 1 : this.maxx - this.minx;\n            rangey = this.maxy - this.miny === 0 ? 1 : this.maxy - this.miny;\n            yvallast = this.yvalues.length - 1;\n\n            if (spotRadius && (canvasWidth < (spotRadius * 4) || canvasHeight < (spotRadius * 4))) {\n                spotRadius = 0;\n            }\n            if (spotRadius) {\n                // adjust the canvas size as required so that spots will fit\n                hlSpotsEnabled = options.get('highlightSpotColor') &&  !options.get('disableInteraction');\n                if (hlSpotsEnabled || options.get('minSpotColor') || (options.get('spotColor') && yvalues[yvallast] === this.miny)) {\n                    canvasHeight -= Math.ceil(spotRadius);\n                }\n                if (hlSpotsEnabled || options.get('maxSpotColor') || (options.get('spotColor') && yvalues[yvallast] === this.maxy)) {\n                    canvasHeight -= Math.ceil(spotRadius);\n                    canvasTop += Math.ceil(spotRadius);\n                }\n                if (hlSpotsEnabled ||\n                     ((options.get('minSpotColor') || options.get('maxSpotColor')) && (yvalues[0] === this.miny || yvalues[0] === this.maxy))) {\n                    canvasLeft += Math.ceil(spotRadius);\n                    canvasWidth -= Math.ceil(spotRadius);\n                }\n                if (hlSpotsEnabled || options.get('spotColor') ||\n                    (options.get('minSpotColor') || options.get('maxSpotColor') &&\n                        (yvalues[yvallast] === this.miny || yvalues[yvallast] === this.maxy))) {\n                    canvasWidth -= Math.ceil(spotRadius);\n                }\n            }\n\n\n            canvasHeight--;\n\n            if (options.get('normalRangeMin') !== undefined && !options.get('drawNormalOnTop')) {\n                this.drawNormalRange(canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey);\n            }\n\n            path = [];\n            paths = [path];\n            last = next = null;\n            yvalcount = yvalues.length;\n            for (i = 0; i < yvalcount; i++) {\n                x = xvalues[i];\n                xnext = xvalues[i + 1];\n                y = yvalues[i];\n                xpos = canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex));\n                xposnext = i < yvalcount - 1 ? canvasLeft + Math.round((xnext - this.minx) * (canvasWidth / rangex)) : canvasWidth;\n                next = xpos + ((xposnext - xpos) / 2);\n                regionMap[i] = [last || 0, next, i];\n                last = next;\n                if (y === null) {\n                    if (i) {\n                        if (yvalues[i - 1] !== null) {\n                            path = [];\n                            paths.push(path);\n                        }\n                        vertices.push(null);\n                    }\n                } else {\n                    if (y < this.miny) {\n                        y = this.miny;\n                    }\n                    if (y > this.maxy) {\n                        y = this.maxy;\n                    }\n                    if (!path.length) {\n                        // previous value was null\n                        path.push([xpos, canvasTop + canvasHeight]);\n                    }\n                    vertex = [xpos, canvasTop + Math.round(canvasHeight - (canvasHeight * ((y - this.miny) / rangey)))];\n                    path.push(vertex);\n                    vertices.push(vertex);\n                }\n            }\n\n            lineShapes = [];\n            fillShapes = [];\n            plen = paths.length;\n            for (i = 0; i < plen; i++) {\n                path = paths[i];\n                if (path.length) {\n                    if (options.get('fillColor')) {\n                        path.push([path[path.length - 1][0], (canvasTop + canvasHeight)]);\n                        fillShapes.push(path.slice(0));\n                        path.pop();\n                    }\n                    // if there's only a single point in this path, then we want to display it\n                    // as a vertical line which means we keep path[0]  as is\n                    if (path.length > 2) {\n                        // else we want the first value\n                        path[0] = [path[0][0], path[1][1]];\n                    }\n                    lineShapes.push(path);\n                }\n            }\n\n            // draw the fill first, then optionally the normal range, then the line on top of that\n            plen = fillShapes.length;\n            for (i = 0; i < plen; i++) {\n                target.drawShape(fillShapes[i],\n                    options.get('fillColor'), options.get('fillColor')).append();\n            }\n\n            if (options.get('normalRangeMin') !== undefined && options.get('drawNormalOnTop')) {\n                this.drawNormalRange(canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey);\n            }\n\n            plen = lineShapes.length;\n            for (i = 0; i < plen; i++) {\n                target.drawShape(lineShapes[i], options.get('lineColor'), undefined,\n                    options.get('lineWidth')).append();\n            }\n\n            if (spotRadius && options.get('valueSpots')) {\n                valueSpots = options.get('valueSpots');\n                if (valueSpots.get === undefined) {\n                    valueSpots = new RangeMap(valueSpots);\n                }\n                for (i = 0; i < yvalcount; i++) {\n                    color = valueSpots.get(yvalues[i]);\n                    if (color) {\n                        target.drawCircle(canvasLeft + Math.round((xvalues[i] - this.minx) * (canvasWidth / rangex)),\n                            canvasTop + Math.round(canvasHeight - (canvasHeight * ((yvalues[i] - this.miny) / rangey))),\n                            spotRadius, undefined,\n                            color).append();\n                    }\n                }\n\n            }\n            if (spotRadius && options.get('spotColor') && yvalues[yvallast] !== null) {\n                target.drawCircle(canvasLeft + Math.round((xvalues[xvalues.length - 1] - this.minx) * (canvasWidth / rangex)),\n                    canvasTop + Math.round(canvasHeight - (canvasHeight * ((yvalues[yvallast] - this.miny) / rangey))),\n                    spotRadius, undefined,\n                    options.get('spotColor')).append();\n            }\n            if (this.maxy !== this.minyorg) {\n                if (spotRadius && options.get('minSpotColor')) {\n                    x = xvalues[$.inArray(this.minyorg, yvalues)];\n                    target.drawCircle(canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex)),\n                        canvasTop + Math.round(canvasHeight - (canvasHeight * ((this.minyorg - this.miny) / rangey))),\n                        spotRadius, undefined,\n                        options.get('minSpotColor')).append();\n                }\n                if (spotRadius && options.get('maxSpotColor')) {\n                    x = xvalues[$.inArray(this.maxyorg, yvalues)];\n                    target.drawCircle(canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex)),\n                        canvasTop + Math.round(canvasHeight - (canvasHeight * ((this.maxyorg - this.miny) / rangey))),\n                        spotRadius, undefined,\n                        options.get('maxSpotColor')).append();\n                }\n            }\n\n            this.lastShapeId = target.getLastShapeId();\n            this.canvasTop = canvasTop;\n            target.render();\n        }\n    });\n\n\n    /**\n     * Bar charts\n     */\n    $.fn.sparkline.bar = bar = createClass($.fn.sparkline._base, barHighlightMixin, {\n        type: 'bar',\n\n        init: function (el, values, options, width, height) {\n            var barWidth = parseInt(options.get('barWidth'), 10),\n                barSpacing = parseInt(options.get('barSpacing'), 10),\n                chartRangeMin = options.get('chartRangeMin'),\n                chartRangeMax = options.get('chartRangeMax'),\n                chartRangeClip = options.get('chartRangeClip'),\n                stackMin = Infinity,\n                stackMax = -Infinity,\n                isStackString, groupMin, groupMax, stackRanges,\n                numValues, i, vlen, range, zeroAxis, xaxisOffset, min, max, clipMin, clipMax,\n                stacked, vlist, j, slen, svals, val, yoffset, yMaxCalc, canvasHeightEf;\n            bar._super.init.call(this, el, values, options, width, height);\n\n            // scan values to determine whether to stack bars\n            for (i = 0, vlen = values.length; i < vlen; i++) {\n                val = values[i];\n                isStackString = typeof(val) === 'string' && val.indexOf(':') > -1;\n                if (isStackString || $.isArray(val)) {\n                    stacked = true;\n                    if (isStackString) {\n                        val = values[i] = normalizeValues(val.split(':'));\n                    }\n                    val = remove(val, null); // min/max will treat null as zero\n                    groupMin = Math.min.apply(Math, val);\n                    groupMax = Math.max.apply(Math, val);\n                    if (groupMin < stackMin) {\n                        stackMin = groupMin;\n                    }\n                    if (groupMax > stackMax) {\n                        stackMax = groupMax;\n                    }\n                }\n            }\n\n            this.stacked = stacked;\n            this.regionShapes = {};\n            this.barWidth = barWidth;\n            this.barSpacing = barSpacing;\n            this.totalBarWidth = barWidth + barSpacing;\n            this.width = width = (values.length * barWidth) + ((values.length - 1) * barSpacing);\n\n            this.initTarget();\n\n            if (chartRangeClip) {\n                clipMin = chartRangeMin === undefined ? -Infinity : chartRangeMin;\n                clipMax = chartRangeMax === undefined ? Infinity : chartRangeMax;\n            }\n\n            numValues = [];\n            stackRanges = stacked ? [] : numValues;\n            var stackTotals = [];\n            var stackRangesNeg = [];\n            for (i = 0, vlen = values.length; i < vlen; i++) {\n                if (stacked) {\n                    vlist = values[i];\n                    values[i] = svals = [];\n                    stackTotals[i] = 0;\n                    stackRanges[i] = stackRangesNeg[i] = 0;\n                    for (j = 0, slen = vlist.length; j < slen; j++) {\n                        val = svals[j] = chartRangeClip ? clipval(vlist[j], clipMin, clipMax) : vlist[j];\n                        if (val !== null) {\n                            if (val > 0) {\n                                stackTotals[i] += val;\n                            }\n                            if (stackMin < 0 && stackMax > 0) {\n                                if (val < 0) {\n                                    stackRangesNeg[i] += Math.abs(val);\n                                } else {\n                                    stackRanges[i] += val;\n                                }\n                            } else {\n                                stackRanges[i] += Math.abs(val - (val < 0 ? stackMax : stackMin));\n                            }\n                            numValues.push(val);\n                        }\n                    }\n                } else {\n                    val = chartRangeClip ? clipval(values[i], clipMin, clipMax) : values[i];\n                    val = values[i] = normalizeValue(val);\n                    if (val !== null) {\n                        numValues.push(val);\n                    }\n                }\n            }\n            this.max = max = Math.max.apply(Math, numValues);\n            this.min = min = Math.min.apply(Math, numValues);\n            this.stackMax = stackMax = stacked ? Math.max.apply(Math, stackTotals) : max;\n            this.stackMin = stackMin = stacked ? Math.min.apply(Math, numValues) : min;\n\n            if (options.get('chartRangeMin') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMin') < min)) {\n                min = options.get('chartRangeMin');\n            }\n            if (options.get('chartRangeMax') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMax') > max)) {\n                max = options.get('chartRangeMax');\n            }\n\n            this.zeroAxis = zeroAxis = options.get('zeroAxis', true);\n            if (min <= 0 && max >= 0 && zeroAxis) {\n                xaxisOffset = 0;\n            } else if (zeroAxis == false) {\n                xaxisOffset = min;\n            } else if (min > 0) {\n                xaxisOffset = min;\n            } else {\n                xaxisOffset = max;\n            }\n            this.xaxisOffset = xaxisOffset;\n\n            range = stacked ? (Math.max.apply(Math, stackRanges) + Math.max.apply(Math, stackRangesNeg)) : max - min;\n\n            // as we plot zero/min values a single pixel line, we add a pixel to all other\n            // values - Reduce the effective canvas size to suit\n            this.canvasHeightEf = (zeroAxis && min < 0) ? this.canvasHeight - 2 : this.canvasHeight - 1;\n\n            if (min < xaxisOffset) {\n                yMaxCalc = (stacked && max >= 0) ? stackMax : max;\n                yoffset = (yMaxCalc - xaxisOffset) / range * this.canvasHeight;\n                if (yoffset !== Math.ceil(yoffset)) {\n                    this.canvasHeightEf -= 2;\n                    yoffset = Math.ceil(yoffset);\n                }\n            } else {\n                yoffset = this.canvasHeight;\n            }\n            this.yoffset = yoffset;\n\n            if ($.isArray(options.get('colorMap'))) {\n                this.colorMapByIndex = options.get('colorMap');\n                this.colorMapByValue = null;\n            } else {\n                this.colorMapByIndex = null;\n                this.colorMapByValue = options.get('colorMap');\n                if (this.colorMapByValue && this.colorMapByValue.get === undefined) {\n                    this.colorMapByValue = new RangeMap(this.colorMapByValue);\n                }\n            }\n\n            this.range = range;\n        },\n\n        getRegion: function (el, x, y) {\n            var result = Math.floor(x / this.totalBarWidth);\n            return (result < 0 || result >= this.values.length) ? undefined : result;\n        },\n\n        getCurrentRegionFields: function () {\n            var currentRegion = this.currentRegion,\n                values = ensureArray(this.values[currentRegion]),\n                result = [],\n                value, i;\n            for (i = values.length; i--;) {\n                value = values[i];\n                result.push({\n                    isNull: value === null,\n                    value: value,\n                    color: this.calcColor(i, value, currentRegion),\n                    offset: currentRegion\n                });\n            }\n            return result;\n        },\n\n        calcColor: function (stacknum, value, valuenum) {\n            var colorMapByIndex = this.colorMapByIndex,\n                colorMapByValue = this.colorMapByValue,\n                options = this.options,\n                color, newColor;\n            if (this.stacked) {\n                color = options.get('stackedBarColor');\n            } else {\n                color = (value < 0) ? options.get('negBarColor') : options.get('barColor');\n            }\n            if (value === 0 && options.get('zeroColor') !== undefined) {\n                color = options.get('zeroColor');\n            }\n            if (colorMapByValue && (newColor = colorMapByValue.get(value))) {\n                color = newColor;\n            } else if (colorMapByIndex && colorMapByIndex.length > valuenum) {\n                color = colorMapByIndex[valuenum];\n            }\n            return $.isArray(color) ? color[stacknum % color.length] : color;\n        },\n\n        /**\n         * Render bar(s) for a region\n         */\n        renderRegion: function (valuenum, highlight) {\n            var vals = this.values[valuenum],\n                options = this.options,\n                xaxisOffset = this.xaxisOffset,\n                result = [],\n                range = this.range,\n                stacked = this.stacked,\n                target = this.target,\n                x = valuenum * this.totalBarWidth,\n                canvasHeightEf = this.canvasHeightEf,\n                yoffset = this.yoffset,\n                y, height, color, isNull, yoffsetNeg, i, valcount, val, minPlotted, allMin;\n\n            vals = $.isArray(vals) ? vals : [vals];\n            valcount = vals.length;\n            val = vals[0];\n            isNull = all(null, vals);\n            allMin = all(xaxisOffset, vals, true);\n\n            if (isNull) {\n                if (options.get('nullColor')) {\n                    color = highlight ? options.get('nullColor') : this.calcHighlightColor(options.get('nullColor'), options);\n                    y = (yoffset > 0) ? yoffset - 1 : yoffset;\n                    return target.drawRect(x, y, this.barWidth - 1, 0, color, color);\n                } else {\n                    return undefined;\n                }\n            }\n            yoffsetNeg = yoffset;\n            for (i = 0; i < valcount; i++) {\n                val = vals[i];\n\n                if (stacked && val === xaxisOffset) {\n                    if (!allMin || minPlotted) {\n                        continue;\n                    }\n                    minPlotted = true;\n                }\n\n                if (range > 0) {\n                    height = Math.floor(canvasHeightEf * ((Math.abs(val - xaxisOffset) / range))) + 1;\n                } else {\n                    height = 1;\n                }\n                if (val < xaxisOffset || (val === xaxisOffset && yoffset === 0)) {\n                    y = yoffsetNeg;\n                    yoffsetNeg += height;\n                } else {\n                    y = yoffset - height;\n                    yoffset -= height;\n                }\n                color = this.calcColor(i, val, valuenum);\n                if (highlight) {\n                    color = this.calcHighlightColor(color, options);\n                }\n                result.push(target.drawRect(x, y, this.barWidth - 1, height - 1, color, color));\n            }\n            if (result.length === 1) {\n                return result[0];\n            }\n            return result;\n        }\n    });\n\n\n    /**\n     * Tristate charts\n     */\n    $.fn.sparkline.tristate = tristate = createClass($.fn.sparkline._base, barHighlightMixin, {\n        type: 'tristate',\n\n        init: function (el, values, options, width, height) {\n            var barWidth = parseInt(options.get('barWidth'), 10),\n                barSpacing = parseInt(options.get('barSpacing'), 10);\n            tristate._super.init.call(this, el, values, options, width, height);\n\n            this.regionShapes = {};\n            this.barWidth = barWidth;\n            this.barSpacing = barSpacing;\n            this.totalBarWidth = barWidth + barSpacing;\n            this.values = $.map(values, Number);\n            this.width = width = (values.length * barWidth) + ((values.length - 1) * barSpacing);\n\n            if ($.isArray(options.get('colorMap'))) {\n                this.colorMapByIndex = options.get('colorMap');\n                this.colorMapByValue = null;\n            } else {\n                this.colorMapByIndex = null;\n                this.colorMapByValue = options.get('colorMap');\n                if (this.colorMapByValue && this.colorMapByValue.get === undefined) {\n                    this.colorMapByValue = new RangeMap(this.colorMapByValue);\n                }\n            }\n            this.initTarget();\n        },\n\n        getRegion: function (el, x, y) {\n            return Math.floor(x / this.totalBarWidth);\n        },\n\n        getCurrentRegionFields: function () {\n            var currentRegion = this.currentRegion;\n            return {\n                isNull: this.values[currentRegion] === undefined,\n                value: this.values[currentRegion],\n                color: this.calcColor(this.values[currentRegion], currentRegion),\n                offset: currentRegion\n            };\n        },\n\n        calcColor: function (value, valuenum) {\n            var values = this.values,\n                options = this.options,\n                colorMapByIndex = this.colorMapByIndex,\n                colorMapByValue = this.colorMapByValue,\n                color, newColor;\n\n            if (colorMapByValue && (newColor = colorMapByValue.get(value))) {\n                color = newColor;\n            } else if (colorMapByIndex && colorMapByIndex.length > valuenum) {\n                color = colorMapByIndex[valuenum];\n            } else if (values[valuenum] < 0) {\n                color = options.get('negBarColor');\n            } else if (values[valuenum] > 0) {\n                color = options.get('posBarColor');\n            } else {\n                color = options.get('zeroBarColor');\n            }\n            return color;\n        },\n\n        renderRegion: function (valuenum, highlight) {\n            var values = this.values,\n                options = this.options,\n                target = this.target,\n                canvasHeight, height, halfHeight,\n                x, y, color;\n\n            canvasHeight = target.pixelHeight;\n            halfHeight = Math.round(canvasHeight / 2);\n\n            x = valuenum * this.totalBarWidth;\n            if (values[valuenum] < 0) {\n                y = halfHeight;\n                height = halfHeight - 1;\n            } else if (values[valuenum] > 0) {\n                y = 0;\n                height = halfHeight - 1;\n            } else {\n                y = halfHeight - 1;\n                height = 2;\n            }\n            color = this.calcColor(values[valuenum], valuenum);\n            if (color === null) {\n                return;\n            }\n            if (highlight) {\n                color = this.calcHighlightColor(color, options);\n            }\n            return target.drawRect(x, y, this.barWidth - 1, height - 1, color, color);\n        }\n    });\n\n\n    /**\n     * Discrete charts\n     */\n    $.fn.sparkline.discrete = discrete = createClass($.fn.sparkline._base, barHighlightMixin, {\n        type: 'discrete',\n\n        init: function (el, values, options, width, height) {\n            discrete._super.init.call(this, el, values, options, width, height);\n\n            this.regionShapes = {};\n            this.values = values = $.map(values, Number);\n            this.min = Math.min.apply(Math, values);\n            this.max = Math.max.apply(Math, values);\n            this.range = this.max - this.min;\n            this.width = width = options.get('width') === 'auto' ? values.length * 2 : this.width;\n            this.interval = Math.floor(width / values.length);\n            this.itemWidth = width / values.length;\n            if (options.get('chartRangeMin') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMin') < this.min)) {\n                this.min = options.get('chartRangeMin');\n            }\n            if (options.get('chartRangeMax') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMax') > this.max)) {\n                this.max = options.get('chartRangeMax');\n            }\n            this.initTarget();\n            if (this.target) {\n                this.lineHeight = options.get('lineHeight') === 'auto' ? Math.round(this.canvasHeight * 0.3) : options.get('lineHeight');\n            }\n        },\n\n        getRegion: function (el, x, y) {\n            return Math.floor(x / this.itemWidth);\n        },\n\n        getCurrentRegionFields: function () {\n            var currentRegion = this.currentRegion;\n            return {\n                isNull: this.values[currentRegion] === undefined,\n                value: this.values[currentRegion],\n                offset: currentRegion\n            };\n        },\n\n        renderRegion: function (valuenum, highlight) {\n            var values = this.values,\n                options = this.options,\n                min = this.min,\n                max = this.max,\n                range = this.range,\n                interval = this.interval,\n                target = this.target,\n                canvasHeight = this.canvasHeight,\n                lineHeight = this.lineHeight,\n                pheight = canvasHeight - lineHeight,\n                ytop, val, color, x;\n\n            val = clipval(values[valuenum], min, max);\n            x = valuenum * interval;\n            ytop = Math.round(pheight - pheight * ((val - min) / range));\n            color = (options.get('thresholdColor') && val < options.get('thresholdValue')) ? options.get('thresholdColor') : options.get('lineColor');\n            if (highlight) {\n                color = this.calcHighlightColor(color, options);\n            }\n            return target.drawLine(x, ytop, x, ytop + lineHeight, color);\n        }\n    });\n\n\n    /**\n     * Bullet charts\n     */\n    $.fn.sparkline.bullet = bullet = createClass($.fn.sparkline._base, {\n        type: 'bullet',\n\n        init: function (el, values, options, width, height) {\n            var min, max, vals;\n            bullet._super.init.call(this, el, values, options, width, height);\n\n            // values: target, performance, range1, range2, range3\n            this.values = values = normalizeValues(values);\n            // target or performance could be null\n            vals = values.slice();\n            vals[0] = vals[0] === null ? vals[2] : vals[0];\n            vals[1] = values[1] === null ? vals[2] : vals[1];\n            min = Math.min.apply(Math, values);\n            max = Math.max.apply(Math, values);\n            if (options.get('base') === undefined) {\n                min = min < 0 ? min : 0;\n            } else {\n                min = options.get('base');\n            }\n            this.min = min;\n            this.max = max;\n            this.range = max - min;\n            this.shapes = {};\n            this.valueShapes = {};\n            this.regiondata = {};\n            this.width = width = options.get('width') === 'auto' ? '4.0em' : width;\n            this.target = this.$el.simpledraw(width, height, options.get('composite'));\n            if (!values.length) {\n                this.disabled = true;\n            }\n            this.initTarget();\n        },\n\n        getRegion: function (el, x, y) {\n            var shapeid = this.target.getShapeAt(el, x, y);\n            return (shapeid !== undefined && this.shapes[shapeid] !== undefined) ? this.shapes[shapeid] : undefined;\n        },\n\n        getCurrentRegionFields: function () {\n            var currentRegion = this.currentRegion;\n            return {\n                fieldkey: currentRegion.substr(0, 1),\n                value: this.values[currentRegion.substr(1)],\n                region: currentRegion\n            };\n        },\n\n        changeHighlight: function (highlight) {\n            var currentRegion = this.currentRegion,\n                shapeid = this.valueShapes[currentRegion],\n                shape;\n            delete this.shapes[shapeid];\n            switch (currentRegion.substr(0, 1)) {\n                case 'r':\n                    shape = this.renderRange(currentRegion.substr(1), highlight);\n                    break;\n                case 'p':\n                    shape = this.renderPerformance(highlight);\n                    break;\n                case 't':\n                    shape = this.renderTarget(highlight);\n                    break;\n            }\n            this.valueShapes[currentRegion] = shape.id;\n            this.shapes[shape.id] = currentRegion;\n            this.target.replaceWithShape(shapeid, shape);\n        },\n\n        renderRange: function (rn, highlight) {\n            var rangeval = this.values[rn],\n                rangewidth = Math.round(this.canvasWidth * ((rangeval - this.min) / this.range)),\n                color = this.options.get('rangeColors')[rn - 2];\n            if (highlight) {\n                color = this.calcHighlightColor(color, this.options);\n            }\n            return this.target.drawRect(0, 0, rangewidth - 1, this.canvasHeight - 1, color, color);\n        },\n\n        renderPerformance: function (highlight) {\n            var perfval = this.values[1],\n                perfwidth = Math.round(this.canvasWidth * ((perfval - this.min) / this.range)),\n                color = this.options.get('performanceColor');\n            if (highlight) {\n                color = this.calcHighlightColor(color, this.options);\n            }\n            return this.target.drawRect(0, Math.round(this.canvasHeight * 0.3), perfwidth - 1,\n                Math.round(this.canvasHeight * 0.4) - 1, color, color);\n        },\n\n        renderTarget: function (highlight) {\n            var targetval = this.values[0],\n                x = Math.round(this.canvasWidth * ((targetval - this.min) / this.range) - (this.options.get('targetWidth') / 2)),\n                targettop = Math.round(this.canvasHeight * 0.10),\n                targetheight = this.canvasHeight - (targettop * 2),\n                color = this.options.get('targetColor');\n            if (highlight) {\n                color = this.calcHighlightColor(color, this.options);\n            }\n            return this.target.drawRect(x, targettop, this.options.get('targetWidth') - 1, targetheight - 1, color, color);\n        },\n\n        render: function () {\n            var vlen = this.values.length,\n                target = this.target,\n                i, shape;\n            if (!bullet._super.render.call(this)) {\n                return;\n            }\n            for (i = 2; i < vlen; i++) {\n                shape = this.renderRange(i).append();\n                this.shapes[shape.id] = 'r' + i;\n                this.valueShapes['r' + i] = shape.id;\n            }\n            if (this.values[1] !== null) {\n                shape = this.renderPerformance().append();\n                this.shapes[shape.id] = 'p1';\n                this.valueShapes.p1 = shape.id;\n            }\n            if (this.values[0] !== null) {\n                shape = this.renderTarget().append();\n                this.shapes[shape.id] = 't0';\n                this.valueShapes.t0 = shape.id;\n            }\n            target.render();\n        }\n    });\n\n\n    /**\n     * Pie charts\n     */\n    $.fn.sparkline.pie = pie = createClass($.fn.sparkline._base, {\n        type: 'pie',\n\n        init: function (el, values, options, width, height) {\n            var total = 0, i;\n\n            pie._super.init.call(this, el, values, options, width, height);\n\n            this.shapes = {}; // map shape ids to value offsets\n            this.valueShapes = {}; // maps value offsets to shape ids\n            this.values = values = $.map(values, Number);\n\n            if (options.get('width') === 'auto') {\n                this.width = this.height;\n            }\n\n            if (values.length > 0) {\n                for (i = values.length; i--;) {\n                    total += values[i];\n                }\n            }\n            this.total = total;\n            this.initTarget();\n            this.radius = Math.floor(Math.min(this.canvasWidth, this.canvasHeight) / 2);\n        },\n\n        getRegion: function (el, x, y) {\n            var shapeid = this.target.getShapeAt(el, x, y);\n            return (shapeid !== undefined && this.shapes[shapeid] !== undefined) ? this.shapes[shapeid] : undefined;\n        },\n\n        getCurrentRegionFields: function () {\n            var currentRegion = this.currentRegion;\n            return {\n                isNull: this.values[currentRegion] === undefined,\n                value: this.values[currentRegion],\n                percent: this.values[currentRegion] / this.total * 100,\n                color: this.options.get('sliceColors')[currentRegion % this.options.get('sliceColors').length],\n                offset: currentRegion\n            };\n        },\n\n        changeHighlight: function (highlight) {\n            var currentRegion = this.currentRegion,\n                 newslice = this.renderSlice(currentRegion, highlight),\n                 shapeid = this.valueShapes[currentRegion];\n            delete this.shapes[shapeid];\n            this.target.replaceWithShape(shapeid, newslice);\n            this.valueShapes[currentRegion] = newslice.id;\n            this.shapes[newslice.id] = currentRegion;\n        },\n\n        renderSlice: function (valuenum, highlight) {\n            var target = this.target,\n                options = this.options,\n                radius = this.radius,\n                borderWidth = options.get('borderWidth'),\n                offset = options.get('offset'),\n                circle = 2 * Math.PI,\n                values = this.values,\n                total = this.total,\n                next = offset ? (2*Math.PI)*(offset/360) : 0,\n                start, end, i, vlen, color;\n\n            vlen = values.length;\n            for (i = 0; i < vlen; i++) {\n                start = next;\n                end = next;\n                if (total > 0) {  // avoid divide by zero\n                    end = next + (circle * (values[i] / total));\n                }\n                if (valuenum === i) {\n                    color = options.get('sliceColors')[i % options.get('sliceColors').length];\n                    if (highlight) {\n                        color = this.calcHighlightColor(color, options);\n                    }\n\n                    return target.drawPieSlice(radius, radius, radius - borderWidth, start, end, undefined, color);\n                }\n                next = end;\n            }\n        },\n\n        render: function () {\n            var target = this.target,\n                values = this.values,\n                options = this.options,\n                radius = this.radius,\n                borderWidth = options.get('borderWidth'),\n                shape, i;\n\n            if (!pie._super.render.call(this)) {\n                return;\n            }\n            if (borderWidth) {\n                target.drawCircle(radius, radius, Math.floor(radius - (borderWidth / 2)),\n                    options.get('borderColor'), undefined, borderWidth).append();\n            }\n            for (i = values.length; i--;) {\n                if (values[i]) { // don't render zero values\n                    shape = this.renderSlice(i).append();\n                    this.valueShapes[i] = shape.id; // store just the shapeid\n                    this.shapes[shape.id] = i;\n                }\n            }\n            target.render();\n        }\n    });\n\n\n    /**\n     * Box plots\n     */\n    $.fn.sparkline.box = box = createClass($.fn.sparkline._base, {\n        type: 'box',\n\n        init: function (el, values, options, width, height) {\n            box._super.init.call(this, el, values, options, width, height);\n            this.values = $.map(values, Number);\n            this.width = options.get('width') === 'auto' ? '4.0em' : width;\n            this.initTarget();\n            if (!this.values.length) {\n                this.disabled = 1;\n            }\n        },\n\n        /**\n         * Simulate a single region\n         */\n        getRegion: function () {\n            return 1;\n        },\n\n        getCurrentRegionFields: function () {\n            var result = [\n                { field: 'lq', value: this.quartiles[0] },\n                { field: 'med', value: this.quartiles[1] },\n                { field: 'uq', value: this.quartiles[2] }\n            ];\n            if (this.loutlier !== undefined) {\n                result.push({ field: 'lo', value: this.loutlier});\n            }\n            if (this.routlier !== undefined) {\n                result.push({ field: 'ro', value: this.routlier});\n            }\n            if (this.lwhisker !== undefined) {\n                result.push({ field: 'lw', value: this.lwhisker});\n            }\n            if (this.rwhisker !== undefined) {\n                result.push({ field: 'rw', value: this.rwhisker});\n            }\n            return result;\n        },\n\n        render: function () {\n            var target = this.target,\n                values = this.values,\n                vlen = values.length,\n                options = this.options,\n                canvasWidth = this.canvasWidth,\n                canvasHeight = this.canvasHeight,\n                minValue = options.get('chartRangeMin') === undefined ? Math.min.apply(Math, values) : options.get('chartRangeMin'),\n                maxValue = options.get('chartRangeMax') === undefined ? Math.max.apply(Math, values) : options.get('chartRangeMax'),\n                canvasLeft = 0,\n                lwhisker, loutlier, iqr, q1, q2, q3, rwhisker, routlier, i,\n                size, unitSize;\n\n            if (!box._super.render.call(this)) {\n                return;\n            }\n\n            if (options.get('raw')) {\n                if (options.get('showOutliers') && values.length > 5) {\n                    loutlier = values[0];\n                    lwhisker = values[1];\n                    q1 = values[2];\n                    q2 = values[3];\n                    q3 = values[4];\n                    rwhisker = values[5];\n                    routlier = values[6];\n                } else {\n                    lwhisker = values[0];\n                    q1 = values[1];\n                    q2 = values[2];\n                    q3 = values[3];\n                    rwhisker = values[4];\n                }\n            } else {\n                values.sort(function (a, b) { return a - b; });\n                q1 = quartile(values, 1);\n                q2 = quartile(values, 2);\n                q3 = quartile(values, 3);\n                iqr = q3 - q1;\n                if (options.get('showOutliers')) {\n                    lwhisker = rwhisker = undefined;\n                    for (i = 0; i < vlen; i++) {\n                        if (lwhisker === undefined && values[i] > q1 - (iqr * options.get('outlierIQR'))) {\n                            lwhisker = values[i];\n                        }\n                        if (values[i] < q3 + (iqr * options.get('outlierIQR'))) {\n                            rwhisker = values[i];\n                        }\n                    }\n                    loutlier = values[0];\n                    routlier = values[vlen - 1];\n                } else {\n                    lwhisker = values[0];\n                    rwhisker = values[vlen - 1];\n                }\n            }\n            this.quartiles = [q1, q2, q3];\n            this.lwhisker = lwhisker;\n            this.rwhisker = rwhisker;\n            this.loutlier = loutlier;\n            this.routlier = routlier;\n\n            unitSize = canvasWidth / (maxValue - minValue + 1);\n            if (options.get('showOutliers')) {\n                canvasLeft = Math.ceil(options.get('spotRadius'));\n                canvasWidth -= 2 * Math.ceil(options.get('spotRadius'));\n                unitSize = canvasWidth / (maxValue - minValue + 1);\n                if (loutlier < lwhisker) {\n                    target.drawCircle((loutlier - minValue) * unitSize + canvasLeft,\n                        canvasHeight / 2,\n                        options.get('spotRadius'),\n                        options.get('outlierLineColor'),\n                        options.get('outlierFillColor')).append();\n                }\n                if (routlier > rwhisker) {\n                    target.drawCircle((routlier - minValue) * unitSize + canvasLeft,\n                        canvasHeight / 2,\n                        options.get('spotRadius'),\n                        options.get('outlierLineColor'),\n                        options.get('outlierFillColor')).append();\n                }\n            }\n\n            // box\n            target.drawRect(\n                Math.round((q1 - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight * 0.1),\n                Math.round((q3 - q1) * unitSize),\n                Math.round(canvasHeight * 0.8),\n                options.get('boxLineColor'),\n                options.get('boxFillColor')).append();\n            // left whisker\n            target.drawLine(\n                Math.round((lwhisker - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight / 2),\n                Math.round((q1 - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight / 2),\n                options.get('lineColor')).append();\n            target.drawLine(\n                Math.round((lwhisker - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight / 4),\n                Math.round((lwhisker - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight - canvasHeight / 4),\n                options.get('whiskerColor')).append();\n            // right whisker\n            target.drawLine(Math.round((rwhisker - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight / 2),\n                Math.round((q3 - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight / 2),\n                options.get('lineColor')).append();\n            target.drawLine(\n                Math.round((rwhisker - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight / 4),\n                Math.round((rwhisker - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight - canvasHeight / 4),\n                options.get('whiskerColor')).append();\n            // median line\n            target.drawLine(\n                Math.round((q2 - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight * 0.1),\n                Math.round((q2 - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight * 0.9),\n                options.get('medianColor')).append();\n            if (options.get('target')) {\n                size = Math.ceil(options.get('spotRadius'));\n                target.drawLine(\n                    Math.round((options.get('target') - minValue) * unitSize + canvasLeft),\n                    Math.round((canvasHeight / 2) - size),\n                    Math.round((options.get('target') - minValue) * unitSize + canvasLeft),\n                    Math.round((canvasHeight / 2) + size),\n                    options.get('targetColor')).append();\n                target.drawLine(\n                    Math.round((options.get('target') - minValue) * unitSize + canvasLeft - size),\n                    Math.round(canvasHeight / 2),\n                    Math.round((options.get('target') - minValue) * unitSize + canvasLeft + size),\n                    Math.round(canvasHeight / 2),\n                    options.get('targetColor')).append();\n            }\n            target.render();\n        }\n    });\n\n\n    // Setup a very simple \"virtual canvas\" to make drawing the few shapes we need easier\n    // This is accessible as $(foo).simpledraw()\n\n    VShape = createClass({\n        init: function (target, id, type, args) {\n            this.target = target;\n            this.id = id;\n            this.type = type;\n            this.args = args;\n        },\n        append: function () {\n            this.target.appendShape(this);\n            return this;\n        }\n    });\n\n    VCanvas_base = createClass({\n        _pxregex: /(\\d+)(px)?\\s*$/i,\n\n        init: function (width, height, target) {\n            if (!width) {\n                return;\n            }\n            this.width = width;\n            this.height = height;\n            this.target = target;\n            this.lastShapeId = null;\n            if (target[0]) {\n                target = target[0];\n            }\n            $.data(target, '_jqs_vcanvas', this);\n        },\n\n        drawLine: function (x1, y1, x2, y2, lineColor, lineWidth) {\n            return this.drawShape([[x1, y1], [x2, y2]], lineColor, lineWidth);\n        },\n\n        drawShape: function (path, lineColor, fillColor, lineWidth) {\n            return this._genShape('Shape', [path, lineColor, fillColor, lineWidth]);\n        },\n\n        drawCircle: function (x, y, radius, lineColor, fillColor, lineWidth) {\n            return this._genShape('Circle', [x, y, radius, lineColor, fillColor, lineWidth]);\n        },\n\n        drawPieSlice: function (x, y, radius, startAngle, endAngle, lineColor, fillColor) {\n            return this._genShape('PieSlice', [x, y, radius, startAngle, endAngle, lineColor, fillColor]);\n        },\n\n        drawRect: function (x, y, width, height, lineColor, fillColor) {\n            return this._genShape('Rect', [x, y, width, height, lineColor, fillColor]);\n        },\n\n        getElement: function () {\n            return this.canvas;\n        },\n\n        /**\n         * Return the most recently inserted shape id\n         */\n        getLastShapeId: function () {\n            return this.lastShapeId;\n        },\n\n        /**\n         * Clear and reset the canvas\n         */\n        reset: function () {\n            alert('reset not implemented');\n        },\n\n        _insert: function (el, target) {\n            $(target).html(el);\n        },\n\n        /**\n         * Calculate the pixel dimensions of the canvas\n         */\n        _calculatePixelDims: function (width, height, canvas) {\n            // XXX This should probably be a configurable option\n            var match;\n            match = this._pxregex.exec(height);\n            if (match) {\n                this.pixelHeight = match[1];\n            } else {\n                this.pixelHeight = $(canvas).height();\n            }\n            match = this._pxregex.exec(width);\n            if (match) {\n                this.pixelWidth = match[1];\n            } else {\n                this.pixelWidth = $(canvas).width();\n            }\n        },\n\n        /**\n         * Generate a shape object and id for later rendering\n         */\n        _genShape: function (shapetype, shapeargs) {\n            var id = shapeCount++;\n            shapeargs.unshift(id);\n            return new VShape(this, id, shapetype, shapeargs);\n        },\n\n        /**\n         * Add a shape to the end of the render queue\n         */\n        appendShape: function (shape) {\n            alert('appendShape not implemented');\n        },\n\n        /**\n         * Replace one shape with another\n         */\n        replaceWithShape: function (shapeid, shape) {\n            alert('replaceWithShape not implemented');\n        },\n\n        /**\n         * Insert one shape after another in the render queue\n         */\n        insertAfterShape: function (shapeid, shape) {\n            alert('insertAfterShape not implemented');\n        },\n\n        /**\n         * Remove a shape from the queue\n         */\n        removeShapeId: function (shapeid) {\n            alert('removeShapeId not implemented');\n        },\n\n        /**\n         * Find a shape at the specified x/y co-ordinates\n         */\n        getShapeAt: function (el, x, y) {\n            alert('getShapeAt not implemented');\n        },\n\n        /**\n         * Render all queued shapes onto the canvas\n         */\n        render: function () {\n            alert('render not implemented');\n        }\n    });\n\n\n    VCanvas_canvas = createClass(VCanvas_base, {\n        init: function (width, height, target, interact) {\n            VCanvas_canvas._super.init.call(this, width, height, target);\n            this.canvas = document.createElement('canvas');\n            if (target[0]) {\n                target = target[0];\n            }\n            $.data(target, '_jqs_vcanvas', this);\n            $(this.canvas).css({ display: 'inline-block', width: width, height: height, verticalAlign: 'top' });\n            this._insert(this.canvas, target);\n            this._calculatePixelDims(width, height, this.canvas);\n            this.canvas.width = this.pixelWidth;\n            this.canvas.height = this.pixelHeight;\n            this.interact = interact;\n            this.shapes = {};\n            this.shapeseq = [];\n            this.currentTargetShapeId = undefined;\n            $(this.canvas).css({width: this.pixelWidth, height: this.pixelHeight});\n        },\n\n        _getContext: function (lineColor, fillColor, lineWidth) {\n            var context = this.canvas.getContext('2d');\n            if (lineColor !== undefined) {\n                context.strokeStyle = lineColor;\n            }\n            context.lineWidth = lineWidth === undefined ? 1 : lineWidth;\n            if (fillColor !== undefined) {\n                context.fillStyle = fillColor;\n            }\n            return context;\n        },\n\n        reset: function () {\n            var context = this._getContext();\n            context.clearRect(0, 0, this.pixelWidth, this.pixelHeight);\n            this.shapes = {};\n            this.shapeseq = [];\n            this.currentTargetShapeId = undefined;\n        },\n\n        _drawShape: function (shapeid, path, lineColor, fillColor, lineWidth) {\n            var context = this._getContext(lineColor, fillColor, lineWidth),\n                i, plen;\n            context.beginPath();\n            context.moveTo(path[0][0] + 0.5, path[0][1] + 0.5);\n            for (i = 1, plen = path.length; i < plen; i++) {\n                context.lineTo(path[i][0] + 0.5, path[i][1] + 0.5); // the 0.5 offset gives us crisp pixel-width lines\n            }\n            if (lineColor !== undefined) {\n                context.stroke();\n            }\n            if (fillColor !== undefined) {\n                context.fill();\n            }\n            if (this.targetX !== undefined && this.targetY !== undefined &&\n                context.isPointInPath(this.targetX, this.targetY)) {\n                this.currentTargetShapeId = shapeid;\n            }\n        },\n\n        _drawCircle: function (shapeid, x, y, radius, lineColor, fillColor, lineWidth) {\n            var context = this._getContext(lineColor, fillColor, lineWidth);\n            context.beginPath();\n            context.arc(x, y, radius, 0, 2 * Math.PI, false);\n            if (this.targetX !== undefined && this.targetY !== undefined &&\n                context.isPointInPath(this.targetX, this.targetY)) {\n                this.currentTargetShapeId = shapeid;\n            }\n            if (lineColor !== undefined) {\n                context.stroke();\n            }\n            if (fillColor !== undefined) {\n                context.fill();\n            }\n        },\n\n        _drawPieSlice: function (shapeid, x, y, radius, startAngle, endAngle, lineColor, fillColor) {\n            var context = this._getContext(lineColor, fillColor);\n            context.beginPath();\n            context.moveTo(x, y);\n            context.arc(x, y, radius, startAngle, endAngle, false);\n            context.lineTo(x, y);\n            context.closePath();\n            if (lineColor !== undefined) {\n                context.stroke();\n            }\n            if (fillColor) {\n                context.fill();\n            }\n            if (this.targetX !== undefined && this.targetY !== undefined &&\n                context.isPointInPath(this.targetX, this.targetY)) {\n                this.currentTargetShapeId = shapeid;\n            }\n        },\n\n        _drawRect: function (shapeid, x, y, width, height, lineColor, fillColor) {\n            return this._drawShape(shapeid, [[x, y], [x + width, y], [x + width, y + height], [x, y + height], [x, y]], lineColor, fillColor);\n        },\n\n        appendShape: function (shape) {\n            this.shapes[shape.id] = shape;\n            this.shapeseq.push(shape.id);\n            this.lastShapeId = shape.id;\n            return shape.id;\n        },\n\n        replaceWithShape: function (shapeid, shape) {\n            var shapeseq = this.shapeseq,\n                i;\n            this.shapes[shape.id] = shape;\n            for (i = shapeseq.length; i--;) {\n                if (shapeseq[i] == shapeid) {\n                    shapeseq[i] = shape.id;\n                }\n            }\n            delete this.shapes[shapeid];\n        },\n\n        replaceWithShapes: function (shapeids, shapes) {\n            var shapeseq = this.shapeseq,\n                shapemap = {},\n                sid, i, first;\n\n            for (i = shapeids.length; i--;) {\n                shapemap[shapeids[i]] = true;\n            }\n            for (i = shapeseq.length; i--;) {\n                sid = shapeseq[i];\n                if (shapemap[sid]) {\n                    shapeseq.splice(i, 1);\n                    delete this.shapes[sid];\n                    first = i;\n                }\n            }\n            for (i = shapes.length; i--;) {\n                shapeseq.splice(first, 0, shapes[i].id);\n                this.shapes[shapes[i].id] = shapes[i];\n            }\n\n        },\n\n        insertAfterShape: function (shapeid, shape) {\n            var shapeseq = this.shapeseq,\n                i;\n            for (i = shapeseq.length; i--;) {\n                if (shapeseq[i] === shapeid) {\n                    shapeseq.splice(i + 1, 0, shape.id);\n                    this.shapes[shape.id] = shape;\n                    return;\n                }\n            }\n        },\n\n        removeShapeId: function (shapeid) {\n            var shapeseq = this.shapeseq,\n                i;\n            for (i = shapeseq.length; i--;) {\n                if (shapeseq[i] === shapeid) {\n                    shapeseq.splice(i, 1);\n                    break;\n                }\n            }\n            delete this.shapes[shapeid];\n        },\n\n        getShapeAt: function (el, x, y) {\n            this.targetX = x;\n            this.targetY = y;\n            this.render();\n            return this.currentTargetShapeId;\n        },\n\n        render: function () {\n            var shapeseq = this.shapeseq,\n                shapes = this.shapes,\n                shapeCount = shapeseq.length,\n                context = this._getContext(),\n                shapeid, shape, i;\n            context.clearRect(0, 0, this.pixelWidth, this.pixelHeight);\n            for (i = 0; i < shapeCount; i++) {\n                shapeid = shapeseq[i];\n                shape = shapes[shapeid];\n                this['_draw' + shape.type].apply(this, shape.args);\n            }\n            if (!this.interact) {\n                // not interactive so no need to keep the shapes array\n                this.shapes = {};\n                this.shapeseq = [];\n            }\n        }\n\n    });\n\n\n    VCanvas_vml = createClass(VCanvas_base, {\n        init: function (width, height, target) {\n            var groupel;\n            VCanvas_vml._super.init.call(this, width, height, target);\n            if (target[0]) {\n                target = target[0];\n            }\n            $.data(target, '_jqs_vcanvas', this);\n            this.canvas = document.createElement('span');\n            $(this.canvas).css({ display: 'inline-block', position: 'relative', overflow: 'hidden', width: width, height: height, margin: '0px', padding: '0px', verticalAlign: 'top'});\n            this._insert(this.canvas, target);\n            this._calculatePixelDims(width, height, this.canvas);\n            this.canvas.width = this.pixelWidth;\n            this.canvas.height = this.pixelHeight;\n            groupel = '<v:group coordorigin=\"0 0\" coordsize=\"' + this.pixelWidth + ' ' + this.pixelHeight + '\"' +\n                    ' style=\"position:absolute;top:0;left:0;width:' + this.pixelWidth + 'px;height=' + this.pixelHeight + 'px;\"></v:group>';\n            this.canvas.insertAdjacentHTML('beforeEnd', groupel);\n            this.group = $(this.canvas).children()[0];\n            this.rendered = false;\n            this.prerender = '';\n        },\n\n        _drawShape: function (shapeid, path, lineColor, fillColor, lineWidth) {\n            var vpath = [],\n                initial, stroke, fill, closed, vel, plen, i;\n            for (i = 0, plen = path.length; i < plen; i++) {\n                vpath[i] = '' + (path[i][0]) + ',' + (path[i][1]);\n            }\n            initial = vpath.splice(0, 1);\n            lineWidth = lineWidth === undefined ? 1 : lineWidth;\n            stroke = lineColor === undefined ? ' stroked=\"false\" ' : ' strokeWeight=\"' + lineWidth + 'px\" strokeColor=\"' + lineColor + '\" ';\n            fill = fillColor === undefined ? ' filled=\"false\"' : ' fillColor=\"' + fillColor + '\" filled=\"true\" ';\n            closed = vpath[0] === vpath[vpath.length - 1] ? 'x ' : '';\n            vel = '<v:shape coordorigin=\"0 0\" coordsize=\"' + this.pixelWidth + ' ' + this.pixelHeight + '\" ' +\n                 ' id=\"jqsshape' + shapeid + '\" ' +\n                 stroke +\n                 fill +\n                ' style=\"position:absolute;left:0px;top:0px;height:' + this.pixelHeight + 'px;width:' + this.pixelWidth + 'px;padding:0px;margin:0px;\" ' +\n                ' path=\"m ' + initial + ' l ' + vpath.join(', ') + ' ' + closed + 'e\">' +\n                ' </v:shape>';\n            return vel;\n        },\n\n        _drawCircle: function (shapeid, x, y, radius, lineColor, fillColor, lineWidth) {\n            var stroke, fill, vel;\n            x -= radius;\n            y -= radius;\n            stroke = lineColor === undefined ? ' stroked=\"false\" ' : ' strokeWeight=\"' + lineWidth + 'px\" strokeColor=\"' + lineColor + '\" ';\n            fill = fillColor === undefined ? ' filled=\"false\"' : ' fillColor=\"' + fillColor + '\" filled=\"true\" ';\n            vel = '<v:oval ' +\n                 ' id=\"jqsshape' + shapeid + '\" ' +\n                stroke +\n                fill +\n                ' style=\"position:absolute;top:' + y + 'px; left:' + x + 'px; width:' + (radius * 2) + 'px; height:' + (radius * 2) + 'px\"></v:oval>';\n            return vel;\n\n        },\n\n        _drawPieSlice: function (shapeid, x, y, radius, startAngle, endAngle, lineColor, fillColor) {\n            var vpath, startx, starty, endx, endy, stroke, fill, vel;\n            if (startAngle === endAngle) {\n                return '';  // VML seems to have problem when start angle equals end angle.\n            }\n            if ((endAngle - startAngle) === (2 * Math.PI)) {\n                startAngle = 0.0;  // VML seems to have a problem when drawing a full circle that doesn't start 0\n                endAngle = (2 * Math.PI);\n            }\n\n            startx = x + Math.round(Math.cos(startAngle) * radius);\n            starty = y + Math.round(Math.sin(startAngle) * radius);\n            endx = x + Math.round(Math.cos(endAngle) * radius);\n            endy = y + Math.round(Math.sin(endAngle) * radius);\n\n            if (startx === endx && starty === endy) {\n                if ((endAngle - startAngle) < Math.PI) {\n                    // Prevent very small slices from being mistaken as a whole pie\n                    return '';\n                }\n                // essentially going to be the entire circle, so ignore startAngle\n                startx = endx = x + radius;\n                starty = endy = y;\n            }\n\n            if (startx === endx && starty === endy && (endAngle - startAngle) < Math.PI) {\n                return '';\n            }\n\n            vpath = [x - radius, y - radius, x + radius, y + radius, startx, starty, endx, endy];\n            stroke = lineColor === undefined ? ' stroked=\"false\" ' : ' strokeWeight=\"1px\" strokeColor=\"' + lineColor + '\" ';\n            fill = fillColor === undefined ? ' filled=\"false\"' : ' fillColor=\"' + fillColor + '\" filled=\"true\" ';\n            vel = '<v:shape coordorigin=\"0 0\" coordsize=\"' + this.pixelWidth + ' ' + this.pixelHeight + '\" ' +\n                 ' id=\"jqsshape' + shapeid + '\" ' +\n                 stroke +\n                 fill +\n                ' style=\"position:absolute;left:0px;top:0px;height:' + this.pixelHeight + 'px;width:' + this.pixelWidth + 'px;padding:0px;margin:0px;\" ' +\n                ' path=\"m ' + x + ',' + y + ' wa ' + vpath.join(', ') + ' x e\">' +\n                ' </v:shape>';\n            return vel;\n        },\n\n        _drawRect: function (shapeid, x, y, width, height, lineColor, fillColor) {\n            return this._drawShape(shapeid, [[x, y], [x, y + height], [x + width, y + height], [x + width, y], [x, y]], lineColor, fillColor);\n        },\n\n        reset: function () {\n            this.group.innerHTML = '';\n        },\n\n        appendShape: function (shape) {\n            var vel = this['_draw' + shape.type].apply(this, shape.args);\n            if (this.rendered) {\n                this.group.insertAdjacentHTML('beforeEnd', vel);\n            } else {\n                this.prerender += vel;\n            }\n            this.lastShapeId = shape.id;\n            return shape.id;\n        },\n\n        replaceWithShape: function (shapeid, shape) {\n            var existing = $('#jqsshape' + shapeid),\n                vel = this['_draw' + shape.type].apply(this, shape.args);\n            existing[0].outerHTML = vel;\n        },\n\n        replaceWithShapes: function (shapeids, shapes) {\n            // replace the first shapeid with all the new shapes then toast the remaining old shapes\n            var existing = $('#jqsshape' + shapeids[0]),\n                replace = '',\n                slen = shapes.length,\n                i;\n            for (i = 0; i < slen; i++) {\n                replace += this['_draw' + shapes[i].type].apply(this, shapes[i].args);\n            }\n            existing[0].outerHTML = replace;\n            for (i = 1; i < shapeids.length; i++) {\n                $('#jqsshape' + shapeids[i]).remove();\n            }\n        },\n\n        insertAfterShape: function (shapeid, shape) {\n            var existing = $('#jqsshape' + shapeid),\n                 vel = this['_draw' + shape.type].apply(this, shape.args);\n            existing[0].insertAdjacentHTML('afterEnd', vel);\n        },\n\n        removeShapeId: function (shapeid) {\n            var existing = $('#jqsshape' + shapeid);\n            this.group.removeChild(existing[0]);\n        },\n\n        getShapeAt: function (el, x, y) {\n            var shapeid = el.id.substr(8);\n            return shapeid;\n        },\n\n        render: function () {\n            if (!this.rendered) {\n                // batch the intial render into a single repaint\n                this.group.innerHTML = this.prerender;\n                this.rendered = true;\n            }\n        }\n    });\n\n\n}))}(document, Math));\n"},519:function(e,n,t){t(510)(t(518))},520:function(e,n){!function(e,n,t,r){function a(n,t){this.obj=e(n),this.o=e.extend({},e.fn[i].defaults,t),this.objId=this.obj.attr("id"),this.pwCtrls=".jarviswidget-ctrls",this.widget=this.obj.find(this.o.widgets),this.toggleClass=this.o.toggleClass.split("|"),this.editClass=this.o.editClass.split("|"),this.fullscreenClass=this.o.fullscreenClass.split("|"),this.customClass=this.o.customClass.split("|"),this.storage={enabled:this.o.localStorage},this.initialized=!1,this.init()}var i="jarvisWidgets",o=("ontouchstart"in n||n.DocumentTouch&&t instanceof DocumentTouch?"touchstart":"click")+"."+i;a.prototype={_runLoaderWidget:function(e){var n=this;!0===n.o.indicator&&e.parents(n.o.widgets).find(".jarviswidget-loader:first").stop(!0,!0).fadeIn(100).delay(n.o.indicatorTime).fadeOut(100)},_getPastTimestamp:function(e){var n=this,t=new Date(e),r=t.getMonth()+1,a=t.getDate(),i=t.getFullYear(),o=t.getHours(),s=t.getMinutes(),l=t.getUTCSeconds();return r<10&&(r="0"+r),a<10&&(a="0"+a),o<10&&(o="0"+o),s<10&&(s="0"+s),l<10&&(l="0"+l),n.o.timestampFormat.replace(/%d%/g,a).replace(/%m%/g,r).replace(/%y%/g,i).replace(/%h%/g,o).replace(/%i%/g,s).replace(/%s%/g,l)},_loadAjaxFile:function(n,t,r){var a=this;n.find(".widget-body").load(t,function(t,r,i){var o=e(this);if("error"==r&&o.html('<h4 class="alert alert-danger">'+a.o.labelError+"<b> "+i.status+" "+i.statusText+"</b></h4>"),"success"==r){var s=n.find(a.o.timestampPlaceholder);s.length&&s.html(a._getPastTimestamp(new Date)),"function"==typeof a.o.afterLoad&&a.o.afterLoad.call(this,n)}a=null}),this._runLoaderWidget(r)},_loadKeys:function(){var e=this;if(!0===e.o.ajaxnav){var n=location.hash.replace(/^#/,"");e.storage.keySettings="Plugin_settings_"+n+"_"+e.objId,e.storage.keyPosition="Plugin_position_"+n+"_"+e.objId}else if(!1===e.initialized){var n=e.o.pageKey||location.pathname;e.storage.keySettings="jarvisWidgets_settings_"+n+"_"+e.objId,e.storage.keyPosition="jarvisWidgets_position_"+n+"_"+e.objId}},_saveSettingsWidget:function(){var n=this,t=n.storage;n._loadKeys();var r=n.obj.find(n.o.widgets).map(function(){var n={};return n.id=e(this).attr("id"),n.style=e(this).attr("data-widget-attstyle"),n.title=e(this).children("header").children("h2").text(),n.hidden="none"==e(this).css("display")?1:0,n.collapsed=e(this).hasClass("jarviswidget-collapsed")?1:0,n}).get(),a=JSON.stringify({widget:r});t.enabled&&t.getKeySettings!=a&&(localStorage.setItem(t.keySettings,a),t.getKeySettings=a),"function"==typeof n.o.onSave&&n.o.onSave.call(this,null,a,t.keySettings)},_savePositionWidget:function(){var n=this,t=n.storage;n._loadKeys();var r=n.obj.find(n.o.grid+".sortable-grid").map(function(){return{section:e(this).children(n.o.widgets).map(function(){return{id:e(this).attr("id")}}).get()}}).get(),a=JSON.stringify({grid:r});t.enabled&&t.getKeyPosition!=a&&(localStorage.setItem(t.keyPosition,a),t.getKeyPosition=a),"function"==typeof n.o.onSave&&n.o.onSave.call(this,a,t.keyPosition)},init:function(){var n=this;if(!n.initialized){if(n._initStorage(n.storage),e("#"+n.objId).length||alert("It looks like your using a class instead of an ID, dont do that!"),!0===n.o.rtl&&e("body").addClass("rtl"),e(n.o.grid).each(function(){e(this).find(n.o.widgets).length&&e(this).addClass("sortable-grid")}),n.storage.enabled&&n.storage.getKeyPosition){var t=JSON.parse(n.storage.getKeyPosition);for(var r in t.grid){var a=n.obj.find(n.o.grid+".sortable-grid").eq(r);for(var s in t.grid[r].section)a.append(e("#"+t.grid[r].section[s].id))}}if(n.storage.enabled&&n.storage.getKeySettings){var l=JSON.parse(n.storage.getKeySettings);for(var r in l.widget){var d=e("#"+l.widget[r].id);l.widget[r].style&&d.removeClassPrefix("jarviswidget-color-").addClass(l.widget[r].style).attr("data-widget-attstyle",""+l.widget[r].style),1==l.widget[r].hidden?d.hide(1):d.show(1).removeAttr("data-widget-hidden"),1==l.widget[r].collapsed&&d.addClass("jarviswidget-collapsed").children("div").hide(1),d.children("header").children("h2").text()!=l.widget[r].title&&d.children("header").children("h2").text(l.widget[r].title)}}if(n.widget.each(function(){var t,r,a,i,o,s,l,d,p=e(this),c=e(this).children("header");if(!c.parent().attr("role")){!0===p.data("widget-hidden")&&p.hide(),!0===p.data("widget-collapsed")&&p.addClass("jarviswidget-collapsed").children("div").hide(),t=!0===n.o.customButton&&void 0===p.data("widget-custombutton")&&0!==n.customClass[0].length?'<a href="javascript:void(0);" class="button-icon jarviswidget-custom-btn"><i class="'+n.customClass[0]+'"></i></a>':"",r=!0===n.o.deleteButton&&void 0===p.data("widget-deletebutton")?'<a href="javascript:void(0);" class="button-icon jarviswidget-delete-btn" rel="tooltip" title="Delete" data-placement="bottom"><i class="'+n.o.deleteClass+'"></i></a>':"",a=!0===n.o.editButton&&void 0===p.data("widget-editbutton")?'<a href="javascript:void(0);" class="button-icon jarviswidget-edit-btn" rel="tooltip" title="Edit" data-placement="bottom"><i class="'+n.editClass[0]+'"></i></a>':"",i=!0===n.o.fullscreenButton&&void 0===p.data("widget-fullscreenbutton")?'<a href="javascript:void(0);" class="button-icon jarviswidget-fullscreen-btn" rel="tooltip" title="Fullscreen" data-placement="bottom"><i class="'+n.fullscreenClass[0]+'"></i></a>':"",!0===n.o.colorButton&&void 0===p.data("widget-colorbutton")?(o='<a data-toggle="dropdown" class="dropdown-toggle color-box selector" href="javascript:void(0);"></a><ul class="dropdown-menu arrow-box-up-right color-select pull-right"><li><span class="bg-color-green" data-widget-setstyle="jarviswidget-color-green" rel="tooltip" data-placement="left" data-original-title="Green Grass"></span></li><li><span class="bg-color-greenDark" data-widget-setstyle="jarviswidget-color-greenDark" rel="tooltip" data-placement="top" data-original-title="Dark Green"></span></li><li><span class="bg-color-greenLight" data-widget-setstyle="jarviswidget-color-greenLight" rel="tooltip" data-placement="top" data-original-title="Light Green"></span></li><li><span class="bg-color-purple" data-widget-setstyle="jarviswidget-color-purple" rel="tooltip" data-placement="top" data-original-title="Purple"></span></li><li><span class="bg-color-magenta" data-widget-setstyle="jarviswidget-color-magenta" rel="tooltip" data-placement="top" data-original-title="Magenta"></span></li><li><span class="bg-color-pink" data-widget-setstyle="jarviswidget-color-pink" rel="tooltip" data-placement="right" data-original-title="Pink"></span></li><li><span class="bg-color-pinkDark" data-widget-setstyle="jarviswidget-color-pinkDark" rel="tooltip" data-placement="left" data-original-title="Fade Pink"></span></li><li><span class="bg-color-blueLight" data-widget-setstyle="jarviswidget-color-blueLight" rel="tooltip" data-placement="top" data-original-title="Light Blue"></span></li><li><span class="bg-color-teal" data-widget-setstyle="jarviswidget-color-teal" rel="tooltip" data-placement="top" data-original-title="Teal"></span></li><li><span class="bg-color-blue" data-widget-setstyle="jarviswidget-color-blue" rel="tooltip" data-placement="top" data-original-title="Ocean Blue"></span></li><li><span class="bg-color-blueDark" data-widget-setstyle="jarviswidget-color-blueDark" rel="tooltip" data-placement="top" data-original-title="Night Sky"></span></li><li><span class="bg-color-darken" data-widget-setstyle="jarviswidget-color-darken" rel="tooltip" data-placement="right" data-original-title="Night"></span></li><li><span class="bg-color-yellow" data-widget-setstyle="jarviswidget-color-yellow" rel="tooltip" data-placement="left" data-original-title="Day Light"></span></li><li><span class="bg-color-orange" data-widget-setstyle="jarviswidget-color-orange" rel="tooltip" data-placement="bottom" data-original-title="Orange"></span></li><li><span class="bg-color-orangeDark" data-widget-setstyle="jarviswidget-color-orangeDark" rel="tooltip" data-placement="bottom" data-original-title="Dark Orange"></span></li><li><span class="bg-color-red" data-widget-setstyle="jarviswidget-color-red" rel="tooltip" data-placement="bottom" data-original-title="Red Rose"></span></li><li><span class="bg-color-redLight" data-widget-setstyle="jarviswidget-color-redLight" rel="tooltip" data-placement="bottom" data-original-title="Light Red"></span></li><li><span class="bg-color-white" data-widget-setstyle="jarviswidget-color-white" rel="tooltip" data-placement="right" data-original-title="Purity"></span></li><li><a href="javascript:void(0);" class="jarviswidget-remove-colors" data-widget-setstyle="" rel="tooltip" data-placement="bottom" data-original-title="Reset widget color to default">Remove</a></li></ul>',c.prepend('<div class="widget-toolbar">'+o+"</div>")):o="",!0===n.o.toggleButton&&void 0===p.data("widget-togglebutton")?(l=!0===p.data("widget-collapsed")||p.hasClass("jarviswidget-collapsed")?n.toggleClass[1]:n.toggleClass[0],s='<a href="javascript:void(0);" class="button-icon jarviswidget-toggle-btn" rel="tooltip" title="Collapse" data-placement="bottom"><i class="'+l+'"></i></a>'):s="",d=!0===n.o.refreshButton&&!1!==p.data("widget-refreshbutton")&&p.data("widget-load")?'<a href="javascript:void(0);" class="button-icon jarviswidget-refresh-btn" data-loading-text="&nbsp;&nbsp;Loading...&nbsp;" rel="tooltip" title="Refresh" data-placement="bottom"><i class="'+n.o.refreshButtonClass+'"></i></a>':"";var h=n.o.buttonOrder.replace(/%refresh%/g,d).replace(/%delete%/g,r).replace(/%custom%/g,t).replace(/%fullscreen%/g,i).replace(/%edit%/g,a).replace(/%toggle%/g,s);""===d&&""===r&&""===t&&""===i&&""===a&&""===s||c.prepend('<div class="jarviswidget-ctrls">'+h+"</div>"),!0===n.o.sortable&&void 0===p.data("widget-sortable")&&p.addClass("jarviswidget-sortable"),p.find(n.o.editPlaceholder).length&&p.find(n.o.editPlaceholder).find("input").val(e.trim(c.children("h2").text())),c.append('<span class="jarviswidget-loader"><i class="fa fa-refresh fa-spin"></i></span>'),p.attr("role","widget").children("div").attr("role","content").prev("header").attr("role","heading").children("div").attr("role","menu")}}),!0===n.o.buttonsHidden&&e(n.o.pwCtrls).hide(),n.obj.find("[data-widget-load]").each(function(){var t=e(this),r=t.children(),a=t.data("widget-load"),i=1e3*t.data("widget-refresh");t.children();t.find(".jarviswidget-ajax-placeholder").length||(t.children("widget-body").append('<div class="jarviswidget-ajax-placeholder">'+n.o.loadingLabel+"</div>"),t.data("widget-refresh")>0?(n._loadAjaxFile(t,a,r),e.intervalArr.push(setInterval(function(){n._loadAjaxFile(t,a,r)},i))):n._loadAjaxFile(t,a,r))}),!0===n.o.sortable&&jQuery.ui){var p=n.obj.find(n.o.grid+".sortable-grid").not("[data-widget-excludegrid]");p.sortable({items:p.find(n.o.widgets+".jarviswidget-sortable"),connectWith:p,placeholder:n.o.placeholderClass,cursor:"move",revert:!0,opacity:n.o.opacity,delay:200,cancel:".button-icon, #jarviswidget-fullscreen-mode > div",zIndex:1e4,handle:n.o.dragHandle,forcePlaceholderSize:!0,forceHelperSize:!0,update:function(e,t){n._runLoaderWidget(t.item.children()),n._savePositionWidget(),"function"==typeof n.o.onChange&&n.o.onChange.call(this,t.item)}})}!0===n.o.buttonsHidden&&n.widget.children("header").on("mouseenter."+i,function(){e(this).children(n.o.pwCtrls).stop(!0,!0).fadeTo(100,1)}).on("mouseleave."+i,function(){e(this).children(n.o.pwCtrls).stop(!0,!0).fadeTo(100,0)}),n._clickEvents(),n.storage.enabled&&(e(n.o.deleteSettingsKey).on(o,this,function(e){confirm(n.o.settingsKeyLabel)&&localStorage.removeItem(keySettings),e.preventDefault()}),e(n.o.deletePositionKey).on(o,this,function(e){confirm(n.o.positionKeyLabel)&&localStorage.removeItem(keyPosition),e.preventDefault()})),initialized=!0}},_initStorage:function(e){e.enabled=e.enabled&&!!function(){var e,n=+new Date;try{return localStorage.setItem(n,n),e=localStorage.getItem(n)==n,localStorage.removeItem(n),e}catch(e){}}(),this._loadKeys(),e.enabled&&(e.getKeySettings=localStorage.getItem(e.keySettings),e.getKeyPosition=localStorage.getItem(e.keyPosition))},_clickEvents:function(){function t(){if(e("#jarviswidget-fullscreen-mode").length){var t=e(n).height(),a=e("#jarviswidget-fullscreen-mode").children(r.o.widgets).children("header").height();e("#jarviswidget-fullscreen-mode").children(r.o.widgets).children("div").height(t-a-15)}}var r=this,a=r.widget.children("header");a.on(o,".jarviswidget-toggle-btn",function(n){var t=e(this),a=t.parents(r.o.widgets);r._runLoaderWidget(t),a.hasClass("jarviswidget-collapsed")?t.children().removeClass(r.toggleClass[1]).addClass(r.toggleClass[0]).parents(r.o.widgets).removeClass("jarviswidget-collapsed").children("[role=content]").slideDown(r.o.toggleSpeed,function(){r._saveSettingsWidget()}):t.children().removeClass(r.toggleClass[0]).addClass(r.toggleClass[1]).parents(r.o.widgets).addClass("jarviswidget-collapsed").children("[role=content]").slideUp(r.o.toggleSpeed,function(){r._saveSettingsWidget()}),"function"==typeof r.o.onToggle&&r.o.onToggle.call(this,a),n.preventDefault()}),a.on(o,".jarviswidget-fullscreen-btn",function(n){var a=e(this).parents(r.o.widgets),i=a.children("div");r._runLoaderWidget(e(this)),e("#jarviswidget-fullscreen-mode").length?(e(".nooverflow").removeClass("nooverflow"),a.unwrap("div").children("div").removeAttr("style").end().find(".jarviswidget-fullscreen-btn:first").children().removeClass(r.fullscreenClass[1]).addClass(r.fullscreenClass[0]).parents(r.pwCtrls).children("a").show(),i.hasClass("jarviswidget-visible")&&i.hide().removeClass("jarviswidget-visible")):(e("body").addClass("nooverflow"),a.wrap('<div id="jarviswidget-fullscreen-mode"/>').parent().find(".jarviswidget-fullscreen-btn:first").children().removeClass(r.fullscreenClass[0]).addClass(r.fullscreenClass[1]).parents(r.pwCtrls).children("a:not(.jarviswidget-fullscreen-btn)").hide(),i.is(":hidden")&&i.show().addClass("jarviswidget-visible")),t(),"function"==typeof r.o.onFullscreen&&r.o.onFullscreen.call(this,a),n.preventDefault()}),e(n).on("resize."+i,function(){t()}),a.on(o,".jarviswidget-edit-btn",function(n){var t=e(this).parents(r.o.widgets);r._runLoaderWidget(e(this)),t.find(r.o.editPlaceholder).is(":visible")?e(this).children().removeClass(r.editClass[1]).addClass(r.editClass[0]).parents(r.o.widgets).find(r.o.editPlaceholder).slideUp(r.o.editSpeed,function(){r._saveSettingsWidget()}):e(this).children().removeClass(r.editClass[0]).addClass(r.editClass[1]).parents(r.o.widgets).find(r.o.editPlaceholder).slideDown(r.o.editSpeed),"function"==typeof r.o.onEdit&&r.o.onEdit.call(this,t),n.preventDefault()}),e(r.o.editPlaceholder).find("input").keyup(function(){e(this).parents(r.o.widgets).children("header").children("h2").text(e(this).val())}),a.on(o,"[data-widget-setstyle]",function(n){var t=e(this).data("widget-setstyle"),a="";e(this).parents(r.o.editPlaceholder).find("[data-widget-setstyle]").each(function(){a+=e(this).data("widget-setstyle")+" "}),e(this).parents(r.o.widgets).attr("data-widget-attstyle",""+t).removeClassPrefix("jarviswidget-color-").addClass(t),r._runLoaderWidget(e(this)),r._saveSettingsWidget(),n.preventDefault()}),a.on(o,".jarviswidget-custom-btn",function(n){var t=e(this).parents(r.o.widgets);r._runLoaderWidget(e(this)),e(this).children("."+r.customClass[0]).length?(e(this).children().removeClass(r.customClass[0]).addClass(r.customClass[1]),"function"==typeof r.o.customStart&&r.o.customStart.call(this,t)):(e(this).children().removeClass(r.customClass[1]).addClass(r.customClass[0]),"function"==typeof r.o.customEnd&&r.o.customEnd.call(this,t)),r._saveSettingsWidget(),n.preventDefault()}),a.on(o,".jarviswidget-delete-btn",function(n){var t=e(this).parents(r.o.widgets),a=t.attr("id"),i=t.children("header").children("h2").text();e.SmartMessageBox?e.SmartMessageBox({title:"<i class='fa fa-times' style='color:#ed1c24'></i> "+r.o.labelDelete+' "'+i+'"',content:r.o.deleteMsg,buttons:"[No][Yes]"},function(n){"Yes"==n&&(r._runLoaderWidget(e(this)),e("#"+a).fadeOut(r.o.deleteSpeed,function(){e(this).remove(),"function"==typeof r.o.onDelete&&r.o.onDelete.call(this,t)}))}):e("#"+a).fadeOut(r.o.deleteSpeed,function(){e(this).remove(),"function"==typeof r.o.onDelete&&r.o.onDelete.call(this,t)}),n.preventDefault()}),a.on(o,".jarviswidget-refresh-btn",function(n){var t=e(this).parents(r.o.widgets),a=t.data("widget-load"),i=t.children(),o=e(this);o.button("loading"),i.addClass("widget-body-ajax-loading"),setTimeout(function(){o.button("reset"),i.removeClass("widget-body-ajax-loading"),r._loadAjaxFile(t,a,i)},1e3),n.preventDefault()}),a=null},destroy:function(){var t=this,r="."+i;t.obj.find(t.o.grid+".sortable-grid").not("[data-widget-excludegrid]").sortable("destroy"),t.widget.children("header").off(r),e(t.o.deleteSettingsKey).off(r),e(t.o.deletePositionKey).off(r),e(n).off(r),t.obj.removeData(i)}},e.fn[i]=function(n){return this.each(function(){var t=e(this),r=t.data(i);if(!r){var o="object"==typeof n&&n;t.data(i,r=new a(this,o))}"string"==typeof n&&r[n]()})},e.fn[i].defaults={grid:"section",widgets:".jarviswidget",localStorage:!0,deleteSettingsKey:"",settingsKeyLabel:"Reset settings?",deletePositionKey:"",positionKeyLabel:"Reset position?",sortable:!0,buttonsHidden:!1,toggleButton:!0,toggleClass:"min-10 | plus-10",toggleSpeed:200,onToggle:function(){},deleteButton:!0,deleteMsg:"Warning: This action cannot be undone",deleteClass:"trashcan-10",deleteSpeed:200,onDelete:function(){},editButton:!0,editPlaceholder:".jarviswidget-editbox",editClass:"pencil-10 | delete-10",editSpeed:200,onEdit:function(){},colorButton:!0,fullscreenButton:!0,fullscreenClass:"fullscreen-10 | normalscreen-10",fullscreenDiff:3,onFullscreen:function(){},customButton:!0,customClass:"",customStart:function(){},customEnd:function(){},buttonOrder:"%refresh% %delete% %custom% %edit% %fullscreen% %toggle%",opacity:1,dragHandle:"> header",placeholderClass:"jarviswidget-placeholder",indicator:!0,indicatorTime:600,ajax:!0,loadingLabel:"loading...",timestampPlaceholder:".jarviswidget-timestamp",timestampFormat:"Last update: %m%/%d%/%y% %h%:%i%:%s%",refreshButton:!0,refreshButtonClass:"refresh-10",labelError:"Sorry but there was a error:",labelUpdated:"Last Update:",labelRefresh:"Refresh",labelDelete:"Delete widget:",afterLoad:function(){},rtl:!1,onChange:function(){},onSave:function(){},ajaxnav:!0},e.fn.removeClassPrefix=function(n){return this.each(function(t,r){var a=r.className.split(" ").map(function(e){return 0===e.indexOf(n)?"":e});r.className=e.trim(a.join(" "))}),this}}(jQuery,window,document)},521:function(e,n,t){"use strict";function r(e,n){var t={};for(var r in e)n.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function i(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function o(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var s=t(0),l=t.n(s),d=t(522),p=t.n(d),c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},h=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),u=function(e){function n(){return a(this,n),i(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return o(n,e),h(n,[{key:"componentDidMount",value:function(){var e=this;p()("https://cdn.ckeditor.com/4.5.11/standard/ckeditor.js",function(){var n=window.CKEDITOR;e._editor=n.replace(e.props.container,e.props.options);var t=e.props;e._editor.on("instanceReady",function(e){var n=e.editor;t.onChange&&n.on("change",function(e){t.onChange(n)}),t.onClick&&n.on("click",function(e){t.onClick(n)}),t.onBlur&&n.on("blur",function(e){t.onBlur(n)}),$("iframe").contents().click(function(e){void 0!==e.target.href&&window.open(e.target.href,"new"+e.screenX)})})})}},{key:"componentWillUnmount",value:function(){this._editor&&this._editor.destroy()}},{key:"render",value:function(){var e=c({},this.props),n=e.container,t=(e.options,r(e,["container","options"]));return l.a.createElement("textarea",c({style:{opacity:0},id:n},t,{ref:"editor"}))}}]),n}(l.a.Component),f=u,g=f;n.a=g;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(u,"SmartCKEditor","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/forms/editors/SmartCKEditor.js"),__REACT_HOT_LOADER__.register(f,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/forms/editors/SmartCKEditor.js"),__REACT_HOT_LOADER__.register(g,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/forms/editors/SmartCKEditor.js"))}()},522:function(e,n,t){var r,a;/*!
  * $script.js JS loader & dependency manager
  * https://github.com/ded/script.js
  * (c) Dustin Diaz 2014 | License MIT
  */
!function(i,o){void 0!==e&&e.exports?e.exports=o():(r=o,void 0!==(a="function"==typeof r?r.call(n,t,n,e):r)&&(e.exports=a))}(0,function(){function e(e,n){for(var t=0,r=e.length;t<r;++t)if(!n(e[t]))return l;return 1}function n(n,t){e(n,function(e){return!t(e)})}function t(i,o,s){function l(e){return e.call?e():h[e]}function p(){if(!--w){h[v]=1,m&&m();for(var t in f)e(t.split("|"),l)&&!n(f[t],l)&&(f[t]=[])}}i=i[d]?i:[i];var c=o&&o.call,m=c?o:s,v=c?i.join(""):o,w=i.length;return setTimeout(function(){n(i,function e(n,t){return null===n?p():(t||/^https?:\/\//.test(n)||!a||(n=-1===n.indexOf(".js")?a+n+".js":a+n),g[n]?(v&&(u[v]=1),2==g[n]?p():setTimeout(function(){e(n,!0)},0)):(g[n]=1,v&&(u[v]=1),void r(n,p)))})},0),t}function r(e,n){var t,r=o.createElement("script");r.onload=r.onerror=r[c]=function(){r[p]&&!/^c|loade/.test(r[p])||t||(r.onload=r[c]=null,t=1,g[e]=2,n())},r.async=1,r.src=i?e+(-1===e.indexOf("?")?"?":"&")+i:e,s.insertBefore(r,s.lastChild)}var a,i,o=document,s=o.getElementsByTagName("head")[0],l=!1,d="push",p="readyState",c="onreadystatechange",h={},u={},f={},g={};return t.get=r,t.order=function(e,n,r){!function a(i){i=e.shift(),e.length?t(i,a):t(i,n,r)}()},t.path=function(e){a=e},t.urlArgs=function(e){i=e},t.ready=function(r,a,i){r=r[d]?r:[r];var o=[];return!n(r,function(e){h[e]||o[d](e)})&&e(r,function(e){return h[e]})?a():function(e){f[e]=f[e]||[],f[e][d](a),i&&i(o)}(r.join("|")),t},t.done=function(e){t([null],e)},t})},523:function(e,n,t){"use strict";function r(e,n){var t={};for(var r in e)n.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function i(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function o(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var s=t(0),l=t.n(s),d=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},p=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),c=function(e){function n(){return a(this,n),i(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return o(n,e),p(n,[{key:"componentDidMount",value:function(){var e=[],n=this.props,t=$(this.refs.input);n.minRestrict&&e.push(function(e){$(n.minRestrict).datepicker("option","minDate",e)}),n.maxRestrict&&e.push(function(e){$(n.maxRestrict).datepicker("option","maxDate",e)}),e.push(function(e){t.triggerHandler("change");var n=t.closest("form");if("function"==typeof n.bootstrapValidator)try{n.bootstrapValidator("revalidateField",t)}catch(e){console.log(e.message)}});var r={prevText:'<i class="fa fa-chevron-left"></i>',nextText:'<i class="fa fa-chevron-right"></i>',onSelect:function(n){e.forEach(function(e){e.call(e,n)})}};n.numberOfMonths&&(r.numberOfMonths=n.numberOfMonths),n.dateFormat&&(r.dateFormat=n.dateFormat),n.defaultDate&&(r.defaultDate=n.defaultDate),n.changeMonth&&(r.changeMonth=n.changeMonth),n.changeYear&&(r.changeYear=n.changeYear),t.datepicker(r)}},{key:"render",value:function(){var e=d({},this.props),n=(e.minRestrict,e.maxRestrict,e.changesMonth,e.numberOfMonths,e.dateFormat,e.defaultDate,e.changeMonth,e.changeYear,r(e,["minRestrict","maxRestrict","changesMonth","numberOfMonths","dateFormat","defaultDate","changeMonth","changeYear"]));return l.a.createElement("input",d({type:"text"},n,{ref:"input"}))}}]),n}(l.a.Component),h=c,u=h;n.a=u;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(c,"UiDatepicker","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/forms/inputs/UiDatepicker.js"),__REACT_HOT_LOADER__.register(h,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/forms/inputs/UiDatepicker.js"),__REACT_HOT_LOADER__.register(u,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/forms/inputs/UiDatepicker.js"))}()},524:function(e,n,t){"use strict";function r(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function a(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function i(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=t(0),s=t.n(o),l=t(17),d=t.n(l),p=t(525),c=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}();$.widget("ui.dialog",$.extend({},$.ui.dialog.prototype,{_title:function(e){this.options.title?e.html(this.options.title):e.html("&#160;")},_allowInteraction:function(e){return!!$(e.target).closest(".ui-dialog, .ui-datepicker, [class^=cke_dialog]").length||this._super(e)}}));var h=function(e){function n(e){r(this,n);var t=a(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e));return t.showDialog=t.showDialog.bind(t),t}return i(n,e),c(n,[{key:"showDialog",value:function(e){e.preventDefault();var n=this.props,t=(n.id,$("<div><p>Loading...</p></div>").dialog({title:'<div class="widget-header">'+n.header+"</div>",width:800,position:{my:"center",at:"center",of:window,collision:"fit"},resizable:!0,modal:!!this.props.modal,close:function(e){$(this).remove()}})),r=function(e){e.persist(),t.dialog("close")};if(n.add){var a=n.attributes.reduce(function(e,n){return _.set(e,n.name,"")},{});n.saveAction.data&&(a=_.extend(a,n.saveAction.data));var i=s.a.createElement(p.a,{new:!0,closeDialog:r,tableIdentifier:n.tableIdentifier,attributes:n.attributes,row:a,pk:"",ajax:n.saveAction});return void d.a.render(i,t[0])}var o={url:n.ajax.url,dataType:"JSON",cache:!1};if(n.ajax.token&&(o.headers={Authorization:localStorage.getItem("token"),"Content-Type":"application/json"}),n.ajax.method&&(o.method=n.ajax.method),n.ajax.data&&(o.data=_.extend(n.ajax.data,{lang:localStorage.getItem("lang")})),n.pk&&(o.url=o.url.replace(":pk",n.pk)),n.edit&&$.ajax(_.extend(o,{success:function(e){var a=s.a.createElement(p.a,{new:!1,closeDialog:r,tableIdentifier:n.tableIdentifier,attributes:this.props.attributes,row:e,pk:n.pk,ajax:n.saveAction});d.a.render(a,t[0])}.bind(this),error:function(e,n,t){console.error(this.props.url,n,t.toString())}.bind(this)})),n.delete){var l=s.a.createElement(g,{closeDialog:r,tableIdentifier:n.tableIdentifier,ajax_options:o});d.a.render(l,t[0])}n.info&&$.ajax(_.extend(o,{success:function(e){console.log(e,n.tableIdentifier);var a="";if(n.template){var i=n.template;a=s.a.createElement(i.type,{closeDialog:r,data:e,tableIdentifier:n.tableIdentifier})}else a=e.content;d.a.render(a,t[0])}.bind(this),error:function(e,t,r){console.error(n.url,t,r.toString())}.bind(this)}))}},{key:"render",value:function(){var e="",n="",t="",r="";return this.props.className&&(n=this.props.className),this.props.title&&(t=this.props.title),this.props.titleAttr&&(r=this.props.titleAttr),this.props.edit&&(e=s.a.createElement("button",{className:"btn btn-default btn-edit "+n,onClick:this.showDialog,title:r},s.a.createElement("i",{className:"fa fa-pencil"})," ",t)),this.props.delete&&(e=s.a.createElement("button",{className:"btn btn-default btn-delete "+n,onClick:this.showDialog,title:r},s.a.createElement("i",{className:"fa fa-times"})," ",t)),this.props.info&&(e=s.a.createElement("button",{className:"btn btn-default"+n,onClick:this.showDialog},s.a.createElement("i",{className:"fa fa-eye",title:r})," ",t)),this.props.add&&(e=s.a.createElement("button",{className:"btn "+n,onClick:this.showDialog,title:r},s.a.createElement("i",{className:"fa fa-plus-circle"})," ",t)),this.props.customButton&&(e=s.a.createElement(this.props.customButton,{showDialog:this.showDialog})),e}}]),n}(s.a.Component),u=h,f=u;n.a=f;var g=function(e){function n(e){r(this,n);var t=a(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e));return t._submitDialog=function(){return t.___submitDialog__REACT_HOT_LOADER__.apply(t,arguments)},t}return i(n,e),c(n,[{key:"___submitDialog__REACT_HOT_LOADER__",value:function(e){e.preventDefault(),$.ajax(_.extend(this.props.ajax_options,{success:function(e){console.log(e)}.bind(this),error:function(e,n,t){console.error(this.props.ajax_options.url,n,t.toString())}.bind(this)})),this.props.closeDialog(e),$(this.props.tableIdentifier).dataTable().api().ajax.reload(null,!1)}}]),c(n,[{key:"render",value:function(){return s.a.createElement("div",{id:"dialog_simple"},s.a.createElement("form",{method:"POST",onSubmit:this._submitDialog},s.a.createElement("div",{style:{textAlign:"right"}},s.a.createElement("button",{className:"btn btn-danger",onClick:this._submitDialog},s.a.createElement("i",{className:"fa fa-trash-o"}),"  Yes"),s.a.createElement("button",{className:"btn btn-default",onClick:this.props.closeDialog},s.a.createElement("i",{className:"fa fa-times"}),"  Cancel"))))}}]),n}(s.a.Component);!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(h,"DialogModalButton","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/modal-dialog/DialogModalButton.js"),__REACT_HOT_LOADER__.register(g,"deleteContent","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/modal-dialog/DialogModalButton.js"),__REACT_HOT_LOADER__.register(u,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/modal-dialog/DialogModalButton.js"),__REACT_HOT_LOADER__.register(f,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/modal-dialog/DialogModalButton.js"))}()},525:function(e,n,t){"use strict";function r(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function a(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function i(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var o=t(0),s=t.n(o),l=t(523),d=t(521),p=t(528),c=(t.n(p),function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}());t(529);var h=function(e){function n(e){r(this,n);var t=a(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e));return t._submitDialog=function(){return t.___submitDialog__REACT_HOT_LOADER__.apply(t,arguments)},t._cancelDialog=function(){return t.___cancelDialog__REACT_HOT_LOADER__.apply(t,arguments)},t.state={attributes:t.props.attributes,row:t.props.row,new:t.props.new},t.handleInputChange=t.handleInputChange.bind(t),t.handleEditorChange=t.handleEditorChange.bind(t),t.getValueByName=t.getValueByName.bind(t),t.handleLinkChange=t.handleLinkChange.bind(t),t}return i(n,e),c(n,[{key:"componentDidMount",value:function(){$('[data-toogle="datetime"]').datetimepicker({locale:"en",showTodayButton:!0,showClear:!0,ignoreReadonly:!1,allowInputToggle:!0}),this.state={attributes:this.props.attributes,row:this.props.row,new:this.props.new}}},{key:"componentWillUnmount",value:function(){$('[data-toogle="datetime"]').datetimepicker("destroy")}},{key:"___submitDialog__REACT_HOT_LOADER__",value:function(e){e.preventDefault();var n=this.props,t={url:n.ajax.url.replace(":pk",n.pk),dataType:"JSON",data:JSON.stringify(this.state.row),cache:!1,contentType:"application/json"};n.ajax.token&&(t.headers={Authorization:localStorage.getItem("token")}),n.ajax.method&&(t.method=n.ajax.method),$.ajax(_.extend(t,{success:function(n){console.log(n),this.props.closeDialog(e),$(this.props.tableIdentifier).dataTable().api().ajax.reload(null,!1)}.bind(this),error:function(e,n,t){console.error(this.props.ajax.url,n,t.toString())}.bind(this)}))}},{key:"___cancelDialog__REACT_HOT_LOADER__",value:function(e){this.props.closeDialog(e)}},{key:"handleInputChange",value:function(e){var n=e.target,t="checkbox"===n.type?n.checked:n.value,r=n.name;_.set(this.state.row,r,t),this.setState({})}},{key:"handleEditorChange",value:function(e){var n=e.name,t=e.getData();_.set(this.state.row,n,t),this.setState({})}},{key:"handleLinkChange",value:function(e){var n=e.name,t=e.getData(),r=/(https?|ftp):\/\/(-\.)?([^\s\/?\.]+\.?)+(\/[^\s]*)?[^\s\.,\"\<\>;](?!.*\1)/gi;t=t.replace(r,"$&"),t=$("<div></div>").append(t).text();var a=t.match(r);null===a&&(a=[]),_.set(this.state.row,n,Array.from(new Set(a))),this.setState({})}},{key:"getValueByName",value:function(e){return _.isEmpty(this.state.row)?"":e.split(".").reduce(function(e,n){return e[n]},this.state.row)}},{key:"render",value:function(){var e=this,n=this.state,t=n.attributes.map(function(t,r){var a="",i="form-control ",o=!1;if(t.autoCreate&&n.new)return!0;if("hidden"!=t.type){var p=""!=t.title?t.title:t.name;a=s.a.createElement("label",{className:"col-md-2 control-label",style:{fontWeight:"bold"}},p.toUpperCase())}"undefined"!=t.class&&(i+=t.class),"undefined"!=t.readonly&&t.readonly&&!n.new&&(o=!0);var c=s.a.createElement("input",{className:i,type:t.type,name:t.name,value:e.getValueByName(t.name),onChange:e.handleInputChange,readOnly:o});if("phone"==t.type&&(c=s.a.createElement("label",{className:"input-icon-right"},s.a.createElement("i",{className:"icon-append fa fa-phone"}),s.a.createElement("input",{type:"text",name:t.name,value:e.getValueByName(t.name),onChange:e.handleInputChange,className:i,readOnly:o}))),"link"==t.type){var h=e.getValueByName(t.name);c="",_.isEmpty(h)||(_.isArray(h)||(h=[h]),h.map(function(e){c+='<p><a href="'+e+'">'+e+"</a></p>"})),c=s.a.createElement(d.a,{className:i,container:t.name,options:{height:"80px",toolbar:[{name:"links",items:["Link","Unlink","Anchor"]}],language:"en"},name:t.name,onChange:e.handleLinkChange,defaultValue:c})}return"date"==t.type&&(c=s.a.createElement("label",{className:"input-icon-right"},s.a.createElement("i",{className:"icon-append fa fa-calendar"}),s.a.createElement(l.a,{name:t.name,value:e.getValueByName(t.name),onChange:e.handleInputChange,className:i,changeMonth:!0,changeYear:!0,readOnly:o,"data-date-format":"dd/mm/yy"}))),"datetime"==t.type&&(c=s.a.createElement("label",{className:"input-icon-right"},s.a.createElement("i",{className:"icon-append fa fa-calendar"}),s.a.createElement("input",{type:"text",name:t.name,defaultValue:e.getValueByName(t.name),"data-toogle":"datetime",onChange:e.handleInputChange,"data-date-format":"YYYY-MM-DD HH:mm:ss",className:i,readOnly:o}))),"textarea"==t.type&&(c=s.a.createElement("textarea",{className:i,name:t.name,onChange:e.handleInputChange,readOnly:o},e.getValueByName(t.name)," ")),"html"==t.type&&(c=s.a.createElement(d.a,{className:i,container:t.name,options:{height:"180px",language:"en"},name:t.name,onChange:e.handleEditorChange,defaultValue:e.getValueByName(t.name),readOnly:o})),s.a.createElement("div",{key:r,className:"form-group pos-relative"},a,s.a.createElement("div",{className:"col-md-10"},c))});return s.a.createElement("div",{className:this.props.className},s.a.createElement("form",{className:"form-horizontal",method:"POST"},t,s.a.createElement("div",{className:"col-md-12",style:{textAlign:"right"}},s.a.createElement("button",{className:"btn btn-default",type:"reset",onClick:this._cancelDialog},"Cancel")," ",s.a.createElement("button",{className:"btn btn-primary",onClick:this._submitDialog,type:"submit"},s.a.createElement("i",{className:"fa fa-save"}),"  Save"))))}}]),n}(s.a.Component),u=h,f=u;n.a=f;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(h,"DialogModalContent","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/modal-dialog/DialogModalContent.js"),__REACT_HOT_LOADER__.register(u,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/modal-dialog/DialogModalContent.js"),__REACT_HOT_LOADER__.register(f,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/modal-dialog/DialogModalContent.js"))}()},526:function(e,n,t){n=e.exports=t(533)(),n.push([e.i,'/*!\n * Datetimepicker for Bootstrap 3\n * version : 4.17.47\n * https://github.com/Eonasdan/bootstrap-datetimepicker/\n */.bootstrap-datetimepicker-widget{list-style:none}.bootstrap-datetimepicker-widget.dropdown-menu{display:block;margin:2px 0;padding:4px;width:19em}@media (min-width:768px){.bootstrap-datetimepicker-widget.dropdown-menu.timepicker-sbs{width:38em}}@media (min-width:992px){.bootstrap-datetimepicker-widget.dropdown-menu.timepicker-sbs{width:38em}}@media (min-width:1200px){.bootstrap-datetimepicker-widget.dropdown-menu.timepicker-sbs{width:38em}}.bootstrap-datetimepicker-widget.dropdown-menu:before,.bootstrap-datetimepicker-widget.dropdown-menu:after{content:\'\';display:inline-block;position:absolute}.bootstrap-datetimepicker-widget.dropdown-menu.bottom:before{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #ccc;border-bottom-color:rgba(0,0,0,0.2);top:-7px;left:7px}.bootstrap-datetimepicker-widget.dropdown-menu.bottom:after{border-left:6px solid transparent;border-right:6px solid transparent;border-bottom:6px solid white;top:-6px;left:8px}.bootstrap-datetimepicker-widget.dropdown-menu.top:before{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #ccc;border-top-color:rgba(0,0,0,0.2);bottom:-7px;left:6px}.bootstrap-datetimepicker-widget.dropdown-menu.top:after{border-left:6px solid transparent;border-right:6px solid transparent;border-top:6px solid white;bottom:-6px;left:7px}.bootstrap-datetimepicker-widget.dropdown-menu.pull-right:before{left:auto;right:6px}.bootstrap-datetimepicker-widget.dropdown-menu.pull-right:after{left:auto;right:7px}.bootstrap-datetimepicker-widget .list-unstyled{margin:0}.bootstrap-datetimepicker-widget a[data-action]{padding:6px 0}.bootstrap-datetimepicker-widget a[data-action]:active{box-shadow:none}.bootstrap-datetimepicker-widget .timepicker-hour,.bootstrap-datetimepicker-widget .timepicker-minute,.bootstrap-datetimepicker-widget .timepicker-second{width:54px;font-weight:bold;font-size:1.2em;margin:0}.bootstrap-datetimepicker-widget button[data-action]{padding:6px}.bootstrap-datetimepicker-widget .btn[data-action="incrementHours"]::after{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);border:0;content:"Increment Hours"}.bootstrap-datetimepicker-widget .btn[data-action="incrementMinutes"]::after{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);border:0;content:"Increment Minutes"}.bootstrap-datetimepicker-widget .btn[data-action="decrementHours"]::after{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);border:0;content:"Decrement Hours"}.bootstrap-datetimepicker-widget .btn[data-action="decrementMinutes"]::after{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);border:0;content:"Decrement Minutes"}.bootstrap-datetimepicker-widget .btn[data-action="showHours"]::after{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);border:0;content:"Show Hours"}.bootstrap-datetimepicker-widget .btn[data-action="showMinutes"]::after{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);border:0;content:"Show Minutes"}.bootstrap-datetimepicker-widget .btn[data-action="togglePeriod"]::after{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);border:0;content:"Toggle AM/PM"}.bootstrap-datetimepicker-widget .btn[data-action="clear"]::after{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);border:0;content:"Clear the picker"}.bootstrap-datetimepicker-widget .btn[data-action="today"]::after{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);border:0;content:"Set the date to today"}.bootstrap-datetimepicker-widget .picker-switch{text-align:center}.bootstrap-datetimepicker-widget .picker-switch::after{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);border:0;content:"Toggle Date and Time Screens"}.bootstrap-datetimepicker-widget .picker-switch td{padding:0;margin:0;height:auto;width:auto;line-height:inherit}.bootstrap-datetimepicker-widget .picker-switch td span{line-height:2.5;height:2.5em;width:100%}.bootstrap-datetimepicker-widget table{width:100%;margin:0}.bootstrap-datetimepicker-widget table td,.bootstrap-datetimepicker-widget table th{text-align:center;border-radius:4px}.bootstrap-datetimepicker-widget table th{height:20px;line-height:20px;width:20px}.bootstrap-datetimepicker-widget table th.picker-switch{width:145px}.bootstrap-datetimepicker-widget table th.disabled,.bootstrap-datetimepicker-widget table th.disabled:hover{background:none;color:#777;cursor:not-allowed}.bootstrap-datetimepicker-widget table th.prev::after{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);border:0;content:"Previous Month"}.bootstrap-datetimepicker-widget table th.next::after{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);border:0;content:"Next Month"}.bootstrap-datetimepicker-widget table thead tr:first-child th{cursor:pointer}.bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background:#eee}.bootstrap-datetimepicker-widget table td{height:54px;line-height:54px;width:54px}.bootstrap-datetimepicker-widget table td.cw{font-size:.8em;height:20px;line-height:20px;color:#777}.bootstrap-datetimepicker-widget table td.day{height:20px;line-height:20px;width:20px}.bootstrap-datetimepicker-widget table td.day:hover,.bootstrap-datetimepicker-widget table td.hour:hover,.bootstrap-datetimepicker-widget table td.minute:hover,.bootstrap-datetimepicker-widget table td.second:hover{background:#eee;cursor:pointer}.bootstrap-datetimepicker-widget table td.old,.bootstrap-datetimepicker-widget table td.new{color:#777}.bootstrap-datetimepicker-widget table td.today{position:relative}.bootstrap-datetimepicker-widget table td.today:before{content:\'\';display:inline-block;border:solid transparent;border-width:0 0 7px 7px;border-bottom-color:#337ab7;border-top-color:rgba(0,0,0,0.2);position:absolute;bottom:4px;right:4px}.bootstrap-datetimepicker-widget table td.active,.bootstrap-datetimepicker-widget table td.active:hover{background-color:#337ab7;color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,0.25)}.bootstrap-datetimepicker-widget table td.active.today:before{border-bottom-color:#fff}.bootstrap-datetimepicker-widget table td.disabled,.bootstrap-datetimepicker-widget table td.disabled:hover{background:none;color:#777;cursor:not-allowed}.bootstrap-datetimepicker-widget table td span{display:inline-block;width:54px;height:54px;line-height:54px;margin:2px 1.5px;cursor:pointer;border-radius:4px}.bootstrap-datetimepicker-widget table td span:hover{background:#eee}.bootstrap-datetimepicker-widget table td span.active{background-color:#337ab7;color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,0.25)}.bootstrap-datetimepicker-widget table td span.old{color:#777}.bootstrap-datetimepicker-widget table td span.disabled,.bootstrap-datetimepicker-widget table td span.disabled:hover{background:none;color:#777;cursor:not-allowed}.bootstrap-datetimepicker-widget.usetwentyfour td.hour{height:27px;line-height:27px}.bootstrap-datetimepicker-widget.wider{width:21em}.bootstrap-datetimepicker-widget .datepicker-decades .decade{line-height:1.8em !important}.input-group.date .input-group-addon{cursor:pointer}.sr-only{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);border:0}',""])},527:function(e,n){e.exports="/*! version : 4.17.47\r\n =========================================================\r\n bootstrap-datetimejs\r\n https://github.com/Eonasdan/bootstrap-datetimepicker\r\n Copyright (c) 2015 Jonathan Peterson\r\n =========================================================\r\n */\r\n/*\r\n The MIT License (MIT)\r\n\r\n Copyright (c) 2015 Jonathan Peterson\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights\r\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n copies of the Software, and to permit persons to whom the Software is\r\n furnished to do so, subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n */\r\n/*global define:false */\r\n/*global exports:false */\r\n/*global require:false */\r\n/*global jQuery:false */\r\n/*global moment:false */\r\n(function (factory) {\r\n    'use strict';\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD is used - Register as an anonymous module.\r\n        define(['jquery', 'moment'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('moment'));\r\n    } else {\r\n        // Neither AMD nor CommonJS used. Use global variables.\r\n        if (typeof jQuery === 'undefined') {\r\n            throw 'bootstrap-datetimepicker requires jQuery to be loaded first';\r\n        }\r\n        if (typeof moment === 'undefined') {\r\n            throw 'bootstrap-datetimepicker requires Moment.js to be loaded first';\r\n        }\r\n        factory(jQuery, moment);\r\n    }\r\n}(function ($, moment) {\r\n    'use strict';\r\n    if (!moment) {\r\n        throw new Error('bootstrap-datetimepicker requires Moment.js to be loaded first');\r\n    }\r\n\r\n    var dateTimePicker = function (element, options) {\r\n        var picker = {},\r\n            date,\r\n            viewDate,\r\n            unset = true,\r\n            input,\r\n            component = false,\r\n            widget = false,\r\n            use24Hours,\r\n            minViewModeNumber = 0,\r\n            actualFormat,\r\n            parseFormats,\r\n            currentViewMode,\r\n            datePickerModes = [\r\n                {\r\n                    clsName: 'days',\r\n                    navFnc: 'M',\r\n                    navStep: 1\r\n                },\r\n                {\r\n                    clsName: 'months',\r\n                    navFnc: 'y',\r\n                    navStep: 1\r\n                },\r\n                {\r\n                    clsName: 'years',\r\n                    navFnc: 'y',\r\n                    navStep: 10\r\n                },\r\n                {\r\n                    clsName: 'decades',\r\n                    navFnc: 'y',\r\n                    navStep: 100\r\n                }\r\n            ],\r\n            viewModes = ['days', 'months', 'years', 'decades'],\r\n            verticalModes = ['top', 'bottom', 'auto'],\r\n            horizontalModes = ['left', 'right', 'auto'],\r\n            toolbarPlacements = ['default', 'top', 'bottom'],\r\n            keyMap = {\r\n                'up': 38,\r\n                38: 'up',\r\n                'down': 40,\r\n                40: 'down',\r\n                'left': 37,\r\n                37: 'left',\r\n                'right': 39,\r\n                39: 'right',\r\n                'tab': 9,\r\n                9: 'tab',\r\n                'escape': 27,\r\n                27: 'escape',\r\n                'enter': 13,\r\n                13: 'enter',\r\n                'pageUp': 33,\r\n                33: 'pageUp',\r\n                'pageDown': 34,\r\n                34: 'pageDown',\r\n                'shift': 16,\r\n                16: 'shift',\r\n                'control': 17,\r\n                17: 'control',\r\n                'space': 32,\r\n                32: 'space',\r\n                't': 84,\r\n                84: 't',\r\n                'delete': 46,\r\n                46: 'delete'\r\n            },\r\n            keyState = {},\r\n\r\n            /********************************************************************************\r\n             *\r\n             * Private functions\r\n             *\r\n             ********************************************************************************/\r\n\r\n            hasTimeZone = function () {\r\n                return moment.tz !== undefined && options.timeZone !== undefined && options.timeZone !== null && options.timeZone !== '';\r\n            },\r\n\r\n            getMoment = function (d) {\r\n                var returnMoment;\r\n\r\n                if (d === undefined || d === null) {\r\n                    returnMoment = moment(); //TODO should this use format? and locale?\r\n                } else if (moment.isDate(d) || moment.isMoment(d)) {\r\n                    // If the date that is passed in is already a Date() or moment() object,\r\n                    // pass it directly to moment.\r\n                    returnMoment = moment(d);\r\n                } else if (hasTimeZone()) { // There is a string to parse and a default time zone\r\n                    // parse with the tz function which takes a default time zone if it is not in the format string\r\n                    returnMoment = moment.tz(d, parseFormats, options.useStrict, options.timeZone);\r\n                } else {\r\n                    returnMoment = moment(d, parseFormats, options.useStrict);\r\n                }\r\n\r\n                if (hasTimeZone()) {\r\n                    returnMoment.tz(options.timeZone);\r\n                }\r\n\r\n                return returnMoment;\r\n            },\r\n\r\n            isEnabled = function (granularity) {\r\n                if (typeof granularity !== 'string' || granularity.length > 1) {\r\n                    throw new TypeError('isEnabled expects a single character string parameter');\r\n                }\r\n                switch (granularity) {\r\n                    case 'y':\r\n                        return actualFormat.indexOf('Y') !== -1;\r\n                    case 'M':\r\n                        return actualFormat.indexOf('M') !== -1;\r\n                    case 'd':\r\n                        return actualFormat.toLowerCase().indexOf('d') !== -1;\r\n                    case 'h':\r\n                    case 'H':\r\n                        return actualFormat.toLowerCase().indexOf('h') !== -1;\r\n                    case 'm':\r\n                        return actualFormat.indexOf('m') !== -1;\r\n                    case 's':\r\n                        return actualFormat.indexOf('s') !== -1;\r\n                    default:\r\n                        return false;\r\n                }\r\n            },\r\n\r\n            hasTime = function () {\r\n                return (isEnabled('h') || isEnabled('m') || isEnabled('s'));\r\n            },\r\n\r\n            hasDate = function () {\r\n                return (isEnabled('y') || isEnabled('M') || isEnabled('d'));\r\n            },\r\n\r\n            getDatePickerTemplate = function () {\r\n                var headTemplate = $('<thead>')\r\n                        .append($('<tr>')\r\n                            .append($('<th>').addClass('prev').attr('data-action', 'previous')\r\n                                .append($('<span>').addClass(options.icons.previous))\r\n                                )\r\n                            .append($('<th>').addClass('picker-switch').attr('data-action', 'pickerSwitch').attr('colspan', (options.calendarWeeks ? '6' : '5')))\r\n                            .append($('<th>').addClass('next').attr('data-action', 'next')\r\n                                .append($('<span>').addClass(options.icons.next))\r\n                                )\r\n                            ),\r\n                    contTemplate = $('<tbody>')\r\n                        .append($('<tr>')\r\n                            .append($('<td>').attr('colspan', (options.calendarWeeks ? '8' : '7')))\r\n                            );\r\n\r\n                return [\r\n                    $('<div>').addClass('datepicker-days')\r\n                        .append($('<table>').addClass('table-condensed')\r\n                            .append(headTemplate)\r\n                            .append($('<tbody>'))\r\n                            ),\r\n                    $('<div>').addClass('datepicker-months')\r\n                        .append($('<table>').addClass('table-condensed')\r\n                            .append(headTemplate.clone())\r\n                            .append(contTemplate.clone())\r\n                            ),\r\n                    $('<div>').addClass('datepicker-years')\r\n                        .append($('<table>').addClass('table-condensed')\r\n                            .append(headTemplate.clone())\r\n                            .append(contTemplate.clone())\r\n                            ),\r\n                    $('<div>').addClass('datepicker-decades')\r\n                        .append($('<table>').addClass('table-condensed')\r\n                            .append(headTemplate.clone())\r\n                            .append(contTemplate.clone())\r\n                            )\r\n                ];\r\n            },\r\n\r\n            getTimePickerMainTemplate = function () {\r\n                var topRow = $('<tr>'),\r\n                    middleRow = $('<tr>'),\r\n                    bottomRow = $('<tr>');\r\n\r\n                if (isEnabled('h')) {\r\n                    topRow.append($('<td>')\r\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementHour }).addClass('btn').attr('data-action', 'incrementHours').append($('<span>').addClass(options.icons.up))));\r\n                    middleRow.append($('<td>')\r\n                        .append($('<span>').addClass('timepicker-hour').attr({ 'data-time-component': 'hours', 'title': options.tooltips.pickHour }).attr('data-action', 'showHours')));\r\n                    bottomRow.append($('<td>')\r\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementHour }).addClass('btn').attr('data-action', 'decrementHours').append($('<span>').addClass(options.icons.down))));\r\n                }\r\n                if (isEnabled('m')) {\r\n                    if (isEnabled('h')) {\r\n                        topRow.append($('<td>').addClass('separator'));\r\n                        middleRow.append($('<td>').addClass('separator').html(':'));\r\n                        bottomRow.append($('<td>').addClass('separator'));\r\n                    }\r\n                    topRow.append($('<td>')\r\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementMinute }).addClass('btn').attr('data-action', 'incrementMinutes')\r\n                            .append($('<span>').addClass(options.icons.up))));\r\n                    middleRow.append($('<td>')\r\n                        .append($('<span>').addClass('timepicker-minute').attr({ 'data-time-component': 'minutes', 'title': options.tooltips.pickMinute }).attr('data-action', 'showMinutes')));\r\n                    bottomRow.append($('<td>')\r\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementMinute }).addClass('btn').attr('data-action', 'decrementMinutes')\r\n                            .append($('<span>').addClass(options.icons.down))));\r\n                }\r\n                if (isEnabled('s')) {\r\n                    if (isEnabled('m')) {\r\n                        topRow.append($('<td>').addClass('separator'));\r\n                        middleRow.append($('<td>').addClass('separator').html(':'));\r\n                        bottomRow.append($('<td>').addClass('separator'));\r\n                    }\r\n                    topRow.append($('<td>')\r\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementSecond }).addClass('btn').attr('data-action', 'incrementSeconds')\r\n                            .append($('<span>').addClass(options.icons.up))));\r\n                    middleRow.append($('<td>')\r\n                        .append($('<span>').addClass('timepicker-second').attr({ 'data-time-component': 'seconds', 'title': options.tooltips.pickSecond }).attr('data-action', 'showSeconds')));\r\n                    bottomRow.append($('<td>')\r\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementSecond }).addClass('btn').attr('data-action', 'decrementSeconds')\r\n                            .append($('<span>').addClass(options.icons.down))));\r\n                }\r\n\r\n                if (!use24Hours) {\r\n                    topRow.append($('<td>').addClass('separator'));\r\n                    middleRow.append($('<td>')\r\n                        .append($('<button>').addClass('btn btn-primary').attr({ 'data-action': 'togglePeriod', tabindex: '-1', 'title': options.tooltips.togglePeriod })));\r\n                    bottomRow.append($('<td>').addClass('separator'));\r\n                }\r\n\r\n                return $('<div>').addClass('timepicker-picker')\r\n                    .append($('<table>').addClass('table-condensed')\r\n                        .append([topRow, middleRow, bottomRow]));\r\n            },\r\n\r\n            getTimePickerTemplate = function () {\r\n                var hoursView = $('<div>').addClass('timepicker-hours')\r\n                        .append($('<table>').addClass('table-condensed')),\r\n                    minutesView = $('<div>').addClass('timepicker-minutes')\r\n                        .append($('<table>').addClass('table-condensed')),\r\n                    secondsView = $('<div>').addClass('timepicker-seconds')\r\n                        .append($('<table>').addClass('table-condensed')),\r\n                    ret = [getTimePickerMainTemplate()];\r\n\r\n                if (isEnabled('h')) {\r\n                    ret.push(hoursView);\r\n                }\r\n                if (isEnabled('m')) {\r\n                    ret.push(minutesView);\r\n                }\r\n                if (isEnabled('s')) {\r\n                    ret.push(secondsView);\r\n                }\r\n\r\n                return ret;\r\n            },\r\n\r\n            getToolbar = function () {\r\n                var row = [];\r\n                if (options.showTodayButton) {\r\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'today', 'title': options.tooltips.today }).append($('<span>').addClass(options.icons.today))));\r\n                }\r\n                if (!options.sideBySide && hasDate() && hasTime()) {\r\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'togglePicker', 'title': options.tooltips.selectTime }).append($('<span>').addClass(options.icons.time))));\r\n                }\r\n                if (options.showClear) {\r\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'clear', 'title': options.tooltips.clear }).append($('<span>').addClass(options.icons.clear))));\r\n                }\r\n                if (options.showClose) {\r\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'close', 'title': options.tooltips.close }).append($('<span>').addClass(options.icons.close))));\r\n                }\r\n                return $('<table>').addClass('table-condensed').append($('<tbody>').append($('<tr>').append(row)));\r\n            },\r\n\r\n            getTemplate = function () {\r\n                var template = $('<div>').addClass('bootstrap-datetimepicker-widget dropdown-menu'),\r\n                    dateView = $('<div>').addClass('datepicker').append(getDatePickerTemplate()),\r\n                    timeView = $('<div>').addClass('timepicker').append(getTimePickerTemplate()),\r\n                    content = $('<ul>').addClass('list-unstyled'),\r\n                    toolbar = $('<li>').addClass('picker-switch' + (options.collapse ? ' accordion-toggle' : '')).append(getToolbar());\r\n\r\n                if (options.inline) {\r\n                    template.removeClass('dropdown-menu');\r\n                }\r\n\r\n                if (use24Hours) {\r\n                    template.addClass('usetwentyfour');\r\n                }\r\n\r\n                if (isEnabled('s') && !use24Hours) {\r\n                    template.addClass('wider');\r\n                }\r\n\r\n                if (options.sideBySide && hasDate() && hasTime()) {\r\n                    template.addClass('timepicker-sbs');\r\n                    if (options.toolbarPlacement === 'top') {\r\n                        template.append(toolbar);\r\n                    }\r\n                    template.append(\r\n                        $('<div>').addClass('row')\r\n                            .append(dateView.addClass('col-md-6'))\r\n                            .append(timeView.addClass('col-md-6'))\r\n                    );\r\n                    if (options.toolbarPlacement === 'bottom') {\r\n                        template.append(toolbar);\r\n                    }\r\n                    return template;\r\n                }\r\n\r\n                if (options.toolbarPlacement === 'top') {\r\n                    content.append(toolbar);\r\n                }\r\n                if (hasDate()) {\r\n                    content.append($('<li>').addClass((options.collapse && hasTime() ? 'collapse in' : '')).append(dateView));\r\n                }\r\n                if (options.toolbarPlacement === 'default') {\r\n                    content.append(toolbar);\r\n                }\r\n                if (hasTime()) {\r\n                    content.append($('<li>').addClass((options.collapse && hasDate() ? 'collapse' : '')).append(timeView));\r\n                }\r\n                if (options.toolbarPlacement === 'bottom') {\r\n                    content.append(toolbar);\r\n                }\r\n                return template.append(content);\r\n            },\r\n\r\n            dataToOptions = function () {\r\n                var eData,\r\n                    dataOptions = {};\r\n\r\n                if (element.is('input') || options.inline) {\r\n                    eData = element.data();\r\n                } else {\r\n                    eData = element.find('input').data();\r\n                }\r\n\r\n                if (eData.dateOptions && eData.dateOptions instanceof Object) {\r\n                    dataOptions = $.extend(true, dataOptions, eData.dateOptions);\r\n                }\r\n\r\n                $.each(options, function (key) {\r\n                    var attributeName = 'date' + key.charAt(0).toUpperCase() + key.slice(1);\r\n                    if (eData[attributeName] !== undefined) {\r\n                        dataOptions[key] = eData[attributeName];\r\n                    }\r\n                });\r\n                return dataOptions;\r\n            },\r\n\r\n            place = function () {\r\n                var position = (component || element).position(),\r\n                    offset = (component || element).offset(),\r\n                    vertical = options.widgetPositioning.vertical,\r\n                    horizontal = options.widgetPositioning.horizontal,\r\n                    parent;\r\n\r\n                if (options.widgetParent) {\r\n                    parent = options.widgetParent.append(widget);\r\n                } else if (element.is('input')) {\r\n                    parent = element.after(widget).parent();\r\n                } else if (options.inline) {\r\n                    parent = element.append(widget);\r\n                    return;\r\n                } else {\r\n                    parent = element;\r\n                    element.children().first().after(widget);\r\n                }\r\n\r\n                // Top and bottom logic\r\n                if (vertical === 'auto') {\r\n                    if (offset.top + widget.height() * 1.5 >= $(window).height() + $(window).scrollTop() &&\r\n                        widget.height() + element.outerHeight() < offset.top) {\r\n                        vertical = 'top';\r\n                    } else {\r\n                        vertical = 'bottom';\r\n                    }\r\n                }\r\n\r\n                // Left and right logic\r\n                if (horizontal === 'auto') {\r\n                    if (parent.width() < offset.left + widget.outerWidth() / 2 &&\r\n                        offset.left + widget.outerWidth() > $(window).width()) {\r\n                        horizontal = 'right';\r\n                    } else {\r\n                        horizontal = 'left';\r\n                    }\r\n                }\r\n\r\n                if (vertical === 'top') {\r\n                    widget.addClass('top').removeClass('bottom');\r\n                } else {\r\n                    widget.addClass('bottom').removeClass('top');\r\n                }\r\n\r\n                if (horizontal === 'right') {\r\n                    widget.addClass('pull-right');\r\n                } else {\r\n                    widget.removeClass('pull-right');\r\n                }\r\n\r\n                // find the first parent element that has a non-static css positioning\r\n                if (parent.css('position') === 'static') {\r\n                    parent = parent.parents().filter(function () {\r\n                        return $(this).css('position') !== 'static';\r\n                    }).first();\r\n                }\r\n\r\n                if (parent.length === 0) {\r\n                    throw new Error('datetimepicker component should be placed within a non-static positioned container');\r\n                }\r\n\r\n                widget.css({\r\n                    top: vertical === 'top' ? 'auto' : position.top + element.outerHeight(),\r\n                    bottom: vertical === 'top' ? parent.outerHeight() - (parent === element ? 0 : position.top) : 'auto',\r\n                    left: horizontal === 'left' ? (parent === element ? 0 : position.left) : 'auto',\r\n                    right: horizontal === 'left' ? 'auto' : parent.outerWidth() - element.outerWidth() - (parent === element ? 0 : position.left)\r\n                });\r\n            },\r\n\r\n            notifyEvent = function (e) {\r\n                if (e.type === 'dp.change' && ((e.date && e.date.isSame(e.oldDate)) || (!e.date && !e.oldDate))) {\r\n                    return;\r\n                }\r\n                element.trigger(e);\r\n            },\r\n\r\n            viewUpdate = function (e) {\r\n                if (e === 'y') {\r\n                    e = 'YYYY';\r\n                }\r\n                notifyEvent({\r\n                    type: 'dp.update',\r\n                    change: e,\r\n                    viewDate: viewDate.clone()\r\n                });\r\n            },\r\n\r\n            showMode = function (dir) {\r\n                if (!widget) {\r\n                    return;\r\n                }\r\n                if (dir) {\r\n                    currentViewMode = Math.max(minViewModeNumber, Math.min(3, currentViewMode + dir));\r\n                }\r\n                widget.find('.datepicker > div').hide().filter('.datepicker-' + datePickerModes[currentViewMode].clsName).show();\r\n            },\r\n\r\n            fillDow = function () {\r\n                var row = $('<tr>'),\r\n                    currentDate = viewDate.clone().startOf('w').startOf('d');\r\n\r\n                if (options.calendarWeeks === true) {\r\n                    row.append($('<th>').addClass('cw').text('#'));\r\n                }\r\n\r\n                while (currentDate.isBefore(viewDate.clone().endOf('w'))) {\r\n                    row.append($('<th>').addClass('dow').text(currentDate.format('dd')));\r\n                    currentDate.add(1, 'd');\r\n                }\r\n                widget.find('.datepicker-days thead').append(row);\r\n            },\r\n\r\n            isInDisabledDates = function (testDate) {\r\n                return options.disabledDates[testDate.format('YYYY-MM-DD')] === true;\r\n            },\r\n\r\n            isInEnabledDates = function (testDate) {\r\n                return options.enabledDates[testDate.format('YYYY-MM-DD')] === true;\r\n            },\r\n\r\n            isInDisabledHours = function (testDate) {\r\n                return options.disabledHours[testDate.format('H')] === true;\r\n            },\r\n\r\n            isInEnabledHours = function (testDate) {\r\n                return options.enabledHours[testDate.format('H')] === true;\r\n            },\r\n\r\n            isValid = function (targetMoment, granularity) {\r\n                if (!targetMoment.isValid()) {\r\n                    return false;\r\n                }\r\n                if (options.disabledDates && granularity === 'd' && isInDisabledDates(targetMoment)) {\r\n                    return false;\r\n                }\r\n                if (options.enabledDates && granularity === 'd' && !isInEnabledDates(targetMoment)) {\r\n                    return false;\r\n                }\r\n                if (options.minDate && targetMoment.isBefore(options.minDate, granularity)) {\r\n                    return false;\r\n                }\r\n                if (options.maxDate && targetMoment.isAfter(options.maxDate, granularity)) {\r\n                    return false;\r\n                }\r\n                if (options.daysOfWeekDisabled && granularity === 'd' && options.daysOfWeekDisabled.indexOf(targetMoment.day()) !== -1) {\r\n                    return false;\r\n                }\r\n                if (options.disabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && isInDisabledHours(targetMoment)) {\r\n                    return false;\r\n                }\r\n                if (options.enabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && !isInEnabledHours(targetMoment)) {\r\n                    return false;\r\n                }\r\n                if (options.disabledTimeIntervals && (granularity === 'h' || granularity === 'm' || granularity === 's')) {\r\n                    var found = false;\r\n                    $.each(options.disabledTimeIntervals, function () {\r\n                        if (targetMoment.isBetween(this[0], this[1])) {\r\n                            found = true;\r\n                            return false;\r\n                        }\r\n                    });\r\n                    if (found) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            },\r\n\r\n            fillMonths = function () {\r\n                var spans = [],\r\n                    monthsShort = viewDate.clone().startOf('y').startOf('d');\r\n                while (monthsShort.isSame(viewDate, 'y')) {\r\n                    spans.push($('<span>').attr('data-action', 'selectMonth').addClass('month').text(monthsShort.format('MMM')));\r\n                    monthsShort.add(1, 'M');\r\n                }\r\n                widget.find('.datepicker-months td').empty().append(spans);\r\n            },\r\n\r\n            updateMonths = function () {\r\n                var monthsView = widget.find('.datepicker-months'),\r\n                    monthsViewHeader = monthsView.find('th'),\r\n                    months = monthsView.find('tbody').find('span');\r\n\r\n                monthsViewHeader.eq(0).find('span').attr('title', options.tooltips.prevYear);\r\n                monthsViewHeader.eq(1).attr('title', options.tooltips.selectYear);\r\n                monthsViewHeader.eq(2).find('span').attr('title', options.tooltips.nextYear);\r\n\r\n                monthsView.find('.disabled').removeClass('disabled');\r\n\r\n                if (!isValid(viewDate.clone().subtract(1, 'y'), 'y')) {\r\n                    monthsViewHeader.eq(0).addClass('disabled');\r\n                }\r\n\r\n                monthsViewHeader.eq(1).text(viewDate.year());\r\n\r\n                if (!isValid(viewDate.clone().add(1, 'y'), 'y')) {\r\n                    monthsViewHeader.eq(2).addClass('disabled');\r\n                }\r\n\r\n                months.removeClass('active');\r\n                if (date.isSame(viewDate, 'y') && !unset) {\r\n                    months.eq(date.month()).addClass('active');\r\n                }\r\n\r\n                months.each(function (index) {\r\n                    if (!isValid(viewDate.clone().month(index), 'M')) {\r\n                        $(this).addClass('disabled');\r\n                    }\r\n                });\r\n            },\r\n\r\n            updateYears = function () {\r\n                var yearsView = widget.find('.datepicker-years'),\r\n                    yearsViewHeader = yearsView.find('th'),\r\n                    startYear = viewDate.clone().subtract(5, 'y'),\r\n                    endYear = viewDate.clone().add(6, 'y'),\r\n                    html = '';\r\n\r\n                yearsViewHeader.eq(0).find('span').attr('title', options.tooltips.prevDecade);\r\n                yearsViewHeader.eq(1).attr('title', options.tooltips.selectDecade);\r\n                yearsViewHeader.eq(2).find('span').attr('title', options.tooltips.nextDecade);\r\n\r\n                yearsView.find('.disabled').removeClass('disabled');\r\n\r\n                if (options.minDate && options.minDate.isAfter(startYear, 'y')) {\r\n                    yearsViewHeader.eq(0).addClass('disabled');\r\n                }\r\n\r\n                yearsViewHeader.eq(1).text(startYear.year() + '-' + endYear.year());\r\n\r\n                if (options.maxDate && options.maxDate.isBefore(endYear, 'y')) {\r\n                    yearsViewHeader.eq(2).addClass('disabled');\r\n                }\r\n\r\n                while (!startYear.isAfter(endYear, 'y')) {\r\n                    html += '<span data-action=\"selectYear\" class=\"year' + (startYear.isSame(date, 'y') && !unset ? ' active' : '') + (!isValid(startYear, 'y') ? ' disabled' : '') + '\">' + startYear.year() + '</span>';\r\n                    startYear.add(1, 'y');\r\n                }\r\n\r\n                yearsView.find('td').html(html);\r\n            },\r\n\r\n            updateDecades = function () {\r\n                var decadesView = widget.find('.datepicker-decades'),\r\n                    decadesViewHeader = decadesView.find('th'),\r\n                    startDecade = moment({ y: viewDate.year() - (viewDate.year() % 100) - 1 }),\r\n                    endDecade = startDecade.clone().add(100, 'y'),\r\n                    startedAt = startDecade.clone(),\r\n                    minDateDecade = false,\r\n                    maxDateDecade = false,\r\n                    endDecadeYear,\r\n                    html = '';\r\n\r\n                decadesViewHeader.eq(0).find('span').attr('title', options.tooltips.prevCentury);\r\n                decadesViewHeader.eq(2).find('span').attr('title', options.tooltips.nextCentury);\r\n\r\n                decadesView.find('.disabled').removeClass('disabled');\r\n\r\n                if (startDecade.isSame(moment({ y: 1900 })) || (options.minDate && options.minDate.isAfter(startDecade, 'y'))) {\r\n                    decadesViewHeader.eq(0).addClass('disabled');\r\n                }\r\n\r\n                decadesViewHeader.eq(1).text(startDecade.year() + '-' + endDecade.year());\r\n\r\n                if (startDecade.isSame(moment({ y: 2000 })) || (options.maxDate && options.maxDate.isBefore(endDecade, 'y'))) {\r\n                    decadesViewHeader.eq(2).addClass('disabled');\r\n                }\r\n\r\n                while (!startDecade.isAfter(endDecade, 'y')) {\r\n                    endDecadeYear = startDecade.year() + 12;\r\n                    minDateDecade = options.minDate && options.minDate.isAfter(startDecade, 'y') && options.minDate.year() <= endDecadeYear;\r\n                    maxDateDecade = options.maxDate && options.maxDate.isAfter(startDecade, 'y') && options.maxDate.year() <= endDecadeYear;\r\n                    html += '<span data-action=\"selectDecade\" class=\"decade' + (date.isAfter(startDecade) && date.year() <= endDecadeYear ? ' active' : '') +\r\n                        (!isValid(startDecade, 'y') && !minDateDecade && !maxDateDecade ? ' disabled' : '') + '\" data-selection=\"' + (startDecade.year() + 6) + '\">' + (startDecade.year() + 1) + ' - ' + (startDecade.year() + 12) + '</span>';\r\n                    startDecade.add(12, 'y');\r\n                }\r\n                html += '<span></span><span></span><span></span>'; //push the dangling block over, at least this way it's even\r\n\r\n                decadesView.find('td').html(html);\r\n                decadesViewHeader.eq(1).text((startedAt.year() + 1) + '-' + (startDecade.year()));\r\n            },\r\n\r\n            fillDate = function () {\r\n                var daysView = widget.find('.datepicker-days'),\r\n                    daysViewHeader = daysView.find('th'),\r\n                    currentDate,\r\n                    html = [],\r\n                    row,\r\n                    clsNames = [],\r\n                    i;\r\n\r\n                if (!hasDate()) {\r\n                    return;\r\n                }\r\n\r\n                daysViewHeader.eq(0).find('span').attr('title', options.tooltips.prevMonth);\r\n                daysViewHeader.eq(1).attr('title', options.tooltips.selectMonth);\r\n                daysViewHeader.eq(2).find('span').attr('title', options.tooltips.nextMonth);\r\n\r\n                daysView.find('.disabled').removeClass('disabled');\r\n                daysViewHeader.eq(1).text(viewDate.format(options.dayViewHeaderFormat));\r\n\r\n                if (!isValid(viewDate.clone().subtract(1, 'M'), 'M')) {\r\n                    daysViewHeader.eq(0).addClass('disabled');\r\n                }\r\n                if (!isValid(viewDate.clone().add(1, 'M'), 'M')) {\r\n                    daysViewHeader.eq(2).addClass('disabled');\r\n                }\r\n\r\n                currentDate = viewDate.clone().startOf('M').startOf('w').startOf('d');\r\n\r\n                for (i = 0; i < 42; i++) { //always display 42 days (should show 6 weeks)\r\n                    if (currentDate.weekday() === 0) {\r\n                        row = $('<tr>');\r\n                        if (options.calendarWeeks) {\r\n                            row.append('<td class=\"cw\">' + currentDate.week() + '</td>');\r\n                        }\r\n                        html.push(row);\r\n                    }\r\n                    clsNames = ['day'];\r\n                    if (currentDate.isBefore(viewDate, 'M')) {\r\n                        clsNames.push('old');\r\n                    }\r\n                    if (currentDate.isAfter(viewDate, 'M')) {\r\n                        clsNames.push('new');\r\n                    }\r\n                    if (currentDate.isSame(date, 'd') && !unset) {\r\n                        clsNames.push('active');\r\n                    }\r\n                    if (!isValid(currentDate, 'd')) {\r\n                        clsNames.push('disabled');\r\n                    }\r\n                    if (currentDate.isSame(getMoment(), 'd')) {\r\n                        clsNames.push('today');\r\n                    }\r\n                    if (currentDate.day() === 0 || currentDate.day() === 6) {\r\n                        clsNames.push('weekend');\r\n                    }\r\n                    notifyEvent({\r\n                        type: 'dp.classify',\r\n                        date: currentDate,\r\n                        classNames: clsNames\r\n                    });\r\n                    row.append('<td data-action=\"selectDay\" data-day=\"' + currentDate.format('L') + '\" class=\"' + clsNames.join(' ') + '\">' + currentDate.date() + '</td>');\r\n                    currentDate.add(1, 'd');\r\n                }\r\n\r\n                daysView.find('tbody').empty().append(html);\r\n\r\n                updateMonths();\r\n\r\n                updateYears();\r\n\r\n                updateDecades();\r\n            },\r\n\r\n            fillHours = function () {\r\n                var table = widget.find('.timepicker-hours table'),\r\n                    currentHour = viewDate.clone().startOf('d'),\r\n                    html = [],\r\n                    row = $('<tr>');\r\n\r\n                if (viewDate.hour() > 11 && !use24Hours) {\r\n                    currentHour.hour(12);\r\n                }\r\n                while (currentHour.isSame(viewDate, 'd') && (use24Hours || (viewDate.hour() < 12 && currentHour.hour() < 12) || viewDate.hour() > 11)) {\r\n                    if (currentHour.hour() % 4 === 0) {\r\n                        row = $('<tr>');\r\n                        html.push(row);\r\n                    }\r\n                    row.append('<td data-action=\"selectHour\" class=\"hour' + (!isValid(currentHour, 'h') ? ' disabled' : '') + '\">' + currentHour.format(use24Hours ? 'HH' : 'hh') + '</td>');\r\n                    currentHour.add(1, 'h');\r\n                }\r\n                table.empty().append(html);\r\n            },\r\n\r\n            fillMinutes = function () {\r\n                var table = widget.find('.timepicker-minutes table'),\r\n                    currentMinute = viewDate.clone().startOf('h'),\r\n                    html = [],\r\n                    row = $('<tr>'),\r\n                    step = options.stepping === 1 ? 5 : options.stepping;\r\n\r\n                while (viewDate.isSame(currentMinute, 'h')) {\r\n                    if (currentMinute.minute() % (step * 4) === 0) {\r\n                        row = $('<tr>');\r\n                        html.push(row);\r\n                    }\r\n                    row.append('<td data-action=\"selectMinute\" class=\"minute' + (!isValid(currentMinute, 'm') ? ' disabled' : '') + '\">' + currentMinute.format('mm') + '</td>');\r\n                    currentMinute.add(step, 'm');\r\n                }\r\n                table.empty().append(html);\r\n            },\r\n\r\n            fillSeconds = function () {\r\n                var table = widget.find('.timepicker-seconds table'),\r\n                    currentSecond = viewDate.clone().startOf('m'),\r\n                    html = [],\r\n                    row = $('<tr>');\r\n\r\n                while (viewDate.isSame(currentSecond, 'm')) {\r\n                    if (currentSecond.second() % 20 === 0) {\r\n                        row = $('<tr>');\r\n                        html.push(row);\r\n                    }\r\n                    row.append('<td data-action=\"selectSecond\" class=\"second' + (!isValid(currentSecond, 's') ? ' disabled' : '') + '\">' + currentSecond.format('ss') + '</td>');\r\n                    currentSecond.add(5, 's');\r\n                }\r\n\r\n                table.empty().append(html);\r\n            },\r\n\r\n            fillTime = function () {\r\n                var toggle, newDate, timeComponents = widget.find('.timepicker span[data-time-component]');\r\n\r\n                if (!use24Hours) {\r\n                    toggle = widget.find('.timepicker [data-action=togglePeriod]');\r\n                    newDate = date.clone().add((date.hours() >= 12) ? -12 : 12, 'h');\r\n\r\n                    toggle.text(date.format('A'));\r\n\r\n                    if (isValid(newDate, 'h')) {\r\n                        toggle.removeClass('disabled');\r\n                    } else {\r\n                        toggle.addClass('disabled');\r\n                    }\r\n                }\r\n                timeComponents.filter('[data-time-component=hours]').text(date.format(use24Hours ? 'HH' : 'hh'));\r\n                timeComponents.filter('[data-time-component=minutes]').text(date.format('mm'));\r\n                timeComponents.filter('[data-time-component=seconds]').text(date.format('ss'));\r\n\r\n                fillHours();\r\n                fillMinutes();\r\n                fillSeconds();\r\n            },\r\n\r\n            update = function () {\r\n                if (!widget) {\r\n                    return;\r\n                }\r\n                fillDate();\r\n                fillTime();\r\n            },\r\n\r\n            setValue = function (targetMoment) {\r\n                var oldDate = unset ? null : date;\r\n\r\n                // case of calling setValue(null or false)\r\n                if (!targetMoment) {\r\n                    unset = true;\r\n                    input.val('');\r\n                    element.data('date', '');\r\n                    notifyEvent({\r\n                        type: 'dp.change',\r\n                        date: false,\r\n                        oldDate: oldDate\r\n                    });\r\n                    update();\r\n                    return;\r\n                }\r\n\r\n                targetMoment = targetMoment.clone().locale(options.locale);\r\n\r\n                if (hasTimeZone()) {\r\n                    targetMoment.tz(options.timeZone);\r\n                }\r\n\r\n                if (options.stepping !== 1) {\r\n                    targetMoment.minutes((Math.round(targetMoment.minutes() / options.stepping) * options.stepping)).seconds(0);\r\n\r\n                    while (options.minDate && targetMoment.isBefore(options.minDate)) {\r\n                        targetMoment.add(options.stepping, 'minutes');\r\n                    }\r\n                }\r\n\r\n                if (isValid(targetMoment)) {\r\n                    date = targetMoment;\r\n                    viewDate = date.clone();\r\n                    input.val(date.format(actualFormat));\r\n                    element.data('date', date.format(actualFormat));\r\n                    unset = false;\r\n                    update();\r\n                    notifyEvent({\r\n                        type: 'dp.change',\r\n                        date: date.clone(),\r\n                        oldDate: oldDate\r\n                    });\r\n                } else {\r\n                    if (!options.keepInvalid) {\r\n                        input.val(unset ? '' : date.format(actualFormat));\r\n                    } else {\r\n                        notifyEvent({\r\n                            type: 'dp.change',\r\n                            date: targetMoment,\r\n                            oldDate: oldDate\r\n                        });\r\n                    }\r\n                    notifyEvent({\r\n                        type: 'dp.error',\r\n                        date: targetMoment,\r\n                        oldDate: oldDate\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Hides the widget. Possibly will emit dp.hide\r\n             */\r\n            hide = function () {\r\n                var transitioning = false;\r\n                if (!widget) {\r\n                    return picker;\r\n                }\r\n                // Ignore event if in the middle of a picker transition\r\n                widget.find('.collapse').each(function () {\r\n                    var collapseData = $(this).data('collapse');\r\n                    if (collapseData && collapseData.transitioning) {\r\n                        transitioning = true;\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                if (transitioning) {\r\n                    return picker;\r\n                }\r\n                if (component && component.hasClass('btn')) {\r\n                    component.toggleClass('active');\r\n                }\r\n                widget.hide();\r\n\r\n                $(window).off('resize', place);\r\n                widget.off('click', '[data-action]');\r\n                widget.off('mousedown', false);\r\n\r\n                widget.remove();\r\n                widget = false;\r\n\r\n                notifyEvent({\r\n                    type: 'dp.hide',\r\n                    date: date.clone()\r\n                });\r\n\r\n                input.blur();\r\n\r\n                viewDate = date.clone();\r\n\r\n                return picker;\r\n            },\r\n\r\n            clear = function () {\r\n                setValue(null);\r\n            },\r\n\r\n            parseInputDate = function (inputDate) {\r\n                if (options.parseInputDate === undefined) {\r\n                    if (!moment.isMoment(inputDate) || inputDate instanceof Date) {\r\n                        inputDate = getMoment(inputDate);\r\n                    }\r\n                } else {\r\n                    inputDate = options.parseInputDate(inputDate);\r\n                }\r\n                //inputDate.locale(options.locale);\r\n                return inputDate;\r\n            },\r\n\r\n            /********************************************************************************\r\n             *\r\n             * Widget UI interaction functions\r\n             *\r\n             ********************************************************************************/\r\n            actions = {\r\n                next: function () {\r\n                    var navFnc = datePickerModes[currentViewMode].navFnc;\r\n                    viewDate.add(datePickerModes[currentViewMode].navStep, navFnc);\r\n                    fillDate();\r\n                    viewUpdate(navFnc);\r\n                },\r\n\r\n                previous: function () {\r\n                    var navFnc = datePickerModes[currentViewMode].navFnc;\r\n                    viewDate.subtract(datePickerModes[currentViewMode].navStep, navFnc);\r\n                    fillDate();\r\n                    viewUpdate(navFnc);\r\n                },\r\n\r\n                pickerSwitch: function () {\r\n                    showMode(1);\r\n                },\r\n\r\n                selectMonth: function (e) {\r\n                    var month = $(e.target).closest('tbody').find('span').index($(e.target));\r\n                    viewDate.month(month);\r\n                    if (currentViewMode === minViewModeNumber) {\r\n                        setValue(date.clone().year(viewDate.year()).month(viewDate.month()));\r\n                        if (!options.inline) {\r\n                            hide();\r\n                        }\r\n                    } else {\r\n                        showMode(-1);\r\n                        fillDate();\r\n                    }\r\n                    viewUpdate('M');\r\n                },\r\n\r\n                selectYear: function (e) {\r\n                    var year = parseInt($(e.target).text(), 10) || 0;\r\n                    viewDate.year(year);\r\n                    if (currentViewMode === minViewModeNumber) {\r\n                        setValue(date.clone().year(viewDate.year()));\r\n                        if (!options.inline) {\r\n                            hide();\r\n                        }\r\n                    } else {\r\n                        showMode(-1);\r\n                        fillDate();\r\n                    }\r\n                    viewUpdate('YYYY');\r\n                },\r\n\r\n                selectDecade: function (e) {\r\n                    var year = parseInt($(e.target).data('selection'), 10) || 0;\r\n                    viewDate.year(year);\r\n                    if (currentViewMode === minViewModeNumber) {\r\n                        setValue(date.clone().year(viewDate.year()));\r\n                        if (!options.inline) {\r\n                            hide();\r\n                        }\r\n                    } else {\r\n                        showMode(-1);\r\n                        fillDate();\r\n                    }\r\n                    viewUpdate('YYYY');\r\n                },\r\n\r\n                selectDay: function (e) {\r\n                    var day = viewDate.clone();\r\n                    if ($(e.target).is('.old')) {\r\n                        day.subtract(1, 'M');\r\n                    }\r\n                    if ($(e.target).is('.new')) {\r\n                        day.add(1, 'M');\r\n                    }\r\n                    setValue(day.date(parseInt($(e.target).text(), 10)));\r\n                    if (!hasTime() && !options.keepOpen && !options.inline) {\r\n                        hide();\r\n                    }\r\n                },\r\n\r\n                incrementHours: function () {\r\n                    var newDate = date.clone().add(1, 'h');\r\n                    if (isValid(newDate, 'h')) {\r\n                        setValue(newDate);\r\n                    }\r\n                },\r\n\r\n                incrementMinutes: function () {\r\n                    var newDate = date.clone().add(options.stepping, 'm');\r\n                    if (isValid(newDate, 'm')) {\r\n                        setValue(newDate);\r\n                    }\r\n                },\r\n\r\n                incrementSeconds: function () {\r\n                    var newDate = date.clone().add(1, 's');\r\n                    if (isValid(newDate, 's')) {\r\n                        setValue(newDate);\r\n                    }\r\n                },\r\n\r\n                decrementHours: function () {\r\n                    var newDate = date.clone().subtract(1, 'h');\r\n                    if (isValid(newDate, 'h')) {\r\n                        setValue(newDate);\r\n                    }\r\n                },\r\n\r\n                decrementMinutes: function () {\r\n                    var newDate = date.clone().subtract(options.stepping, 'm');\r\n                    if (isValid(newDate, 'm')) {\r\n                        setValue(newDate);\r\n                    }\r\n                },\r\n\r\n                decrementSeconds: function () {\r\n                    var newDate = date.clone().subtract(1, 's');\r\n                    if (isValid(newDate, 's')) {\r\n                        setValue(newDate);\r\n                    }\r\n                },\r\n\r\n                togglePeriod: function () {\r\n                    setValue(date.clone().add((date.hours() >= 12) ? -12 : 12, 'h'));\r\n                },\r\n\r\n                togglePicker: function (e) {\r\n                    var $this = $(e.target),\r\n                        $parent = $this.closest('ul'),\r\n                        expanded = $parent.find('.in'),\r\n                        closed = $parent.find('.collapse:not(.in)'),\r\n                        collapseData;\r\n\r\n                    if (expanded && expanded.length) {\r\n                        collapseData = expanded.data('collapse');\r\n                        if (collapseData && collapseData.transitioning) {\r\n                            return;\r\n                        }\r\n                        if (expanded.collapse) { // if collapse plugin is available through bootstrap.js then use it\r\n                            expanded.collapse('hide');\r\n                            closed.collapse('show');\r\n                        } else { // otherwise just toggle in class on the two views\r\n                            expanded.removeClass('in');\r\n                            closed.addClass('in');\r\n                        }\r\n                        if ($this.is('span')) {\r\n                            $this.toggleClass(options.icons.time + ' ' + options.icons.date);\r\n                        } else {\r\n                            $this.find('span').toggleClass(options.icons.time + ' ' + options.icons.date);\r\n                        }\r\n\r\n                        // NOTE: uncomment if toggled state will be restored in show()\r\n                        //if (component) {\r\n                        //    component.find('span').toggleClass(options.icons.time + ' ' + options.icons.date);\r\n                        //}\r\n                    }\r\n                },\r\n\r\n                showPicker: function () {\r\n                    widget.find('.timepicker > div:not(.timepicker-picker)').hide();\r\n                    widget.find('.timepicker .timepicker-picker').show();\r\n                },\r\n\r\n                showHours: function () {\r\n                    widget.find('.timepicker .timepicker-picker').hide();\r\n                    widget.find('.timepicker .timepicker-hours').show();\r\n                },\r\n\r\n                showMinutes: function () {\r\n                    widget.find('.timepicker .timepicker-picker').hide();\r\n                    widget.find('.timepicker .timepicker-minutes').show();\r\n                },\r\n\r\n                showSeconds: function () {\r\n                    widget.find('.timepicker .timepicker-picker').hide();\r\n                    widget.find('.timepicker .timepicker-seconds').show();\r\n                },\r\n\r\n                selectHour: function (e) {\r\n                    var hour = parseInt($(e.target).text(), 10);\r\n\r\n                    if (!use24Hours) {\r\n                        if (date.hours() >= 12) {\r\n                            if (hour !== 12) {\r\n                                hour += 12;\r\n                            }\r\n                        } else {\r\n                            if (hour === 12) {\r\n                                hour = 0;\r\n                            }\r\n                        }\r\n                    }\r\n                    setValue(date.clone().hours(hour));\r\n                    actions.showPicker.call(picker);\r\n                },\r\n\r\n                selectMinute: function (e) {\r\n                    setValue(date.clone().minutes(parseInt($(e.target).text(), 10)));\r\n                    actions.showPicker.call(picker);\r\n                },\r\n\r\n                selectSecond: function (e) {\r\n                    setValue(date.clone().seconds(parseInt($(e.target).text(), 10)));\r\n                    actions.showPicker.call(picker);\r\n                },\r\n\r\n                clear: clear,\r\n\r\n                today: function () {\r\n                    var todaysDate = getMoment();\r\n                    if (isValid(todaysDate, 'd')) {\r\n                        setValue(todaysDate);\r\n                    }\r\n                },\r\n\r\n                close: hide\r\n            },\r\n\r\n            doAction = function (e) {\r\n                if ($(e.currentTarget).is('.disabled')) {\r\n                    return false;\r\n                }\r\n                actions[$(e.currentTarget).data('action')].apply(picker, arguments);\r\n                return false;\r\n            },\r\n\r\n            /**\r\n             * Shows the widget. Possibly will emit dp.show and dp.change\r\n             */\r\n            show = function () {\r\n                var currentMoment,\r\n                    useCurrentGranularity = {\r\n                        'year': function (m) {\r\n                            return m.month(0).date(1).hours(0).seconds(0).minutes(0);\r\n                        },\r\n                        'month': function (m) {\r\n                            return m.date(1).hours(0).seconds(0).minutes(0);\r\n                        },\r\n                        'day': function (m) {\r\n                            return m.hours(0).seconds(0).minutes(0);\r\n                        },\r\n                        'hour': function (m) {\r\n                            return m.seconds(0).minutes(0);\r\n                        },\r\n                        'minute': function (m) {\r\n                            return m.seconds(0);\r\n                        }\r\n                    };\r\n\r\n                if (input.prop('disabled') || (!options.ignoreReadonly && input.prop('readonly')) || widget) {\r\n                    return picker;\r\n                }\r\n                if (input.val() !== undefined && input.val().trim().length !== 0) {\r\n                    setValue(parseInputDate(input.val().trim()));\r\n                } else if (unset && options.useCurrent && (options.inline || (input.is('input') && input.val().trim().length === 0))) {\r\n                    currentMoment = getMoment();\r\n                    if (typeof options.useCurrent === 'string') {\r\n                        currentMoment = useCurrentGranularity[options.useCurrent](currentMoment);\r\n                    }\r\n                    setValue(currentMoment);\r\n                }\r\n                widget = getTemplate();\r\n\r\n                fillDow();\r\n                fillMonths();\r\n\r\n                widget.find('.timepicker-hours').hide();\r\n                widget.find('.timepicker-minutes').hide();\r\n                widget.find('.timepicker-seconds').hide();\r\n\r\n                update();\r\n                showMode();\r\n\r\n                $(window).on('resize', place);\r\n                widget.on('click', '[data-action]', doAction); // this handles clicks on the widget\r\n                widget.on('mousedown', false);\r\n\r\n                if (component && component.hasClass('btn')) {\r\n                    component.toggleClass('active');\r\n                }\r\n                place();\r\n                widget.show();\r\n                if (options.focusOnShow && !input.is(':focus')) {\r\n                    input.focus();\r\n                }\r\n\r\n                notifyEvent({\r\n                    type: 'dp.show'\r\n                });\r\n                return picker;\r\n            },\r\n\r\n            /**\r\n             * Shows or hides the widget\r\n             */\r\n            toggle = function () {\r\n                return (widget ? hide() : show());\r\n            },\r\n\r\n            keydown = function (e) {\r\n                var handler = null,\r\n                    index,\r\n                    index2,\r\n                    pressedKeys = [],\r\n                    pressedModifiers = {},\r\n                    currentKey = e.which,\r\n                    keyBindKeys,\r\n                    allModifiersPressed,\r\n                    pressed = 'p';\r\n\r\n                keyState[currentKey] = pressed;\r\n\r\n                for (index in keyState) {\r\n                    if (keyState.hasOwnProperty(index) && keyState[index] === pressed) {\r\n                        pressedKeys.push(index);\r\n                        if (parseInt(index, 10) !== currentKey) {\r\n                            pressedModifiers[index] = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for (index in options.keyBinds) {\r\n                    if (options.keyBinds.hasOwnProperty(index) && typeof (options.keyBinds[index]) === 'function') {\r\n                        keyBindKeys = index.split(' ');\r\n                        if (keyBindKeys.length === pressedKeys.length && keyMap[currentKey] === keyBindKeys[keyBindKeys.length - 1]) {\r\n                            allModifiersPressed = true;\r\n                            for (index2 = keyBindKeys.length - 2; index2 >= 0; index2--) {\r\n                                if (!(keyMap[keyBindKeys[index2]] in pressedModifiers)) {\r\n                                    allModifiersPressed = false;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (allModifiersPressed) {\r\n                                handler = options.keyBinds[index];\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (handler) {\r\n                    handler.call(picker, widget);\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                }\r\n            },\r\n\r\n            keyup = function (e) {\r\n                keyState[e.which] = 'r';\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            },\r\n\r\n            change = function (e) {\r\n                var val = $(e.target).val().trim(),\r\n                    parsedDate = val ? parseInputDate(val) : null;\r\n                setValue(parsedDate);\r\n                e.stopImmediatePropagation();\r\n                return false;\r\n            },\r\n\r\n            attachDatePickerElementEvents = function () {\r\n                input.on({\r\n                    'change': change,\r\n                    'blur': options.debug ? '' : hide,\r\n                    'keydown': keydown,\r\n                    'keyup': keyup,\r\n                    'focus': options.allowInputToggle ? show : ''\r\n                });\r\n\r\n                if (element.is('input')) {\r\n                    input.on({\r\n                        'focus': show\r\n                    });\r\n                } else if (component) {\r\n                    component.on('click', toggle);\r\n                    component.on('mousedown', false);\r\n                }\r\n            },\r\n\r\n            detachDatePickerElementEvents = function () {\r\n                input.off({\r\n                    'change': change,\r\n                    'blur': blur,\r\n                    'keydown': keydown,\r\n                    'keyup': keyup,\r\n                    'focus': options.allowInputToggle ? hide : ''\r\n                });\r\n\r\n                if (element.is('input')) {\r\n                    input.off({\r\n                        'focus': show\r\n                    });\r\n                } else if (component) {\r\n                    component.off('click', toggle);\r\n                    component.off('mousedown', false);\r\n                }\r\n            },\r\n\r\n            indexGivenDates = function (givenDatesArray) {\r\n                // Store given enabledDates and disabledDates as keys.\r\n                // This way we can check their existence in O(1) time instead of looping through whole array.\r\n                // (for example: options.enabledDates['2014-02-27'] === true)\r\n                var givenDatesIndexed = {};\r\n                $.each(givenDatesArray, function () {\r\n                    var dDate = parseInputDate(this);\r\n                    if (dDate.isValid()) {\r\n                        givenDatesIndexed[dDate.format('YYYY-MM-DD')] = true;\r\n                    }\r\n                });\r\n                return (Object.keys(givenDatesIndexed).length) ? givenDatesIndexed : false;\r\n            },\r\n\r\n            indexGivenHours = function (givenHoursArray) {\r\n                // Store given enabledHours and disabledHours as keys.\r\n                // This way we can check their existence in O(1) time instead of looping through whole array.\r\n                // (for example: options.enabledHours['2014-02-27'] === true)\r\n                var givenHoursIndexed = {};\r\n                $.each(givenHoursArray, function () {\r\n                    givenHoursIndexed[this] = true;\r\n                });\r\n                return (Object.keys(givenHoursIndexed).length) ? givenHoursIndexed : false;\r\n            },\r\n\r\n            initFormatting = function () {\r\n                var format = options.format || 'L LT';\r\n\r\n                actualFormat = format.replace(/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput) {\r\n                    var newinput = date.localeData().longDateFormat(formatInput) || formatInput;\r\n                    return newinput.replace(/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput2) { //temp fix for #740\r\n                        return date.localeData().longDateFormat(formatInput2) || formatInput2;\r\n                    });\r\n                });\r\n\r\n\r\n                parseFormats = options.extraFormats ? options.extraFormats.slice() : [];\r\n                if (parseFormats.indexOf(format) < 0 && parseFormats.indexOf(actualFormat) < 0) {\r\n                    parseFormats.push(actualFormat);\r\n                }\r\n\r\n                use24Hours = (actualFormat.toLowerCase().indexOf('a') < 1 && actualFormat.replace(/\\[.*?\\]/g, '').indexOf('h') < 1);\r\n\r\n                if (isEnabled('y')) {\r\n                    minViewModeNumber = 2;\r\n                }\r\n                if (isEnabled('M')) {\r\n                    minViewModeNumber = 1;\r\n                }\r\n                if (isEnabled('d')) {\r\n                    minViewModeNumber = 0;\r\n                }\r\n\r\n                currentViewMode = Math.max(minViewModeNumber, currentViewMode);\r\n\r\n                if (!unset) {\r\n                    setValue(date);\r\n                }\r\n            };\r\n\r\n        /********************************************************************************\r\n         *\r\n         * Public API functions\r\n         * =====================\r\n         *\r\n         * Important: Do not expose direct references to private objects or the options\r\n         * object to the outer world. Always return a clone when returning values or make\r\n         * a clone when setting a private variable.\r\n         *\r\n         ********************************************************************************/\r\n        picker.destroy = function () {\r\n            ///<summary>Destroys the widget and removes all attached event listeners</summary>\r\n            hide();\r\n            detachDatePickerElementEvents();\r\n            element.removeData('DateTimePicker');\r\n            element.removeData('date');\r\n        };\r\n\r\n        picker.toggle = toggle;\r\n\r\n        picker.show = show;\r\n\r\n        picker.hide = hide;\r\n\r\n        picker.disable = function () {\r\n            ///<summary>Disables the input element, the component is attached to, by adding a disabled=\"true\" attribute to it.\r\n            ///If the widget was visible before that call it is hidden. Possibly emits dp.hide</summary>\r\n            hide();\r\n            if (component && component.hasClass('btn')) {\r\n                component.addClass('disabled');\r\n            }\r\n            input.prop('disabled', true);\r\n            return picker;\r\n        };\r\n\r\n        picker.enable = function () {\r\n            ///<summary>Enables the input element, the component is attached to, by removing disabled attribute from it.</summary>\r\n            if (component && component.hasClass('btn')) {\r\n                component.removeClass('disabled');\r\n            }\r\n            input.prop('disabled', false);\r\n            return picker;\r\n        };\r\n\r\n        picker.ignoreReadonly = function (ignoreReadonly) {\r\n            if (arguments.length === 0) {\r\n                return options.ignoreReadonly;\r\n            }\r\n            if (typeof ignoreReadonly !== 'boolean') {\r\n                throw new TypeError('ignoreReadonly () expects a boolean parameter');\r\n            }\r\n            options.ignoreReadonly = ignoreReadonly;\r\n            return picker;\r\n        };\r\n\r\n        picker.options = function (newOptions) {\r\n            if (arguments.length === 0) {\r\n                return $.extend(true, {}, options);\r\n            }\r\n\r\n            if (!(newOptions instanceof Object)) {\r\n                throw new TypeError('options() options parameter should be an object');\r\n            }\r\n            $.extend(true, options, newOptions);\r\n            $.each(options, function (key, value) {\r\n                if (picker[key] !== undefined) {\r\n                    picker[key](value);\r\n                } else {\r\n                    throw new TypeError('option ' + key + ' is not recognized!');\r\n                }\r\n            });\r\n            return picker;\r\n        };\r\n\r\n        picker.date = function (newDate) {\r\n            ///<signature helpKeyword=\"$.fn.datetimepicker.date\">\r\n            ///<summary>Returns the component's model current date, a moment object or null if not set.</summary>\r\n            ///<returns type=\"Moment\">date.clone()</returns>\r\n            ///</signature>\r\n            ///<signature>\r\n            ///<summary>Sets the components model current moment to it. Passing a null value unsets the components model current moment. Parsing of the newDate parameter is made using moment library with the options.format and options.useStrict components configuration.</summary>\r\n            ///<param name=\"newDate\" locid=\"$.fn.datetimepicker.date_p:newDate\">Takes string, Date, moment, null parameter.</param>\r\n            ///</signature>\r\n            if (arguments.length === 0) {\r\n                if (unset) {\r\n                    return null;\r\n                }\r\n                return date.clone();\r\n            }\r\n\r\n            if (newDate !== null && typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {\r\n                throw new TypeError('date() parameter must be one of [null, string, moment or Date]');\r\n            }\r\n\r\n            setValue(newDate === null ? null : parseInputDate(newDate));\r\n            return picker;\r\n        };\r\n\r\n        picker.format = function (newFormat) {\r\n            ///<summary>test su</summary>\r\n            ///<param name=\"newFormat\">info about para</param>\r\n            ///<returns type=\"string|boolean\">returns foo</returns>\r\n            if (arguments.length === 0) {\r\n                return options.format;\r\n            }\r\n\r\n            if ((typeof newFormat !== 'string') && ((typeof newFormat !== 'boolean') || (newFormat !== false))) {\r\n                throw new TypeError('format() expects a string or boolean:false parameter ' + newFormat);\r\n            }\r\n\r\n            options.format = newFormat;\r\n            if (actualFormat) {\r\n                initFormatting(); // reinit formatting\r\n            }\r\n            return picker;\r\n        };\r\n\r\n        picker.timeZone = function (newZone) {\r\n            if (arguments.length === 0) {\r\n                return options.timeZone;\r\n            }\r\n\r\n            if (typeof newZone !== 'string') {\r\n                throw new TypeError('newZone() expects a string parameter');\r\n            }\r\n\r\n            options.timeZone = newZone;\r\n\r\n            return picker;\r\n        };\r\n\r\n        picker.dayViewHeaderFormat = function (newFormat) {\r\n            if (arguments.length === 0) {\r\n                return options.dayViewHeaderFormat;\r\n            }\r\n\r\n            if (typeof newFormat !== 'string') {\r\n                throw new TypeError('dayViewHeaderFormat() expects a string parameter');\r\n            }\r\n\r\n            options.dayViewHeaderFormat = newFormat;\r\n            return picker;\r\n        };\r\n\r\n        picker.extraFormats = function (formats) {\r\n            if (arguments.length === 0) {\r\n                return options.extraFormats;\r\n            }\r\n\r\n            if (formats !== false && !(formats instanceof Array)) {\r\n                throw new TypeError('extraFormats() expects an array or false parameter');\r\n            }\r\n\r\n            options.extraFormats = formats;\r\n            if (parseFormats) {\r\n                initFormatting(); // reinit formatting\r\n            }\r\n            return picker;\r\n        };\r\n\r\n        picker.disabledDates = function (dates) {\r\n            ///<signature helpKeyword=\"$.fn.datetimepicker.disabledDates\">\r\n            ///<summary>Returns an array with the currently set disabled dates on the component.</summary>\r\n            ///<returns type=\"array\">options.disabledDates</returns>\r\n            ///</signature>\r\n            ///<signature>\r\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\r\n            ///options.enabledDates if such exist.</summary>\r\n            ///<param name=\"dates\" locid=\"$.fn.datetimepicker.disabledDates_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\r\n            ///</signature>\r\n            if (arguments.length === 0) {\r\n                return (options.disabledDates ? $.extend({}, options.disabledDates) : options.disabledDates);\r\n            }\r\n\r\n            if (!dates) {\r\n                options.disabledDates = false;\r\n                update();\r\n                return picker;\r\n            }\r\n            if (!(dates instanceof Array)) {\r\n                throw new TypeError('disabledDates() expects an array parameter');\r\n            }\r\n            options.disabledDates = indexGivenDates(dates);\r\n            options.enabledDates = false;\r\n            update();\r\n            return picker;\r\n        };\r\n\r\n        picker.enabledDates = function (dates) {\r\n            ///<signature helpKeyword=\"$.fn.datetimepicker.enabledDates\">\r\n            ///<summary>Returns an array with the currently set enabled dates on the component.</summary>\r\n            ///<returns type=\"array\">options.enabledDates</returns>\r\n            ///</signature>\r\n            ///<signature>\r\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of options.disabledDates if such exist.</summary>\r\n            ///<param name=\"dates\" locid=\"$.fn.datetimepicker.enabledDates_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\r\n            ///</signature>\r\n            if (arguments.length === 0) {\r\n                return (options.enabledDates ? $.extend({}, options.enabledDates) : options.enabledDates);\r\n            }\r\n\r\n            if (!dates) {\r\n                options.enabledDates = false;\r\n                update();\r\n                return picker;\r\n            }\r\n            if (!(dates instanceof Array)) {\r\n                throw new TypeError('enabledDates() expects an array parameter');\r\n            }\r\n            options.enabledDates = indexGivenDates(dates);\r\n            options.disabledDates = false;\r\n            update();\r\n            return picker;\r\n        };\r\n\r\n        picker.daysOfWeekDisabled = function (daysOfWeekDisabled) {\r\n            if (arguments.length === 0) {\r\n                return options.daysOfWeekDisabled.splice(0);\r\n            }\r\n\r\n            if ((typeof daysOfWeekDisabled === 'boolean') && !daysOfWeekDisabled) {\r\n                options.daysOfWeekDisabled = false;\r\n                update();\r\n                return picker;\r\n            }\r\n\r\n            if (!(daysOfWeekDisabled instanceof Array)) {\r\n                throw new TypeError('daysOfWeekDisabled() expects an array parameter');\r\n            }\r\n            options.daysOfWeekDisabled = daysOfWeekDisabled.reduce(function (previousValue, currentValue) {\r\n                currentValue = parseInt(currentValue, 10);\r\n                if (currentValue > 6 || currentValue < 0 || isNaN(currentValue)) {\r\n                    return previousValue;\r\n                }\r\n                if (previousValue.indexOf(currentValue) === -1) {\r\n                    previousValue.push(currentValue);\r\n                }\r\n                return previousValue;\r\n            }, []).sort();\r\n            if (options.useCurrent && !options.keepInvalid) {\r\n                var tries = 0;\r\n                while (!isValid(date, 'd')) {\r\n                    date.add(1, 'd');\r\n                    if (tries === 31) {\r\n                        throw 'Tried 31 times to find a valid date';\r\n                    }\r\n                    tries++;\r\n                }\r\n                setValue(date);\r\n            }\r\n            update();\r\n            return picker;\r\n        };\r\n\r\n        picker.maxDate = function (maxDate) {\r\n            if (arguments.length === 0) {\r\n                return options.maxDate ? options.maxDate.clone() : options.maxDate;\r\n            }\r\n\r\n            if ((typeof maxDate === 'boolean') && maxDate === false) {\r\n                options.maxDate = false;\r\n                update();\r\n                return picker;\r\n            }\r\n\r\n            if (typeof maxDate === 'string') {\r\n                if (maxDate === 'now' || maxDate === 'moment') {\r\n                    maxDate = getMoment();\r\n                }\r\n            }\r\n\r\n            var parsedDate = parseInputDate(maxDate);\r\n\r\n            if (!parsedDate.isValid()) {\r\n                throw new TypeError('maxDate() Could not parse date parameter: ' + maxDate);\r\n            }\r\n            if (options.minDate && parsedDate.isBefore(options.minDate)) {\r\n                throw new TypeError('maxDate() date parameter is before options.minDate: ' + parsedDate.format(actualFormat));\r\n            }\r\n            options.maxDate = parsedDate;\r\n            if (options.useCurrent && !options.keepInvalid && date.isAfter(maxDate)) {\r\n                setValue(options.maxDate);\r\n            }\r\n            if (viewDate.isAfter(parsedDate)) {\r\n                viewDate = parsedDate.clone().subtract(options.stepping, 'm');\r\n            }\r\n            update();\r\n            return picker;\r\n        };\r\n\r\n        picker.minDate = function (minDate) {\r\n            if (arguments.length === 0) {\r\n                return options.minDate ? options.minDate.clone() : options.minDate;\r\n            }\r\n\r\n            if ((typeof minDate === 'boolean') && minDate === false) {\r\n                options.minDate = false;\r\n                update();\r\n                return picker;\r\n            }\r\n\r\n            if (typeof minDate === 'string') {\r\n                if (minDate === 'now' || minDate === 'moment') {\r\n                    minDate = getMoment();\r\n                }\r\n            }\r\n\r\n            var parsedDate = parseInputDate(minDate);\r\n\r\n            if (!parsedDate.isValid()) {\r\n                throw new TypeError('minDate() Could not parse date parameter: ' + minDate);\r\n            }\r\n            if (options.maxDate && parsedDate.isAfter(options.maxDate)) {\r\n                throw new TypeError('minDate() date parameter is after options.maxDate: ' + parsedDate.format(actualFormat));\r\n            }\r\n            options.minDate = parsedDate;\r\n            if (options.useCurrent && !options.keepInvalid && date.isBefore(minDate)) {\r\n                setValue(options.minDate);\r\n            }\r\n            if (viewDate.isBefore(parsedDate)) {\r\n                viewDate = parsedDate.clone().add(options.stepping, 'm');\r\n            }\r\n            update();\r\n            return picker;\r\n        };\r\n\r\n        picker.defaultDate = function (defaultDate) {\r\n            ///<signature helpKeyword=\"$.fn.datetimepicker.defaultDate\">\r\n            ///<summary>Returns a moment with the options.defaultDate option configuration or false if not set</summary>\r\n            ///<returns type=\"Moment\">date.clone()</returns>\r\n            ///</signature>\r\n            ///<signature>\r\n            ///<summary>Will set the picker's inital date. If a boolean:false value is passed the options.defaultDate parameter is cleared.</summary>\r\n            ///<param name=\"defaultDate\" locid=\"$.fn.datetimepicker.defaultDate_p:defaultDate\">Takes a string, Date, moment, boolean:false</param>\r\n            ///</signature>\r\n            if (arguments.length === 0) {\r\n                return options.defaultDate ? options.defaultDate.clone() : options.defaultDate;\r\n            }\r\n            if (!defaultDate) {\r\n                options.defaultDate = false;\r\n                return picker;\r\n            }\r\n\r\n            if (typeof defaultDate === 'string') {\r\n                if (defaultDate === 'now' || defaultDate === 'moment') {\r\n                    defaultDate = getMoment();\r\n                } else {\r\n                    defaultDate = getMoment(defaultDate);\r\n                }\r\n            }\r\n\r\n            var parsedDate = parseInputDate(defaultDate);\r\n            if (!parsedDate.isValid()) {\r\n                throw new TypeError('defaultDate() Could not parse date parameter: ' + defaultDate);\r\n            }\r\n            if (!isValid(parsedDate)) {\r\n                throw new TypeError('defaultDate() date passed is invalid according to component setup validations');\r\n            }\r\n\r\n            options.defaultDate = parsedDate;\r\n\r\n            if ((options.defaultDate && options.inline) || input.val().trim() === '') {\r\n                setValue(options.defaultDate);\r\n            }\r\n            return picker;\r\n        };\r\n\r\n        picker.locale = function (locale) {\r\n            if (arguments.length === 0) {\r\n                return options.locale;\r\n            }\r\n\r\n            if (!moment.localeData(locale)) {\r\n                throw new TypeError('locale() locale ' + locale + ' is not loaded from moment locales!');\r\n            }\r\n\r\n            options.locale = locale;\r\n            date.locale(options.locale);\r\n            viewDate.locale(options.locale);\r\n\r\n            if (actualFormat) {\r\n                initFormatting(); // reinit formatting\r\n            }\r\n            if (widget) {\r\n                hide();\r\n                show();\r\n            }\r\n            return picker;\r\n        };\r\n\r\n        picker.stepping = function (stepping) {\r\n            if (arguments.length === 0) {\r\n                return options.stepping;\r\n            }\r\n\r\n            stepping = parseInt(stepping, 10);\r\n            if (isNaN(stepping) || stepping < 1) {\r\n                stepping = 1;\r\n            }\r\n            options.stepping = stepping;\r\n            return picker;\r\n        };\r\n\r\n        picker.useCurrent = function (useCurrent) {\r\n            var useCurrentOptions = ['year', 'month', 'day', 'hour', 'minute'];\r\n            if (arguments.length === 0) {\r\n                return options.useCurrent;\r\n            }\r\n\r\n            if ((typeof useCurrent !== 'boolean') && (typeof useCurrent !== 'string')) {\r\n                throw new TypeError('useCurrent() expects a boolean or string parameter');\r\n            }\r\n            if (typeof useCurrent === 'string' && useCurrentOptions.indexOf(useCurrent.toLowerCase()) === -1) {\r\n                throw new TypeError('useCurrent() expects a string parameter of ' + useCurrentOptions.join(', '));\r\n            }\r\n            options.useCurrent = useCurrent;\r\n            return picker;\r\n        };\r\n\r\n        picker.collapse = function (collapse) {\r\n            if (arguments.length === 0) {\r\n                return options.collapse;\r\n            }\r\n\r\n            if (typeof collapse !== 'boolean') {\r\n                throw new TypeError('collapse() expects a boolean parameter');\r\n            }\r\n            if (options.collapse === collapse) {\r\n                return picker;\r\n            }\r\n            options.collapse = collapse;\r\n            if (widget) {\r\n                hide();\r\n                show();\r\n            }\r\n            return picker;\r\n        };\r\n\r\n        picker.icons = function (icons) {\r\n            if (arguments.length === 0) {\r\n                return $.extend({}, options.icons);\r\n            }\r\n\r\n            if (!(icons instanceof Object)) {\r\n                throw new TypeError('icons() expects parameter to be an Object');\r\n            }\r\n            $.extend(options.icons, icons);\r\n            if (widget) {\r\n                hide();\r\n                show();\r\n            }\r\n            return picker;\r\n        };\r\n\r\n        picker.tooltips = function (tooltips) {\r\n            if (arguments.length === 0) {\r\n                return $.extend({}, options.tooltips);\r\n            }\r\n\r\n            if (!(tooltips instanceof Object)) {\r\n                throw new TypeError('tooltips() expects parameter to be an Object');\r\n            }\r\n            $.extend(options.tooltips, tooltips);\r\n            if (widget) {\r\n                hide();\r\n                show();\r\n            }\r\n            return picker;\r\n        };\r\n\r\n        picker.useStrict = function (useStrict) {\r\n            if (arguments.length === 0) {\r\n                return options.useStrict;\r\n            }\r\n\r\n            if (typeof useStrict !== 'boolean') {\r\n                throw new TypeError('useStrict() expects a boolean parameter');\r\n            }\r\n            options.useStrict = useStrict;\r\n            return picker;\r\n        };\r\n\r\n        picker.sideBySide = function (sideBySide) {\r\n            if (arguments.length === 0) {\r\n                return options.sideBySide;\r\n            }\r\n\r\n            if (typeof sideBySide !== 'boolean') {\r\n                throw new TypeError('sideBySide() expects a boolean parameter');\r\n            }\r\n            options.sideBySide = sideBySide;\r\n            if (widget) {\r\n                hide();\r\n                show();\r\n            }\r\n            return picker;\r\n        };\r\n\r\n        picker.viewMode = function (viewMode) {\r\n            if (arguments.length === 0) {\r\n                return options.viewMode;\r\n            }\r\n\r\n            if (typeof viewMode !== 'string') {\r\n                throw new TypeError('viewMode() expects a string parameter');\r\n            }\r\n\r\n            if (viewModes.indexOf(viewMode) === -1) {\r\n                throw new TypeError('viewMode() parameter must be one of (' + viewModes.join(', ') + ') value');\r\n            }\r\n\r\n            options.viewMode = viewMode;\r\n            currentViewMode = Math.max(viewModes.indexOf(viewMode), minViewModeNumber);\r\n\r\n            showMode();\r\n            return picker;\r\n        };\r\n\r\n        picker.toolbarPlacement = function (toolbarPlacement) {\r\n            if (arguments.length === 0) {\r\n                return options.toolbarPlacement;\r\n            }\r\n\r\n            if (typeof toolbarPlacement !== 'string') {\r\n                throw new TypeError('toolbarPlacement() expects a string parameter');\r\n            }\r\n            if (toolbarPlacements.indexOf(toolbarPlacement) === -1) {\r\n                throw new TypeError('toolbarPlacement() parameter must be one of (' + toolbarPlacements.join(', ') + ') value');\r\n            }\r\n            options.toolbarPlacement = toolbarPlacement;\r\n\r\n            if (widget) {\r\n                hide();\r\n                show();\r\n            }\r\n            return picker;\r\n        };\r\n\r\n        picker.widgetPositioning = function (widgetPositioning) {\r\n            if (arguments.length === 0) {\r\n                return $.extend({}, options.widgetPositioning);\r\n            }\r\n\r\n            if (({}).toString.call(widgetPositioning) !== '[object Object]') {\r\n                throw new TypeError('widgetPositioning() expects an object variable');\r\n            }\r\n            if (widgetPositioning.horizontal) {\r\n                if (typeof widgetPositioning.horizontal !== 'string') {\r\n                    throw new TypeError('widgetPositioning() horizontal variable must be a string');\r\n                }\r\n                widgetPositioning.horizontal = widgetPositioning.horizontal.toLowerCase();\r\n                if (horizontalModes.indexOf(widgetPositioning.horizontal) === -1) {\r\n                    throw new TypeError('widgetPositioning() expects horizontal parameter to be one of (' + horizontalModes.join(', ') + ')');\r\n                }\r\n                options.widgetPositioning.horizontal = widgetPositioning.horizontal;\r\n            }\r\n            if (widgetPositioning.vertical) {\r\n                if (typeof widgetPositioning.vertical !== 'string') {\r\n                    throw new TypeError('widgetPositioning() vertical variable must be a string');\r\n                }\r\n                widgetPositioning.vertical = widgetPositioning.vertical.toLowerCase();\r\n                if (verticalModes.indexOf(widgetPositioning.vertical) === -1) {\r\n                    throw new TypeError('widgetPositioning() expects vertical parameter to be one of (' + verticalModes.join(', ') + ')');\r\n                }\r\n                options.widgetPositioning.vertical = widgetPositioning.vertical;\r\n            }\r\n            update();\r\n            return picker;\r\n        };\r\n\r\n        picker.calendarWeeks = function (calendarWeeks) {\r\n            if (arguments.length === 0) {\r\n                return options.calendarWeeks;\r\n            }\r\n\r\n            if (typeof calendarWeeks !== 'boolean') {\r\n                throw new TypeError('calendarWeeks() expects parameter to be a boolean value');\r\n            }\r\n\r\n            options.calendarWeeks = calendarWeeks;\r\n            update();\r\n            return picker;\r\n        };\r\n\r\n        picker.showTodayButton = function (showTodayButton) {\r\n            if (arguments.length === 0) {\r\n                return options.showTodayButton;\r\n            }\r\n\r\n            if (typeof showTodayButton !== 'boolean') {\r\n                throw new TypeError('showTodayButton() expects a boolean parameter');\r\n            }\r\n\r\n            options.showTodayButton = showTodayButton;\r\n            if (widget) {\r\n                hide();\r\n                show();\r\n            }\r\n            return picker;\r\n        };\r\n\r\n        picker.showClear = function (showClear) {\r\n            if (arguments.length === 0) {\r\n                return options.showClear;\r\n            }\r\n\r\n            if (typeof showClear !== 'boolean') {\r\n                throw new TypeError('showClear() expects a boolean parameter');\r\n            }\r\n\r\n            options.showClear = showClear;\r\n            if (widget) {\r\n                hide();\r\n                show();\r\n            }\r\n            return picker;\r\n        };\r\n\r\n        picker.widgetParent = function (widgetParent) {\r\n            if (arguments.length === 0) {\r\n                return options.widgetParent;\r\n            }\r\n\r\n            if (typeof widgetParent === 'string') {\r\n                widgetParent = $(widgetParent);\r\n            }\r\n\r\n            if (widgetParent !== null && (typeof widgetParent !== 'string' && !(widgetParent instanceof $))) {\r\n                throw new TypeError('widgetParent() expects a string or a jQuery object parameter');\r\n            }\r\n\r\n            options.widgetParent = widgetParent;\r\n            if (widget) {\r\n                hide();\r\n                show();\r\n            }\r\n            return picker;\r\n        };\r\n\r\n        picker.keepOpen = function (keepOpen) {\r\n            if (arguments.length === 0) {\r\n                return options.keepOpen;\r\n            }\r\n\r\n            if (typeof keepOpen !== 'boolean') {\r\n                throw new TypeError('keepOpen() expects a boolean parameter');\r\n            }\r\n\r\n            options.keepOpen = keepOpen;\r\n            return picker;\r\n        };\r\n\r\n        picker.focusOnShow = function (focusOnShow) {\r\n            if (arguments.length === 0) {\r\n                return options.focusOnShow;\r\n            }\r\n\r\n            if (typeof focusOnShow !== 'boolean') {\r\n                throw new TypeError('focusOnShow() expects a boolean parameter');\r\n            }\r\n\r\n            options.focusOnShow = focusOnShow;\r\n            return picker;\r\n        };\r\n\r\n        picker.inline = function (inline) {\r\n            if (arguments.length === 0) {\r\n                return options.inline;\r\n            }\r\n\r\n            if (typeof inline !== 'boolean') {\r\n                throw new TypeError('inline() expects a boolean parameter');\r\n            }\r\n\r\n            options.inline = inline;\r\n            return picker;\r\n        };\r\n\r\n        picker.clear = function () {\r\n            clear();\r\n            return picker;\r\n        };\r\n\r\n        picker.keyBinds = function (keyBinds) {\r\n            if (arguments.length === 0) {\r\n                return options.keyBinds;\r\n            }\r\n\r\n            options.keyBinds = keyBinds;\r\n            return picker;\r\n        };\r\n\r\n        picker.getMoment = function (d) {\r\n            return getMoment(d);\r\n        };\r\n\r\n        picker.debug = function (debug) {\r\n            if (typeof debug !== 'boolean') {\r\n                throw new TypeError('debug() expects a boolean parameter');\r\n            }\r\n\r\n            options.debug = debug;\r\n            return picker;\r\n        };\r\n\r\n        picker.allowInputToggle = function (allowInputToggle) {\r\n            if (arguments.length === 0) {\r\n                return options.allowInputToggle;\r\n            }\r\n\r\n            if (typeof allowInputToggle !== 'boolean') {\r\n                throw new TypeError('allowInputToggle() expects a boolean parameter');\r\n            }\r\n\r\n            options.allowInputToggle = allowInputToggle;\r\n            return picker;\r\n        };\r\n\r\n        picker.showClose = function (showClose) {\r\n            if (arguments.length === 0) {\r\n                return options.showClose;\r\n            }\r\n\r\n            if (typeof showClose !== 'boolean') {\r\n                throw new TypeError('showClose() expects a boolean parameter');\r\n            }\r\n\r\n            options.showClose = showClose;\r\n            return picker;\r\n        };\r\n\r\n        picker.keepInvalid = function (keepInvalid) {\r\n            if (arguments.length === 0) {\r\n                return options.keepInvalid;\r\n            }\r\n\r\n            if (typeof keepInvalid !== 'boolean') {\r\n                throw new TypeError('keepInvalid() expects a boolean parameter');\r\n            }\r\n            options.keepInvalid = keepInvalid;\r\n            return picker;\r\n        };\r\n\r\n        picker.datepickerInput = function (datepickerInput) {\r\n            if (arguments.length === 0) {\r\n                return options.datepickerInput;\r\n            }\r\n\r\n            if (typeof datepickerInput !== 'string') {\r\n                throw new TypeError('datepickerInput() expects a string parameter');\r\n            }\r\n\r\n            options.datepickerInput = datepickerInput;\r\n            return picker;\r\n        };\r\n\r\n        picker.parseInputDate = function (parseInputDate) {\r\n            if (arguments.length === 0) {\r\n                return options.parseInputDate;\r\n            }\r\n\r\n            if (typeof parseInputDate !== 'function') {\r\n                throw new TypeError('parseInputDate() sholud be as function');\r\n            }\r\n\r\n            options.parseInputDate = parseInputDate;\r\n\r\n            return picker;\r\n        };\r\n\r\n        picker.disabledTimeIntervals = function (disabledTimeIntervals) {\r\n            ///<signature helpKeyword=\"$.fn.datetimepicker.disabledTimeIntervals\">\r\n            ///<summary>Returns an array with the currently set disabled dates on the component.</summary>\r\n            ///<returns type=\"array\">options.disabledTimeIntervals</returns>\r\n            ///</signature>\r\n            ///<signature>\r\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\r\n            ///options.enabledDates if such exist.</summary>\r\n            ///<param name=\"dates\" locid=\"$.fn.datetimepicker.disabledTimeIntervals_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\r\n            ///</signature>\r\n            if (arguments.length === 0) {\r\n                return (options.disabledTimeIntervals ? $.extend({}, options.disabledTimeIntervals) : options.disabledTimeIntervals);\r\n            }\r\n\r\n            if (!disabledTimeIntervals) {\r\n                options.disabledTimeIntervals = false;\r\n                update();\r\n                return picker;\r\n            }\r\n            if (!(disabledTimeIntervals instanceof Array)) {\r\n                throw new TypeError('disabledTimeIntervals() expects an array parameter');\r\n            }\r\n            options.disabledTimeIntervals = disabledTimeIntervals;\r\n            update();\r\n            return picker;\r\n        };\r\n\r\n        picker.disabledHours = function (hours) {\r\n            ///<signature helpKeyword=\"$.fn.datetimepicker.disabledHours\">\r\n            ///<summary>Returns an array with the currently set disabled hours on the component.</summary>\r\n            ///<returns type=\"array\">options.disabledHours</returns>\r\n            ///</signature>\r\n            ///<signature>\r\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\r\n            ///options.enabledHours if such exist.</summary>\r\n            ///<param name=\"hours\" locid=\"$.fn.datetimepicker.disabledHours_p:hours\">Takes an [ int ] of values and disallows the user to select only from those hours.</param>\r\n            ///</signature>\r\n            if (arguments.length === 0) {\r\n                return (options.disabledHours ? $.extend({}, options.disabledHours) : options.disabledHours);\r\n            }\r\n\r\n            if (!hours) {\r\n                options.disabledHours = false;\r\n                update();\r\n                return picker;\r\n            }\r\n            if (!(hours instanceof Array)) {\r\n                throw new TypeError('disabledHours() expects an array parameter');\r\n            }\r\n            options.disabledHours = indexGivenHours(hours);\r\n            options.enabledHours = false;\r\n            if (options.useCurrent && !options.keepInvalid) {\r\n                var tries = 0;\r\n                while (!isValid(date, 'h')) {\r\n                    date.add(1, 'h');\r\n                    if (tries === 24) {\r\n                        throw 'Tried 24 times to find a valid date';\r\n                    }\r\n                    tries++;\r\n                }\r\n                setValue(date);\r\n            }\r\n            update();\r\n            return picker;\r\n        };\r\n\r\n        picker.enabledHours = function (hours) {\r\n            ///<signature helpKeyword=\"$.fn.datetimepicker.enabledHours\">\r\n            ///<summary>Returns an array with the currently set enabled hours on the component.</summary>\r\n            ///<returns type=\"array\">options.enabledHours</returns>\r\n            ///</signature>\r\n            ///<signature>\r\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of options.disabledHours if such exist.</summary>\r\n            ///<param name=\"hours\" locid=\"$.fn.datetimepicker.enabledHours_p:hours\">Takes an [ int ] of values and allows the user to select only from those hours.</param>\r\n            ///</signature>\r\n            if (arguments.length === 0) {\r\n                return (options.enabledHours ? $.extend({}, options.enabledHours) : options.enabledHours);\r\n            }\r\n\r\n            if (!hours) {\r\n                options.enabledHours = false;\r\n                update();\r\n                return picker;\r\n            }\r\n            if (!(hours instanceof Array)) {\r\n                throw new TypeError('enabledHours() expects an array parameter');\r\n            }\r\n            options.enabledHours = indexGivenHours(hours);\r\n            options.disabledHours = false;\r\n            if (options.useCurrent && !options.keepInvalid) {\r\n                var tries = 0;\r\n                while (!isValid(date, 'h')) {\r\n                    date.add(1, 'h');\r\n                    if (tries === 24) {\r\n                        throw 'Tried 24 times to find a valid date';\r\n                    }\r\n                    tries++;\r\n                }\r\n                setValue(date);\r\n            }\r\n            update();\r\n            return picker;\r\n        };\r\n        /**\r\n         * Returns the component's model current viewDate, a moment object or null if not set. Passing a null value unsets the components model current moment. Parsing of the newDate parameter is made using moment library with the options.format and options.useStrict components configuration.\r\n         * @param {Takes string, viewDate, moment, null parameter.} newDate\r\n         * @returns {viewDate.clone()}\r\n         */\r\n        picker.viewDate = function (newDate) {\r\n            if (arguments.length === 0) {\r\n                return viewDate.clone();\r\n            }\r\n\r\n            if (!newDate) {\r\n                viewDate = date.clone();\r\n                return picker;\r\n            }\r\n\r\n            if (typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {\r\n                throw new TypeError('viewDate() parameter must be one of [string, moment or Date]');\r\n            }\r\n\r\n            viewDate = parseInputDate(newDate);\r\n            viewUpdate();\r\n            return picker;\r\n        };\r\n\r\n        // initializing element and component attributes\r\n        if (element.is('input')) {\r\n            input = element;\r\n        } else {\r\n            input = element.find(options.datepickerInput);\r\n            if (input.length === 0) {\r\n                input = element.find('input');\r\n            } else if (!input.is('input')) {\r\n                throw new Error('CSS class \"' + options.datepickerInput + '\" cannot be applied to non input element');\r\n            }\r\n        }\r\n\r\n        if (element.hasClass('input-group')) {\r\n            // in case there is more then one 'input-group-addon' Issue #48\r\n            if (element.find('.datepickerbutton').length === 0) {\r\n                component = element.find('.input-group-addon');\r\n            } else {\r\n                component = element.find('.datepickerbutton');\r\n            }\r\n        }\r\n\r\n        if (!options.inline && !input.is('input')) {\r\n            throw new Error('Could not initialize DateTimePicker without an input element');\r\n        }\r\n\r\n        // Set defaults for date here now instead of in var declaration\r\n        date = getMoment();\r\n        viewDate = date.clone();\r\n\r\n        $.extend(true, options, dataToOptions());\r\n\r\n        picker.options(options);\r\n\r\n        initFormatting();\r\n\r\n        attachDatePickerElementEvents();\r\n\r\n        if (input.prop('disabled')) {\r\n            picker.disable();\r\n        }\r\n        if (input.is('input') && input.val().trim().length !== 0) {\r\n            setValue(parseInputDate(input.val().trim()));\r\n        }\r\n        else if (options.defaultDate && input.attr('placeholder') === undefined) {\r\n            setValue(options.defaultDate);\r\n        }\r\n        if (options.inline) {\r\n            show();\r\n        }\r\n        return picker;\r\n    };\r\n\r\n    /********************************************************************************\r\n     *\r\n     * jQuery plugin constructor and defaults object\r\n     *\r\n     ********************************************************************************/\r\n\r\n    /**\r\n    * See (http://jquery.com/).\r\n    * @name jQuery\r\n    * @class\r\n    * See the jQuery Library  (http://jquery.com/) for full details.  This just\r\n    * documents the function and classes that are added to jQuery by this plug-in.\r\n    */\r\n    /**\r\n     * See (http://jquery.com/)\r\n     * @name fn\r\n     * @class\r\n     * See the jQuery Library  (http://jquery.com/) for full details.  This just\r\n     * documents the function and classes that are added to jQuery by this plug-in.\r\n     * @memberOf jQuery\r\n     */\r\n    /**\r\n     * Show comments\r\n     * @class datetimepicker\r\n     * @memberOf jQuery.fn\r\n     */\r\n    $.fn.datetimepicker = function (options) {\r\n        options = options || {};\r\n\r\n        var args = Array.prototype.slice.call(arguments, 1),\r\n            isInstance = true,\r\n            thisMethods = ['destroy', 'hide', 'show', 'toggle'],\r\n            returnValue;\r\n\r\n        if (typeof options === 'object') {\r\n            return this.each(function () {\r\n                var $this = $(this),\r\n                    _options;\r\n                if (!$this.data('DateTimePicker')) {\r\n                    // create a private copy of the defaults object\r\n                    _options = $.extend(true, {}, $.fn.datetimepicker.defaults, options);\r\n                    $this.data('DateTimePicker', dateTimePicker($this, _options));\r\n                }\r\n            });\r\n        } else if (typeof options === 'string') {\r\n            this.each(function () {\r\n                var $this = $(this),\r\n                    instance = $this.data('DateTimePicker');\r\n                if (!instance) {\r\n                    throw new Error('bootstrap-datetimepicker(\"' + options + '\") method was called on an element that is not using DateTimePicker');\r\n                }\r\n\r\n                returnValue = instance[options].apply(instance, args);\r\n                isInstance = returnValue === instance;\r\n            });\r\n\r\n            if (isInstance || $.inArray(options, thisMethods) > -1) {\r\n                return this;\r\n            }\r\n\r\n            return returnValue;\r\n        }\r\n\r\n        throw new TypeError('Invalid arguments for DateTimePicker: ' + options);\r\n    };\r\n\r\n    $.fn.datetimepicker.defaults = {\r\n        timeZone: '',\r\n        format: false,\r\n        dayViewHeaderFormat: 'MMMM YYYY',\r\n        extraFormats: false,\r\n        stepping: 1,\r\n        minDate: false,\r\n        maxDate: false,\r\n        useCurrent: true,\r\n        collapse: true,\r\n        locale: moment.locale(),\r\n        defaultDate: false,\r\n        disabledDates: false,\r\n        enabledDates: false,\r\n        icons: {\r\n            time: 'glyphicon glyphicon-time',\r\n            date: 'glyphicon glyphicon-calendar',\r\n            up: 'glyphicon glyphicon-chevron-up',\r\n            down: 'glyphicon glyphicon-chevron-down',\r\n            previous: 'glyphicon glyphicon-chevron-left',\r\n            next: 'glyphicon glyphicon-chevron-right',\r\n            today: 'glyphicon glyphicon-screenshot',\r\n            clear: 'glyphicon glyphicon-trash',\r\n            close: 'glyphicon glyphicon-remove'\r\n        },\r\n        tooltips: {\r\n            today: 'Go to today',\r\n            clear: 'Clear selection',\r\n            close: 'Close the picker',\r\n            selectMonth: 'Select Month',\r\n            prevMonth: 'Previous Month',\r\n            nextMonth: 'Next Month',\r\n            selectYear: 'Select Year',\r\n            prevYear: 'Previous Year',\r\n            nextYear: 'Next Year',\r\n            selectDecade: 'Select Decade',\r\n            prevDecade: 'Previous Decade',\r\n            nextDecade: 'Next Decade',\r\n            prevCentury: 'Previous Century',\r\n            nextCentury: 'Next Century',\r\n            pickHour: 'Pick Hour',\r\n            incrementHour: 'Increment Hour',\r\n            decrementHour: 'Decrement Hour',\r\n            pickMinute: 'Pick Minute',\r\n            incrementMinute: 'Increment Minute',\r\n            decrementMinute: 'Decrement Minute',\r\n            pickSecond: 'Pick Second',\r\n            incrementSecond: 'Increment Second',\r\n            decrementSecond: 'Decrement Second',\r\n            togglePeriod: 'Toggle Period',\r\n            selectTime: 'Select Time'\r\n        },\r\n        useStrict: false,\r\n        sideBySide: false,\r\n        daysOfWeekDisabled: false,\r\n        calendarWeeks: false,\r\n        viewMode: 'days',\r\n        toolbarPlacement: 'default',\r\n        showTodayButton: false,\r\n        showClear: false,\r\n        showClose: false,\r\n        widgetPositioning: {\r\n            horizontal: 'auto',\r\n            vertical: 'auto'\r\n        },\r\n        widgetParent: null,\r\n        ignoreReadonly: false,\r\n        keepOpen: false,\r\n        focusOnShow: true,\r\n        inline: false,\r\n        keepInvalid: false,\r\n        datepickerInput: '.datepickerinput',\r\n        keyBinds: {\r\n            up: function (widget) {\r\n                if (!widget) {\r\n                    return;\r\n                }\r\n                var d = this.date() || this.getMoment();\r\n                if (widget.find('.datepicker').is(':visible')) {\r\n                    this.date(d.clone().subtract(7, 'd'));\r\n                } else {\r\n                    this.date(d.clone().add(this.stepping(), 'm'));\r\n                }\r\n            },\r\n            down: function (widget) {\r\n                if (!widget) {\r\n                    this.show();\r\n                    return;\r\n                }\r\n                var d = this.date() || this.getMoment();\r\n                if (widget.find('.datepicker').is(':visible')) {\r\n                    this.date(d.clone().add(7, 'd'));\r\n                } else {\r\n                    this.date(d.clone().subtract(this.stepping(), 'm'));\r\n                }\r\n            },\r\n            'control up': function (widget) {\r\n                if (!widget) {\r\n                    return;\r\n                }\r\n                var d = this.date() || this.getMoment();\r\n                if (widget.find('.datepicker').is(':visible')) {\r\n                    this.date(d.clone().subtract(1, 'y'));\r\n                } else {\r\n                    this.date(d.clone().add(1, 'h'));\r\n                }\r\n            },\r\n            'control down': function (widget) {\r\n                if (!widget) {\r\n                    return;\r\n                }\r\n                var d = this.date() || this.getMoment();\r\n                if (widget.find('.datepicker').is(':visible')) {\r\n                    this.date(d.clone().add(1, 'y'));\r\n                } else {\r\n                    this.date(d.clone().subtract(1, 'h'));\r\n                }\r\n            },\r\n            left: function (widget) {\r\n                if (!widget) {\r\n                    return;\r\n                }\r\n                var d = this.date() || this.getMoment();\r\n                if (widget.find('.datepicker').is(':visible')) {\r\n                    this.date(d.clone().subtract(1, 'd'));\r\n                }\r\n            },\r\n            right: function (widget) {\r\n                if (!widget) {\r\n                    return;\r\n                }\r\n                var d = this.date() || this.getMoment();\r\n                if (widget.find('.datepicker').is(':visible')) {\r\n                    this.date(d.clone().add(1, 'd'));\r\n                }\r\n            },\r\n            pageUp: function (widget) {\r\n                if (!widget) {\r\n                    return;\r\n                }\r\n                var d = this.date() || this.getMoment();\r\n                if (widget.find('.datepicker').is(':visible')) {\r\n                    this.date(d.clone().subtract(1, 'M'));\r\n                }\r\n            },\r\n            pageDown: function (widget) {\r\n                if (!widget) {\r\n                    return;\r\n                }\r\n                var d = this.date() || this.getMoment();\r\n                if (widget.find('.datepicker').is(':visible')) {\r\n                    this.date(d.clone().add(1, 'M'));\r\n                }\r\n            },\r\n            enter: function () {\r\n                this.hide();\r\n            },\r\n            escape: function () {\r\n                this.hide();\r\n            },\r\n            //tab: function (widget) { //this break the flow of the form. disabling for now\r\n            //    var toggle = widget.find('.picker-switch a[data-action=\"togglePicker\"]');\r\n            //    if(toggle.length > 0) toggle.click();\r\n            //},\r\n            'control space': function (widget) {\r\n                if (!widget) {\r\n                    return;\r\n                }\r\n                if (widget.find('.timepicker').is(':visible')) {\r\n                    widget.find('.btn[data-action=\"togglePeriod\"]').click();\r\n                }\r\n            },\r\n            t: function () {\r\n                this.date(this.getMoment());\r\n            },\r\n            'delete': function () {\r\n                this.clear();\r\n            }\r\n        },\r\n        debug: false,\r\n        allowInputToggle: false,\r\n        disabledTimeIntervals: false,\r\n        disabledHours: false,\r\n        enabledHours: false,\r\n        viewDate: false\r\n    };\r\n\r\n    return $.fn.datetimepicker;\r\n}));\r\n"},528:function(e,n,t){t(510)(t(527))},529:function(e,n,t){var r=t(526);"string"==typeof r&&(r=[[e.i,r,""]]);t(535)(r,{});r.locals&&(e.exports=r.locals)},530:function(module,__webpack_exports__,__webpack_require__){"use strict";function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function _inherits(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}function mapStateToProps(e){return{language:e.language,routing:e.routing}}var __WEBPACK_IMPORTED_MODULE_0_react__=__webpack_require__(0),__WEBPACK_IMPORTED_MODULE_0_react___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__),__WEBPACK_IMPORTED_MODULE_1_react_dom__=__webpack_require__(17),__WEBPACK_IMPORTED_MODULE_1_react_dom___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__),__WEBPACK_IMPORTED_MODULE_2_react_redux__=__webpack_require__(531),__WEBPACK_IMPORTED_MODULE_2_react_redux___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_redux__),__WEBPACK_IMPORTED_MODULE_3__index__=__webpack_require__(513),__WEBPACK_IMPORTED_MODULE_4__modal_dialog_DialogModalButton__=__webpack_require__(524),__WEBPACK_IMPORTED_MODULE_5__ui_uiDialog__=__webpack_require__(536),_createClass=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),Table=function(_React$Component){function Table(e){_classCallCheck(this,Table);var n=_possibleConstructorReturn(this,(Table.__proto__||Object.getPrototypeOf(Table)).call(this,e));n.componentDidMount=n.componentDidMount.bind(n),n.handleInputChange=n.handleInputChange.bind(n);var t=n.props.language;return n.state={lang:t.language.key,search:"",table:null,schema:n.props.schema,regex:!0},n}return _inherits(Table,_React$Component),_createClass(Table,[{key:"convertDataParams",value:function(e,n){return n.reduce(function(n,t){return n[t]=e[t],n},{})}},{key:"handleInputChange",value:function(e){if(this.setState({regex:e.target.checked}),null!==this.state.table){var n=this.state.table.search();this.setState({search:n}),this.state.table.search(n,e.target.checked).draw()}}},{key:"initDatatble",value:function initDatatble(lang){var _this2=this,schema=this.state.schema,attributes=schema.schema,columns=[];attributes.map(function(e,n){var t={data:e.name,searchable:!0};"undefined"!==e.class&&(t.className=e.class),"undefined"!==e.visible&&(t.visible=e.visible),"undefined"!==e.priority&&(t.responsivePriority=e.priority),columns.push(t)});var ajax_options={url:schema.ajaxTable.url,type:schema.ajaxTable.method,contentType:"application/json",processData:!1,beforeSend:function(e,n){var t=n.data;n.data=JSON.stringify(t)},error:function(e,n,t){var r=e.responseJSON&&e.responseJSON.error?e.responseJSON.error:e.responseText;__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__ui_uiDialog__.a)("Loaded data error",r)}};schema.ajaxTable.token&&(ajax_options.headers={Authorization:localStorage.getItem("token")}),schema.ajaxTable.data&&(ajax_options.data=_.extend(this.convertDataParams(schema,schema.ajaxTable.data),{lang:lang}));var createUrl=void 0,deleteUrl=void 0,getUrl=void 0,updateUrl=void 0,infoUrl=void 0;["deleteUrl","createUrl","getUrl","updateUrl"].forEach(function(name){schema[name]&&(eval(name+" = "+JSON.stringify(schema[name])),void 0!==schema[name].data&&([name].data=_.extend(_this2.convertDataParams(schema,schema[name].data),{lang:lang})))});var props=this.props,table_identifier="#"+props.identifier,buttons=[{text:'<i class="fa fa-refresh"/> Refresh',titleAttr:"Refresh all data",className:"btn-sm",responsivePriority:3,action:function(e,n,t,r){this.ajax.reload(null,!1)}},{extend:"colvis",text:'<i class="fa fa-columns"/> Visibility',titleAttr:"Choose visible column",className:"btn-sm",columns:schema.edit?":not(:last-child)":""},{extend:"print",text:'<i class="fa fa-print"/> Print',titleAttr:"Print all data on current page",autoPrint:!1,exportOptions:{columns:":not(:last-child)",modifier:{page:"current"}}}];schema.create&&buttons.unshift({text:'<i class="fa fa-plus-circle"/> Add',titleAttr:"Add new record",responsivePriority:2,className:"create-record-"+table_identifier});var options={dom:"<'dt-toolbar'<'col-xs-12 col-sm-6' f<'#regex-search-checkbox'>><'col-sm-6 col-xs-12 hidden-xs text-right'Bl>r>t<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",oLanguage:{sSearch:"<span class='input-group-addon input-sm'><i class='glyphicon glyphicon-search'></i></span> ",sLengthMenu:"_MENU_"},retrieve:!0,autoWidth:!1,processing:!0,serverSide:!0,search:{regex:this.state.regex,smart:!1},columnDefs:[{visible:!1,targets:0}],ajax:ajax_options,columns:columns,buttons:buttons};if(schema.edit||schema.info){var button_columns=[{orderable:!1,data:null,targets:-1,createdCell:function(e,n){var t=n[schema.pk];$(e).parent("tr").attr("data-row-id",t);var r=__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div",null);schema.edit&&(r=__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div",{className:"btn-group"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__modal_dialog_DialogModalButton__.a,{header:"<h4>Editing</h4>",modal:!0,edit:!0,attributes:attributes,pk:t,ajax:getUrl,saveAction:updateUrl,tableIdentifier:table_identifier}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__modal_dialog_DialogModalButton__.a,{header:"<h4><i class='fa fa-warning'/> Are you sure do you want to remove?</h4>",modal:!0,delete:!0,pk:t,tableIdentifier:table_identifier,ajax:deleteUrl}))),schema.info&&(r=__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__modal_dialog_DialogModalButton__.a,{header:"<h4>Details</h4>",modal:!0,pk:t,tableIdentifier:table_identifier,info:!0,template:props.infoTemplate,ajax:getUrl})),__WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.render(r,e)},responsivePriority:1}];$.merge(options.columns,button_columns)}props.options&&(options=$.extend({},props.options,options));var table=$(table_identifier).DataTable(options);if(table.column(0).visible(!1),__WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.render(__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("label",null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input",{id:"regex-search",name:"regex",type:"checkbox",defaultChecked:this.state.regex,onChange:this.handleInputChange}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("label",{htmlFor:"regex-search"},"FullText Search")),document.getElementById("regex-search-checkbox")),schema.create){var create_button=document.getElementsByClassName("create-record-"+table_identifier)[0],temp=document.createElement("div");__WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.render(__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__modal_dialog_DialogModalButton__.a,{header:"<h4>Creating</h4>",modal:!0,add:!0,attributes:attributes,className:"dt-button",saveAction:createUrl,title:"Add",titleAttr:"Add new record",tableIdentifier:table_identifier}),temp),temp.setAttribute("class","dt-buttons"),create_button.replaceWith(temp)}this.setState({table:table,lang:lang})}},{key:"componentDidMount",value:function(){var e=this;__webpack_require__.e(2).then(__webpack_require__.bind(null,537)).then(function(){$.extend($.fn.dataTableExt.oStdClasses,{sFilterInput:"form-control input-sm",sLengthSelect:"form-control input-sm"});var n=e.props,t=n.language,r=(n.routing,t.language.key);e.initDatatble(r)})}},{key:"shouldComponentUpdate",value:function(e,n){var t=e.language,r=e.routing,a=r.locationBeforeTransitions.query.search?r.locationBeforeTransitions.query.search:"",i=!1;return t.language.key!==n.lang&&(i=!0,null!==n.table&&n.table.destroy(),this.initDatatble(t.language.key)),null!==n.table&&a!==n.search&&(i=!0,n.table.search(a,n.regex).draw()),i}},{key:"render",value:function(){var e=this.props.schema.schema.map(function(e,n){var t="",r="";if(e.icon){var a="txt-color-blue hidden-md hidden-sm hidden-xs "+e.icon;t=__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i",{className:a})}var i=e.title;return""==i&&(i=e.name,r="text-capitalize"),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("th",{key:n,className:r,"data-hide":"phone,tablet"},t,i)});return(this.props.schema.edit||this.props.schema.info)&&e.push(__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("th",{key:"settings","data-hide":"phone,tablet"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i",{className:"fa fa-fw fa-cogs txt-color-blue hidden-md hidden-sm hidden-xs"}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div",{id:"content"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div",{className:"row"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__index__.a,{items:this.props.breadcrumbs,icon:"fa fa-fw fa-table",className:"col-xs-12 col-sm-7 col-md-7 col-lg-4"})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__index__.c,null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div",{className:"row"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("article",{className:"col-sm-12"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__index__.d,{editbutton:!1,color:"blueDark"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("header",null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("span",{className:"widget-icon"}," ",__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i",{className:"fa fa-table"})," "),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("h2",null," ",this.props.title)),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div",null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div",{className:"widget-body no-padding"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("table",{id:this.props.identifier,className:"table table-responsive table-striped table-bordered table-hover",width:"100%"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("thead",null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("tr",null,e))))))))))}}]),Table}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component),_default=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_react_redux__.connect)(mapStateToProps)(Table),_default2=_default;__webpack_exports__.a=_default2;var _temp=function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(Table,"Table","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/table-schema/Table.js"),__REACT_HOT_LOADER__.register(mapStateToProps,"mapStateToProps","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/table-schema/Table.js"),__REACT_HOT_LOADER__.register(_default,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/table-schema/Table.js"),__REACT_HOT_LOADER__.register(_default2,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/components/table-schema/Table.js"))}(),_temp2=void 0},696:function(e,n,t){"use strict";function r(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function a(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function i(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}Object.defineProperty(n,"__esModule",{value:!0});var o=t(0),s=t.n(o),l=t(530),d=t(740),p=t.n(d),c=t(534),h=t.n(c),u=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),f=function(e){function n(){return r(this,n),a(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return i(n,e),u(n,[{key:"render",value:function(){var e=Object.assign({},h.a.gettext,p.a);return s.a.createElement(l.a,{title:"Lens category",schema:e,breadcrumbs:["Translations","Lens category"],identifier:"tintCatsTable"})}}]),n}(s.a.Component),g=f,m=g;n.default=m;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(f,"LenCatsTable","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/routes/translations/containers/LenCatsTable.js"),__REACT_HOT_LOADER__.register(g,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/routes/translations/containers/LenCatsTable.js"),__REACT_HOT_LOADER__.register(m,"default","C:/OpenServer/domains/SmartAdmin/seed-project/src/app/routes/translations/containers/LenCatsTable.js"))}()},740:function(e,n){e.exports={schema:[{name:"_id",type:"hidden",class:"",readonly:!0,visible:!1,title:"ID",icon:"",priority:1},{name:"__service.created",type:"datetime",class:"",readonly:!0,visible:!0,autoCreate:!0,title:"Created date",icon:"fa fa-fw fa-calendar"},{name:"__service.updated",type:"datetime",class:"",readonly:!0,visible:!0,autoCreate:!0,title:"",icon:"fa fa-fw fa-calendar",priority:2},{name:"value.name",type:"html",class:"",readonly:!1,visible:!0,title:"",icon:"",priority:3},{name:"urls",type:"textarea",class:"",readonly:!1,visible:!0,title:"",icon:"",priority:10}],datatype:"lens_category",pk:"_id"}}});